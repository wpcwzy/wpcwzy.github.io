{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/beian.png","path":"images/beian.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/klee.jpg","path":"images/klee.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/lib/pjax/LICENSE","path":"lib/pjax/LICENSE","modified":0,"renderable":0},{"_id":"source/lib/pjax/index.d.ts","path":"lib/pjax/index.d.ts","modified":0,"renderable":0},{"_id":"source/lib/pjax/tests/test.ts","path":"lib/pjax/tests/test.ts","modified":0,"renderable":0}],"Cache":[{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1686851552871},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1686851552871},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1686851552871},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1686851552871},{"_id":"themes/next/_config.yml","hash":"ccd41ed5fc3027f81834c30fe4b67c0dac742dea","modified":1686851552871},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1686851552879},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1686851552871},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1686851552871},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1686851552871},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1686851552871},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1686851552871},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1686851552871},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1686851552871},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1686851552871},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1686851552871},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1686851552871},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1686851552875},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1686851552875},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1686851552875},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1686851552875},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1686851552875},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1686851552875},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1686851552875},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1686851552875},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1686851552875},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1686851552875},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1686851552875},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1686851552875},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1686851552875},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1686851552875},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1686851552875},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1686851552875},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1686851552875},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1686851552875},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1686851552875},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1686851552875},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1686851552875},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1686851552875},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1686851552879},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1686851552879},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1686851552879},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1686851552879},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1686851552879},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1686851552879},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1686851552879},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1686851552871},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1686851552871},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1686851552871},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1686851552871},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1686851552871},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1686851552871},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1686851552871},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1686851552871},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1686851552871},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1686851552871},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1686851552871},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1686851552871},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1686851552871},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1686851552875},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1686851552875},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1686851552875},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1686851552875},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1686851552875},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1686851552875},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1686851552875},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1686851552875},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1686851552875},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1686851552875},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1686851552875},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1686851552875},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1686851552875},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1686851552875},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1686851552879},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1686851552879},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1686851552879},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1686851552879},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1686851552879},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1686851552879},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1686851552879},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1686851552879},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1686851552879},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1686851552879},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1686851552879},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1686851552879},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1686851552879},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1686851552879},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1686851552879},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1686851552879},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1686851552879},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1686851552879},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1686851552879},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1686851552879},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1686851552879},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1686851552879},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1686851552879},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1686851552879},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1686851552883},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1686851552883},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1686851552883},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1686851552883},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1686851552883},{"_id":"themes/next/source/images/beian.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1686852475562},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1686851552883},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1686851552883},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1686851552883},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1686851552883},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1686851552883},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1686851552887},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1686851552887},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1686851552887},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1686851552887},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1686851552887},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1686851552887},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1686851552887},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1686851552887},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1686851552887},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1686851552887},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1686851552887},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1686851552887},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1686851552875},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1686851552875},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1686851552875},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1686851552875},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1686851552875},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1686851552875},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1686851552875},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1686851552875},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1686851552875},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1686851552875},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1686851552875},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1686851552875},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1686851552875},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1686851552875},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1686851552875},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1686851552875},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1686851552875},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1686851552875},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1686851552875},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1686851552875},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1686851552875},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1686851552875},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1686851552875},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1686851552875},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1686851552875},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1686851552875},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1686851552875},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1686851552875},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1686851552879},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1686851552879},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1686851552879},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1686851552879},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1686851552879},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1686851552879},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1686851552879},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1686851552879},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1686851552879},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1686851552879},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1686851552879},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1686851552879},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1686851552879},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1686851552879},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1686851552879},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1686851552879},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1686851552879},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1686851552879},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1686851552879},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1686851552879},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1686851552879},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1686851552879},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1686851552879},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1686851552879},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1686851552879},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1686851552879},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1686851552879},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1686851552879},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1686851552879},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1686851552879},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1686851552879},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1686851552883},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1686851552883},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1686851552883},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1686851552883},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1686851552883},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1686851552887},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1686851552887},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1686851552887},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1686851552887},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1686851552883},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1686851552883},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1686851552887},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1686851552887},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1686851552883},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1686851552883},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1686851552883},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1686851552883},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1686851552883},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1686851552883},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1686851552883},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1686851552883},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1686851552879},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1686851552879},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1686851552887},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1686851552887},{"_id":"source/CNAME","hash":"0552e286e92bb122385808a07b5b7bb0a02a4625","modified":1686850423940},{"_id":"source/404/index.md","hash":"20b65cc9ccf43e1b381d10f2c9af5b0613a22ee1","modified":1686852876260},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1686850459775},{"_id":"source/about/index.md","hash":"2dbf745931807d7d1e8b5157aa34d804591f0c54","modified":1686853070657},{"_id":"source/categories/index.md","hash":"f2f73f63456b916d03d2378cac5c0d4e367880c3","modified":1686853060853},{"_id":"source/tags/index.md","hash":"4b0d691b3b548fdd400150bd7871cc18af39bcfa","modified":1686853040405},{"_id":"source/lib/pjax/.editorconfig","hash":"c064a6369e31f846061fec42fd20c94cd34baebf","modified":1686854537930},{"_id":"source/lib/pjax/.eslintignore","hash":"9039b3607514f44ee5955e986ee96920ea324398","modified":1686854537930},{"_id":"source/lib/pjax/.eslintrc.json","hash":"cdbc258b29270771e1846aeacc67198d0aed5447","modified":1686854537930},{"_id":"source/lib/pjax/.gitignore","hash":"af77252405d1ae97b1d4139b53f2684b64d87596","modified":1686854537930},{"_id":"source/lib/pjax/.prettierignore","hash":"9039b3607514f44ee5955e986ee96920ea324398","modified":1686854537930},{"_id":"source/lib/pjax/.travis.yml","hash":"0948420e18b2cec89c40093da5c7c14fa4c9bc5d","modified":1686854537930},{"_id":"source/lib/pjax/CHANGELOG.md","hash":"4482a245ac2c867102490c71d0fcbb502be0e3e5","modified":1686854537930},{"_id":"source/lib/pjax/LICENSE","hash":"0cadc79604daeacf95062d1e5ccd43edbfaed836","modified":1686854537930},{"_id":"source/lib/pjax/README.md","hash":"6e83f73f2c43fc4f85eda51daed5c321ec55c83c","modified":1686854537930},{"_id":"source/lib/pjax/index.d.ts","hash":"b90fe99fe90ee7024d760467e75565da561f7ccd","modified":1686854537930},{"_id":"source/lib/pjax/index.js","hash":"4af61bcf253ce67d67bb0f524b441869301de9a5","modified":1686854537930},{"_id":"source/lib/pjax/package.json","hash":"1c0055fc51eee37e39ca9d5b6ea5078677b20201","modified":1686854537934},{"_id":"source/lib/pjax/pjax.js","hash":"e973e2c6ffb6f6d7b4a1730ba0ed6d3628b2b39f","modified":1686854537934},{"_id":"source/lib/pjax/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1686854537930},{"_id":"source/lib/pjax/pjax.min.js","hash":"68d0c6ad28f042c78fc18a6e9d782a7047c01905","modified":1686854537934},{"_id":"source/lib/pjax/.git/config","hash":"4f9af8eb3129525c2195d75e2446be5a846613e8","modified":1686854537930},{"_id":"source/lib/pjax/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1686854536330},{"_id":"source/lib/pjax/.git/packed-refs","hash":"edbdf218d3ec5dca511b8e29e88aebcf725d68ad","modified":1686854537930},{"_id":"source/lib/pjax/.git/index","hash":"fab2ec2e99d2a62697060bb3492fb47a6e27cd52","modified":1686854537934},{"_id":"source/lib/pjax/example/example.js","hash":"48b27c93eb351d2fa91247c35038a9f1627e971a","modified":1686854537930},{"_id":"source/lib/pjax/example/forms.html","hash":"aa62fc6e697e17e16a947eb0176dc24e2e42d72c","modified":1686854537930},{"_id":"source/lib/pjax/example/index.html","hash":"4a00b556253eeb11fc10013c8c3940a019154001","modified":1686854537930},{"_id":"source/lib/pjax/example/page2.html","hash":"7654e0a5a471bec5d74fb88d9f2f218817afdd52","modified":1686854537930},{"_id":"source/lib/pjax/example/page3.html","hash":"8d1d6a9afd80caf29e5b22f10a849b23a864a6a4","modified":1686854537930},{"_id":"source/lib/pjax/lib/abort-request.js","hash":"cbae038c94f70163340801cb608f4e503640b88d","modified":1686854537934},{"_id":"source/lib/pjax/lib/eval-script.js","hash":"d5980b3c5f3c1a95427eab0d7d2263324fb72bca","modified":1686854537934},{"_id":"source/lib/pjax/lib/execute-scripts.js","hash":"8c7c18b14c11af7e2d8dd0146b7df428bf8149bb","modified":1686854537934},{"_id":"source/lib/pjax/lib/foreach-els.js","hash":"d8e50967878930891112f4acb46f47697ddc3ad7","modified":1686854537934},{"_id":"source/lib/pjax/lib/foreach-selectors.js","hash":"b11d36344a7a6aa36d533a335785772c9bfb6bc9","modified":1686854537934},{"_id":"source/lib/pjax/lib/is-supported.js","hash":"62ede7268080ab7efddd64fced8b3e79af2901f6","modified":1686854537934},{"_id":"source/lib/pjax/lib/parse-options.js","hash":"054a902e9f350f7414b80f62419da004dd90aa37","modified":1686854537934},{"_id":"source/lib/pjax/lib/send-request.js","hash":"15c341d066b0d60879ef3ca5ff858103381fb378","modified":1686854537934},{"_id":"source/lib/pjax/lib/switches-selectors.js","hash":"f31b4af163db3d9a5b3bb7c7534a4a2dd5543435","modified":1686854537934},{"_id":"source/lib/pjax/lib/switches.js","hash":"4e283f667c10e0fea15e269f1c73ccb699979bb4","modified":1686854537934},{"_id":"source/lib/pjax/lib/uniqueid.js","hash":"eb127cf8936e5bdcaa7459cf5bd042ff96b5a387","modified":1686854537934},{"_id":"source/lib/pjax/tests/setup.js","hash":"4a9489e72cbe98527931d95d68b68e2d6a9bff6e","modified":1686854537934},{"_id":"source/lib/pjax/tests/test.ts","hash":"3a5222592fc1883ba6d07fbb2095e4bb4866e9d9","modified":1686854537934},{"_id":"source/lib/pjax/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1686854536330},{"_id":"source/lib/pjax/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1686854536330},{"_id":"source/lib/pjax/.git/hooks/fsmonitor-watchman.sample","hash":"118ff5509f187039734d04456bf01e44c933ac19","modified":1686854536330},{"_id":"source/lib/pjax/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1686854536330},{"_id":"source/lib/pjax/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1686854536330},{"_id":"source/lib/pjax/.git/hooks/pre-commit.sample","hash":"a79d057388ee2c2fe6561d7697f1f5efcff96f23","modified":1686854536330},{"_id":"source/lib/pjax/.git/hooks/pre-merge-commit.sample","hash":"04c64e58bc25c149482ed45dbd79e40effb89eb7","modified":1686854536330},{"_id":"source/lib/pjax/.git/hooks/pre-push.sample","hash":"a599b773b930ca83dbc3a5c7c13059ac4a6eaedc","modified":1686854536330},{"_id":"source/lib/pjax/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1686854536330},{"_id":"source/lib/pjax/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1686854536330},{"_id":"source/lib/pjax/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1686854536330},{"_id":"source/lib/pjax/.git/hooks/push-to-checkout.sample","hash":"508240328c8b55f8157c93c43bf5e291e5d2fbcb","modified":1686854536330},{"_id":"source/lib/pjax/.git/hooks/update.sample","hash":"730e6bd5225478bab6147b7a62a6e2ae21d40507","modified":1686854536330},{"_id":"source/lib/pjax/.git/logs/HEAD","hash":"1d15ee7dfe037a3ffc035f4e3ac89d435651574b","modified":1686854537930},{"_id":"source/lib/pjax/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1686854536330},{"_id":"source/lib/pjax/lib/events/off.js","hash":"79920b24246e150f1c73511f1a271b93b9c5d9c8","modified":1686854537934},{"_id":"source/lib/pjax/lib/events/on.js","hash":"111fba16cc4ca701aefedea2589c832b60af303d","modified":1686854537934},{"_id":"source/lib/pjax/lib/events/trigger.js","hash":"c05ba73199c5e2c7682655491ed37743bd451751","modified":1686854537934},{"_id":"source/lib/pjax/lib/proto/attach-form.js","hash":"b41c66e58897e6371fbd04cd2b9eb7bae10e0d89","modified":1686854537934},{"_id":"source/lib/pjax/lib/proto/attach-link.js","hash":"d15a61235aa8c1615e60ea34d9bbee834be804d0","modified":1686854537934},{"_id":"source/lib/pjax/lib/proto/log.js","hash":"c728730594aed7d81509787c5bb487af014415e1","modified":1686854537934},{"_id":"source/lib/pjax/lib/proto/handle-response.js","hash":"f68bab958cce4dbbcb91920d7a8aba55b9066b41","modified":1686854537934},{"_id":"source/lib/pjax/lib/proto/parse-element.js","hash":"52bef8a845aab0d54907f73875fa58b4084019be","modified":1686854537934},{"_id":"source/lib/pjax/lib/util/clone.js","hash":"55027b88e007818c6963205fcd0090a61af8237c","modified":1686854537934},{"_id":"source/lib/pjax/lib/util/contains.js","hash":"fcc9be0477d941b7c4ba71de328773e556ded7ce","modified":1686854537934},{"_id":"source/lib/pjax/lib/util/extend.js","hash":"e599aaef93e3a00ccbd92cd87df09898d712e398","modified":1686854537934},{"_id":"source/lib/pjax/lib/util/noop.js","hash":"2c9f7e231af1a62db195875ca62df7edc253c3c4","modified":1686854537934},{"_id":"source/lib/pjax/lib/util/update-query-string.js","hash":"eefcbff322f8c607865d47ee8fa49f1c8bfa8d7a","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/abort-request.js","hash":"96d7a604ca275455199bd94d16b9cdc254bee9b9","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/eval-scripts.js","hash":"3c9125a04cec9d511f16f9311656533ef6a115d1","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/events.js","hash":"70ca7ec140d1dcf8c4958e7b6788b09ef2b60181","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/execute-scripts.js","hash":"2d02a0151ead9924516cdae9308f8667b27a7ea7","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/foreach-els.js","hash":"85995dd27d0d866cfaf5c560732fab8b0099938c","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/foreach-selectors.js","hash":"898b48ef191719070488f16a54fba8a794b10057","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/is-supported.js","hash":"e25c7e69c8b7a64a44affcae317adb2b3889aee6","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/parse-options.js","hash":"45ab302da33e5457a71fd22bbd082e51f5b06b49","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/send-request.js","hash":"d6adad7f95754c53b9885c0999a5118995fdc76f","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/switch-selectors.js","hash":"993dd67b1b629288feb8d167fb12b602626cf1d5","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/switches.js","hash":"f5dfdf57bafd2b4edd5f854d70837b5fe760756e","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/uniqueid.js","hash":"430550f31b9e6356c2e3a033c1b418bd6acd9667","modified":1686854537934},{"_id":"source/lib/pjax/.git/objects/pack/pack-1813a5e87a829be35d8e6ae6586c90a2f626c078.idx","hash":"cdff818942536681c05d42a51c16eb4b84ff1f61","modified":1686854537898},{"_id":"source/lib/pjax/.git/refs/heads/master","hash":"3c8414e83b32974579667c4c79e04af7d699edde","modified":1686854537930},{"_id":"source/lib/pjax/tests/lib/proto/attach-form.js","hash":"3614a962e3185b354a2e0d987bcecdef4a209da6","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/proto/attach-link.js","hash":"9d283cb0b09730e932673c73a3352a2d2e8939fa","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/proto/handle-response.js","hash":"26e0e334f0b20ff2fe75b3ab12a93ce44a5823f0","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/proto/parse-element.js","hash":"474edc8844028de67cbad054da79c05727620785","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/util/clone.js","hash":"4b0e62bd0f4eef3549b0da70987f63ce4953bef0","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/util/contains.js","hash":"bc0c8be855e9736cb256a2aa44fd46f3a7d1d6c5","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/util/extend.js","hash":"d45488ff6f8e3e1b59a62d0c88c86b750fe50ed4","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/util/noop.js","hash":"6959a4c02c41453a5edfa4163e36752fcfa3edf9","modified":1686854537934},{"_id":"source/lib/pjax/tests/lib/util/update-query-string.js","hash":"4158dcd877c5f229400417e0da22eb4c5b8e8e38","modified":1686854537934},{"_id":"source/lib/pjax/.git/logs/refs/heads/master","hash":"1d15ee7dfe037a3ffc035f4e3ac89d435651574b","modified":1686854537930},{"_id":"source/lib/pjax/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1686854537930},{"_id":"source/lib/pjax/.git/logs/refs/remotes/origin/HEAD","hash":"1d15ee7dfe037a3ffc035f4e3ac89d435651574b","modified":1686854537930},{"_id":"themes/next/source/images/klee.jpg","hash":"bdfc79128ce5bee092264de45557ecd1682eaabb","modified":1686674830000},{"_id":"source/lib/pjax/.git/objects/pack/pack-1813a5e87a829be35d8e6ae6586c90a2f626c078.pack","hash":"1a639bfeed7e6dd447f72336a8858d83b789ae70","modified":1686854537898}],"Category":[],"Data":[],"Page":[{"title":"404","date":"2023-06-15T18:14:05.000Z","_content":"  <!DOCTYPE HTML>\n  <html>\n  <head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n  </head>\n  <body>\n    <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n            charset=\"utf-8\" homePageUrl=\"https://blog.wpcwzy.top\"\n            homePageName=\"回到我的主页\">\n    </script>\n    <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n    <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n  </body>\n  </html>\n","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2023-06-15 18:14:05\n---\n  <!DOCTYPE HTML>\n  <html>\n  <head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n  </head>\n  <body>\n    <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n            charset=\"utf-8\" homePageUrl=\"https://blog.wpcwzy.top\"\n            homePageName=\"回到我的主页\">\n    </script>\n    <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n    <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n  </body>\n  </html>\n","updated":"2023-06-15T18:14:36.260Z","path":"404/index.html","comments":1,"layout":"page","_id":"clixi465o000037jxh2lhfvv5","content":"  <!DOCTYPE HTML>\n  <html>\n  <head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n  </head>\n  <body>\n    <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n            charset=\"utf-8\" homePageUrl=\"https://blog.wpcwzy.top\"\n            homePageName=\"回到我的主页\">\n    </script>\n    <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n    <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n  </body>\n  </html>\n","site":{"data":{}},"length":0,"excerpt":"","more":"  <!DOCTYPE HTML>\n  <html>\n  <head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n  </head>\n  <body>\n    <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n            charset=\"utf-8\" homePageUrl=\"https://blog.wpcwzy.top\"\n            homePageName=\"回到我的主页\">\n    </script>\n    <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n    <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n  </body>\n  </html>\n"},{"title":"about","date":"2023-06-15T18:16:57.000Z","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-06-15 18:16:57\ntype: \"about\"\n---\n","updated":"2023-06-15T18:17:50.657Z","path":"about/index.html","comments":1,"layout":"page","_id":"clixi465u000137jxdhag66yu","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"categories","date":"2023-06-15T18:16:50.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2023-06-15 18:16:50\ntype: \"categories\"\n---\n","updated":"2023-06-15T18:17:40.853Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clixi465v000237jxa3ezfhfu","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"tags","date":"2023-06-15T18:16:42.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-06-15 18:16:42\ntype: \"tags\"\n---\n","updated":"2023-06-15T18:17:20.405Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clixi465w000337jx65m294zl","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"_content":"# 0.2.8 - 2019-03-09\n\n- Fixed: Edge form support.\n  ([#178](https://github.com/MoOx/pjax/pull/178) - @robinnorth)\n- Fixed: Removed keyup event listener for forms.\n  ([#184](https://github.com/MoOx/pjax/pull/184) - @BehindTheMath)\n- Fixed: Bugs in evalScripts().\n  ([#186](https://github.com/MoOx/pjax/pull/186) - @BehindTheMath)\n- Fixed: Handle non-string HTML passed to loadContent().\n  ([#200](https://github.com/MoOx/pjax/pull/200) - @BehindTheMath)\n- Tooling: Switch linting to ESLint and Prettier.\n  ([#191](https://github.com/MoOx/pjax/pull/191) - @BehindTheMath)\n\n# 0.2.7 - 2018-08-15\n\n- Fixed: Parsing values of option elements in forms.\n  ([#162](https://github.com/MoOx/pjax/pull/162) - @BehindTheMath)\n- Fixed: Added index.d.ts to package.json so it will be installed by npm.\n  ([c589ab9](https://github.com/MoOx/pjax/commit/c589ab9c25bee6161bf3e557eaca44e51c14fb89) - @BehindTheMath)\n- Fixed: `options.history` to correctly parse being set to false.\n  ([#165](https://github.com/MoOx/pjax/pull/165) - @BehindTheMath).\n- Fixed: Pass the current `options` object to `loadContent()`.\n  ([#171](https://github.com/MoOx/pjax/pull/171) - @BehindTheMath)\n- Fixed: Ensure correct XHR encoding for multipart/form-data forms\n  ([#174](https://github.com/MoOx/pjax/pull/174) - @BehindTheMath)\n- Added: More documentation.\n  ([#160](https://github.com/MoOx/pjax/pull/160), [#171](https://github.com/MoOx/pjax/pull/171) - @robinnorth, @BehindTheMath)\n\n# 0.2.6 - 2018-04-30\n\n- Fixed: Form submission for GET requests.\n  ([#129](https://github.com/MoOx/pjax/pull/129) - @robinnorth)\n- Fixed: Refactor `loadUrl()` to make manually calling simpler.\n  ([#134](https://github.com/MoOx/pjax/pull/134) - @robinnorth)\n- Fixed: Support multiple select fields in form submissions.\n  ([#147](https://github.com/MoOx/pjax/pull/147) - @robinnorth)\n- Fixed: Use the same options object in `handle-response` as in `send-request`. This way, `pjax.state.options` will also have the request options.\n  ([#148](https://github.com/MoOx/pjax/pull/148) - @BehindTheMath)\n- Added: Move the XHR callback to a separate method, and trigger an error event if the response cannot be parsed.\n  ([#137](https://github.com/MoOx/pjax/pull/137) - @BehindTheMath)\n- Added: TypeScript definitions.\n  ([#138](https://github.com/MoOx/pjax/pull/138) - @BehindTheMath)\n- Added: `replaceNode` switch, as an alternative to the `outerHTML` switch.\n  ([#141](https://github.com/MoOx/pjax/pull/141) - @BehindTheMath)\n- Added: `X-PJAX-Selectors` HTTP header. This is a serialized JSON array of selectors, taken from `options.selectors`. You can use this to send back only the elements that Pjax will use to switch, instead of sending the whole page.\n  ([#144](https://github.com/MoOx/pjax/pull/144) - @BehindTheMath)\n- Added: An option to use `FormData` to submit forms.\n  ([#153](https://github.com/MoOx/pjax/pull/153) - @BehindTheMath)\n- Added: Tests.\n  ([f98f2dd](https://github.com/MoOx/pjax/commit/f98f2dd63b48113ff91b6bd8808257bfc723ef6b), [#145](https://github.com/MoOx/pjax/pull/145) - @robinnorth, @BehindTheMath)\n\n# 0.2.5 - 2018-02-02\n\n- Fixed: Async switch functions now work correctly, because the DOM is now parsed after all the switches finish.\n  ([#79](https://github.com/MoOx/pjax/pull/79), [#110](https://github.com/MoOx/pjax/pull/110) - @oskarrough, @BehindTheMath, @robinnorth)\n- Fixed: Bug on IE11 preventing AJAX page refresh.\n  ([#81](https://github.com/MoOx/pjax/pull/81) - @CPTechnikVX)\n- Fixed: Default switches are now available as `Pjax.switches`.\n  ([#92](https://github.com/MoOx/pjax/pull/92) - @BehindTheMath)\n- Fixed: An error that was caused by a missing `switchElementsAlt`.\n  ([#93](https://github.com/MoOx/pjax/pull/93), [#104](https://github.com/MoOx/pjax/pull/104) - @BehindTheMath, @robinnorth)\n- Fixed: Incorrect `main` field in npm package\n  ([#105](https://github.com/MoOx/pjax/pull/105) - @robinnorth)\n- Fixed: A pending XHR is now aborted if the user navigates somewhere else before the request is finished.\n  ([#114](https://github.com/MoOx/pjax/pull/114) - @robinnorth)\n- Fixed: When rendering new content, focus will now be removed only from elements within one of the containers manipulated by Pjax.\n  ([#116](https://github.com/MoOx/pjax/pull/116) - @BehindTheMath)\n- Fixed: Stop dispatching extraneous `pjax:complete` events when external scripts load\n  ([#118](https://github.com/MoOx/pjax/pull/118) - @robinnorth)\n- Added: Send the `X-PJAX` header with XHR requests.\n  ([#80](https://github.com/MoOx/pjax/pull/80) - @bram1028)\n- Added: Direct download link for script tags. (@MoOx)\n- Added: Pass the element that triggered Pjax to the `pjax:send` event.\n  ([#94](https://github.com/MoOx/pjax/pull/94) - @BehindTheMath)\n- Added: An option to set a timeout for XHR requests.\n  ([#95](https://github.com/MoOx/pjax/pull/95) - @BehindTheMath)\n- Added: Checks for XHR redirects\n  ([#101](https://github.com/MoOx/pjax/pull/101) - @BehindTheMath)\n- Added: Save scroll position with history, and restore when navigating backwards or forwards.\n  ([#110](https://github.com/MoOx/pjax/pull/110), [#119](https://github.com/MoOx/pjax/pull/119) - @BehindTheMath, @robinnorth)\n- Added: Scroll to element position when URL contains a hash\n  ([#110](https://github.com/MoOx/pjax/pull/110) - @BehindTheMath)\n- Added: Minified version of the Pjax bundle.\n  ([#115](https://github.com/MoOx/pjax/pull/115) - @BehindTheMath)\n- Changed: Miscellaneous code and tests cleanup.\n  ([#96](https://github.com/MoOx/pjax/pull/96), [#98](https://github.com/MoOx/pjax/pull/98), [#99](https://github.com/MoOx/pjax/pull/99), [#100](https://github.com/MoOx/pjax/pull/1070), [#107](https://github.com/MoOx/pjax/pull/107), [#113](https://github.com/MoOx/pjax/pull/113), [#120](https://github.com/MoOx/pjax/pull/120) - @BehindTheMath, @MoOx, @robinnorth)\n\n# 0.2.4 - 2016-06-28\n\n- Fixed: ``refresh`` should now work (use `this.parseDOM` for refresh)\n  ([#67](https://github.com/MoOx/pjax/pull/67) - @compressed)\n- Fixed: Some attributes, such as `itemscope` have no corresponding value.\n  This change allows them to still be set.\n  ([#67](https://github.com/MoOx/pjax/pull/67) - @compressed)\n- Added: ``cacheBust`` option\n  ([#71](https://github.com/MoOx/pjax/pull/71) - @tremby)\n\n# 0.2.3 - 2016-03-24\n\n- Fixed: ``currentUrlFullReload`` option now works\n- Fixed: ``this.reload`` is now a Function\n  ([#65](https://github.com/MoOx/pjax/issues/65))\n\n# 0.2.2 - 2016-03-12\n\n- Fixed: added back standalone version in `./pjax.js`\n([#57](https://github.com/MoOx/pjax/issues/57)\n- Fixed: error when using pjax with google analytics (``options`` was undefined)\n([#59](https://github.com/MoOx/pjax/pull/59))\n- Fixed: HierarchyRequestError error\n([#49](https://github.com/MoOx/pjax/pull/49))\n- Fixed: ``TypeError: Pjax.forEachEls is not a function``\n([#52](https://github.com/MoOx/pjax/pull/52))\n- Fixed: ``TypeError: Pjax.executeScripts is not a function``\n([#52](https://github.com/MoOx/pjax/pull/52))\n- Fixed: ``TypeError: Pjax.clone is not a function``\n([#52](https://github.com/MoOx/pjax/pull/52))\n- Added: Ignore events with prevented defaults\n([#50](https://github.com/MoOx/pjax/pull/50))\n\n# 0.2.1 - 2015-02-04\n\n- Fixed: it's better when a release have actual files.\n\n# 0.2.0 - 2015-02-04\n\n- Fixed: prevent scrollTo from being converted from false to 0 ([#33](https://github.com/MoOx/pjax/pull/33))\n- Changed: code exploded in commonjs style\n- Added: lots of tests\n- Added: `refresh` method to force update a DOM element ([#36](https://github.com/MoOx/pjax/pull/36))\n\n# 0.1.4 - 2014-10-14\n\n- Fixed: allow to load pages without any attributes on `<html>` element (fix [#6](https://github.com/MoOx/pjax/issues/6))\n- Fixed: make `Pjax.switches.sideBySide` method usable (fix [#13](https://github.com/MoOx/pjax/issues/13))\n\n# 0.1.3 - 2014-09-16\n\n- Fixed: clicking on the current url somewhere does not produce a full reload by default (see option `currentUrlFullReload`)\n- Fixed: `document.implementation.createHTMLDocument` error (in IE10, ref [#16](https://github.com/MoOx/pjax/pull/16))\n\n# 0.1.2 - 2014-04-03\n\n- Changed: `pjax.js` relocated in `src/`\n- Fixed: `<html>` attributes of pjaxified document are now available\n\n# 0.1.1 - 2014-04-02\n\n- Fixed: safer UMD wrapper (fix concat issue)\n\n# 0.1.0 - 2014-03-24\n\n✨ Initial release\n","source":"lib/pjax/CHANGELOG.md","raw":"# 0.2.8 - 2019-03-09\n\n- Fixed: Edge form support.\n  ([#178](https://github.com/MoOx/pjax/pull/178) - @robinnorth)\n- Fixed: Removed keyup event listener for forms.\n  ([#184](https://github.com/MoOx/pjax/pull/184) - @BehindTheMath)\n- Fixed: Bugs in evalScripts().\n  ([#186](https://github.com/MoOx/pjax/pull/186) - @BehindTheMath)\n- Fixed: Handle non-string HTML passed to loadContent().\n  ([#200](https://github.com/MoOx/pjax/pull/200) - @BehindTheMath)\n- Tooling: Switch linting to ESLint and Prettier.\n  ([#191](https://github.com/MoOx/pjax/pull/191) - @BehindTheMath)\n\n# 0.2.7 - 2018-08-15\n\n- Fixed: Parsing values of option elements in forms.\n  ([#162](https://github.com/MoOx/pjax/pull/162) - @BehindTheMath)\n- Fixed: Added index.d.ts to package.json so it will be installed by npm.\n  ([c589ab9](https://github.com/MoOx/pjax/commit/c589ab9c25bee6161bf3e557eaca44e51c14fb89) - @BehindTheMath)\n- Fixed: `options.history` to correctly parse being set to false.\n  ([#165](https://github.com/MoOx/pjax/pull/165) - @BehindTheMath).\n- Fixed: Pass the current `options` object to `loadContent()`.\n  ([#171](https://github.com/MoOx/pjax/pull/171) - @BehindTheMath)\n- Fixed: Ensure correct XHR encoding for multipart/form-data forms\n  ([#174](https://github.com/MoOx/pjax/pull/174) - @BehindTheMath)\n- Added: More documentation.\n  ([#160](https://github.com/MoOx/pjax/pull/160), [#171](https://github.com/MoOx/pjax/pull/171) - @robinnorth, @BehindTheMath)\n\n# 0.2.6 - 2018-04-30\n\n- Fixed: Form submission for GET requests.\n  ([#129](https://github.com/MoOx/pjax/pull/129) - @robinnorth)\n- Fixed: Refactor `loadUrl()` to make manually calling simpler.\n  ([#134](https://github.com/MoOx/pjax/pull/134) - @robinnorth)\n- Fixed: Support multiple select fields in form submissions.\n  ([#147](https://github.com/MoOx/pjax/pull/147) - @robinnorth)\n- Fixed: Use the same options object in `handle-response` as in `send-request`. This way, `pjax.state.options` will also have the request options.\n  ([#148](https://github.com/MoOx/pjax/pull/148) - @BehindTheMath)\n- Added: Move the XHR callback to a separate method, and trigger an error event if the response cannot be parsed.\n  ([#137](https://github.com/MoOx/pjax/pull/137) - @BehindTheMath)\n- Added: TypeScript definitions.\n  ([#138](https://github.com/MoOx/pjax/pull/138) - @BehindTheMath)\n- Added: `replaceNode` switch, as an alternative to the `outerHTML` switch.\n  ([#141](https://github.com/MoOx/pjax/pull/141) - @BehindTheMath)\n- Added: `X-PJAX-Selectors` HTTP header. This is a serialized JSON array of selectors, taken from `options.selectors`. You can use this to send back only the elements that Pjax will use to switch, instead of sending the whole page.\n  ([#144](https://github.com/MoOx/pjax/pull/144) - @BehindTheMath)\n- Added: An option to use `FormData` to submit forms.\n  ([#153](https://github.com/MoOx/pjax/pull/153) - @BehindTheMath)\n- Added: Tests.\n  ([f98f2dd](https://github.com/MoOx/pjax/commit/f98f2dd63b48113ff91b6bd8808257bfc723ef6b), [#145](https://github.com/MoOx/pjax/pull/145) - @robinnorth, @BehindTheMath)\n\n# 0.2.5 - 2018-02-02\n\n- Fixed: Async switch functions now work correctly, because the DOM is now parsed after all the switches finish.\n  ([#79](https://github.com/MoOx/pjax/pull/79), [#110](https://github.com/MoOx/pjax/pull/110) - @oskarrough, @BehindTheMath, @robinnorth)\n- Fixed: Bug on IE11 preventing AJAX page refresh.\n  ([#81](https://github.com/MoOx/pjax/pull/81) - @CPTechnikVX)\n- Fixed: Default switches are now available as `Pjax.switches`.\n  ([#92](https://github.com/MoOx/pjax/pull/92) - @BehindTheMath)\n- Fixed: An error that was caused by a missing `switchElementsAlt`.\n  ([#93](https://github.com/MoOx/pjax/pull/93), [#104](https://github.com/MoOx/pjax/pull/104) - @BehindTheMath, @robinnorth)\n- Fixed: Incorrect `main` field in npm package\n  ([#105](https://github.com/MoOx/pjax/pull/105) - @robinnorth)\n- Fixed: A pending XHR is now aborted if the user navigates somewhere else before the request is finished.\n  ([#114](https://github.com/MoOx/pjax/pull/114) - @robinnorth)\n- Fixed: When rendering new content, focus will now be removed only from elements within one of the containers manipulated by Pjax.\n  ([#116](https://github.com/MoOx/pjax/pull/116) - @BehindTheMath)\n- Fixed: Stop dispatching extraneous `pjax:complete` events when external scripts load\n  ([#118](https://github.com/MoOx/pjax/pull/118) - @robinnorth)\n- Added: Send the `X-PJAX` header with XHR requests.\n  ([#80](https://github.com/MoOx/pjax/pull/80) - @bram1028)\n- Added: Direct download link for script tags. (@MoOx)\n- Added: Pass the element that triggered Pjax to the `pjax:send` event.\n  ([#94](https://github.com/MoOx/pjax/pull/94) - @BehindTheMath)\n- Added: An option to set a timeout for XHR requests.\n  ([#95](https://github.com/MoOx/pjax/pull/95) - @BehindTheMath)\n- Added: Checks for XHR redirects\n  ([#101](https://github.com/MoOx/pjax/pull/101) - @BehindTheMath)\n- Added: Save scroll position with history, and restore when navigating backwards or forwards.\n  ([#110](https://github.com/MoOx/pjax/pull/110), [#119](https://github.com/MoOx/pjax/pull/119) - @BehindTheMath, @robinnorth)\n- Added: Scroll to element position when URL contains a hash\n  ([#110](https://github.com/MoOx/pjax/pull/110) - @BehindTheMath)\n- Added: Minified version of the Pjax bundle.\n  ([#115](https://github.com/MoOx/pjax/pull/115) - @BehindTheMath)\n- Changed: Miscellaneous code and tests cleanup.\n  ([#96](https://github.com/MoOx/pjax/pull/96), [#98](https://github.com/MoOx/pjax/pull/98), [#99](https://github.com/MoOx/pjax/pull/99), [#100](https://github.com/MoOx/pjax/pull/1070), [#107](https://github.com/MoOx/pjax/pull/107), [#113](https://github.com/MoOx/pjax/pull/113), [#120](https://github.com/MoOx/pjax/pull/120) - @BehindTheMath, @MoOx, @robinnorth)\n\n# 0.2.4 - 2016-06-28\n\n- Fixed: ``refresh`` should now work (use `this.parseDOM` for refresh)\n  ([#67](https://github.com/MoOx/pjax/pull/67) - @compressed)\n- Fixed: Some attributes, such as `itemscope` have no corresponding value.\n  This change allows them to still be set.\n  ([#67](https://github.com/MoOx/pjax/pull/67) - @compressed)\n- Added: ``cacheBust`` option\n  ([#71](https://github.com/MoOx/pjax/pull/71) - @tremby)\n\n# 0.2.3 - 2016-03-24\n\n- Fixed: ``currentUrlFullReload`` option now works\n- Fixed: ``this.reload`` is now a Function\n  ([#65](https://github.com/MoOx/pjax/issues/65))\n\n# 0.2.2 - 2016-03-12\n\n- Fixed: added back standalone version in `./pjax.js`\n([#57](https://github.com/MoOx/pjax/issues/57)\n- Fixed: error when using pjax with google analytics (``options`` was undefined)\n([#59](https://github.com/MoOx/pjax/pull/59))\n- Fixed: HierarchyRequestError error\n([#49](https://github.com/MoOx/pjax/pull/49))\n- Fixed: ``TypeError: Pjax.forEachEls is not a function``\n([#52](https://github.com/MoOx/pjax/pull/52))\n- Fixed: ``TypeError: Pjax.executeScripts is not a function``\n([#52](https://github.com/MoOx/pjax/pull/52))\n- Fixed: ``TypeError: Pjax.clone is not a function``\n([#52](https://github.com/MoOx/pjax/pull/52))\n- Added: Ignore events with prevented defaults\n([#50](https://github.com/MoOx/pjax/pull/50))\n\n# 0.2.1 - 2015-02-04\n\n- Fixed: it's better when a release have actual files.\n\n# 0.2.0 - 2015-02-04\n\n- Fixed: prevent scrollTo from being converted from false to 0 ([#33](https://github.com/MoOx/pjax/pull/33))\n- Changed: code exploded in commonjs style\n- Added: lots of tests\n- Added: `refresh` method to force update a DOM element ([#36](https://github.com/MoOx/pjax/pull/36))\n\n# 0.1.4 - 2014-10-14\n\n- Fixed: allow to load pages without any attributes on `<html>` element (fix [#6](https://github.com/MoOx/pjax/issues/6))\n- Fixed: make `Pjax.switches.sideBySide` method usable (fix [#13](https://github.com/MoOx/pjax/issues/13))\n\n# 0.1.3 - 2014-09-16\n\n- Fixed: clicking on the current url somewhere does not produce a full reload by default (see option `currentUrlFullReload`)\n- Fixed: `document.implementation.createHTMLDocument` error (in IE10, ref [#16](https://github.com/MoOx/pjax/pull/16))\n\n# 0.1.2 - 2014-04-03\n\n- Changed: `pjax.js` relocated in `src/`\n- Fixed: `<html>` attributes of pjaxified document are now available\n\n# 0.1.1 - 2014-04-02\n\n- Fixed: safer UMD wrapper (fix concat issue)\n\n# 0.1.0 - 2014-03-24\n\n✨ Initial release\n","date":"2023-06-15T18:42:17.930Z","updated":"2023-06-15T18:42:17.930Z","path":"lib/pjax/CHANGELOG.html","title":"","comments":1,"layout":"page","_id":"clixi465x000437jx1x5bdn46","content":"<h1 id=\"0-2-8-2019-03-09\"><a href=\"#0-2-8-2019-03-09\" class=\"headerlink\" title=\"0.2.8 - 2019-03-09\"></a>0.2.8 - 2019-03-09</h1><ul>\n<li>Fixed: Edge form support.<br>(<a href=\"https://github.com/MoOx/pjax/pull/178\">#178</a> - @robinnorth)</li>\n<li>Fixed: Removed keyup event listener for forms.<br>(<a href=\"https://github.com/MoOx/pjax/pull/184\">#184</a> - @BehindTheMath)</li>\n<li>Fixed: Bugs in evalScripts().<br>(<a href=\"https://github.com/MoOx/pjax/pull/186\">#186</a> - @BehindTheMath)</li>\n<li>Fixed: Handle non-string HTML passed to loadContent().<br>(<a href=\"https://github.com/MoOx/pjax/pull/200\">#200</a> - @BehindTheMath)</li>\n<li>Tooling: Switch linting to ESLint and Prettier.<br>(<a href=\"https://github.com/MoOx/pjax/pull/191\">#191</a> - @BehindTheMath)</li>\n</ul>\n<h1 id=\"0-2-7-2018-08-15\"><a href=\"#0-2-7-2018-08-15\" class=\"headerlink\" title=\"0.2.7 - 2018-08-15\"></a>0.2.7 - 2018-08-15</h1><ul>\n<li>Fixed: Parsing values of option elements in forms.<br>(<a href=\"https://github.com/MoOx/pjax/pull/162\">#162</a> - @BehindTheMath)</li>\n<li>Fixed: Added index.d.ts to package.json so it will be installed by npm.<br>(<a href=\"https://github.com/MoOx/pjax/commit/c589ab9c25bee6161bf3e557eaca44e51c14fb89\">c589ab9</a> - @BehindTheMath)</li>\n<li>Fixed: <code>options.history</code> to correctly parse being set to false.<br>(<a href=\"https://github.com/MoOx/pjax/pull/165\">#165</a> - @BehindTheMath).</li>\n<li>Fixed: Pass the current <code>options</code> object to <code>loadContent()</code>.<br>(<a href=\"https://github.com/MoOx/pjax/pull/171\">#171</a> - @BehindTheMath)</li>\n<li>Fixed: Ensure correct XHR encoding for multipart&#x2F;form-data forms<br>(<a href=\"https://github.com/MoOx/pjax/pull/174\">#174</a> - @BehindTheMath)</li>\n<li>Added: More documentation.<br>(<a href=\"https://github.com/MoOx/pjax/pull/160\">#160</a>, <a href=\"https://github.com/MoOx/pjax/pull/171\">#171</a> - @robinnorth, @BehindTheMath)</li>\n</ul>\n<h1 id=\"0-2-6-2018-04-30\"><a href=\"#0-2-6-2018-04-30\" class=\"headerlink\" title=\"0.2.6 - 2018-04-30\"></a>0.2.6 - 2018-04-30</h1><ul>\n<li>Fixed: Form submission for GET requests.<br>(<a href=\"https://github.com/MoOx/pjax/pull/129\">#129</a> - @robinnorth)</li>\n<li>Fixed: Refactor <code>loadUrl()</code> to make manually calling simpler.<br>(<a href=\"https://github.com/MoOx/pjax/pull/134\">#134</a> - @robinnorth)</li>\n<li>Fixed: Support multiple select fields in form submissions.<br>(<a href=\"https://github.com/MoOx/pjax/pull/147\">#147</a> - @robinnorth)</li>\n<li>Fixed: Use the same options object in <code>handle-response</code> as in <code>send-request</code>. This way, <code>pjax.state.options</code> will also have the request options.<br>(<a href=\"https://github.com/MoOx/pjax/pull/148\">#148</a> - @BehindTheMath)</li>\n<li>Added: Move the XHR callback to a separate method, and trigger an error event if the response cannot be parsed.<br>(<a href=\"https://github.com/MoOx/pjax/pull/137\">#137</a> - @BehindTheMath)</li>\n<li>Added: TypeScript definitions.<br>(<a href=\"https://github.com/MoOx/pjax/pull/138\">#138</a> - @BehindTheMath)</li>\n<li>Added: <code>replaceNode</code> switch, as an alternative to the <code>outerHTML</code> switch.<br>(<a href=\"https://github.com/MoOx/pjax/pull/141\">#141</a> - @BehindTheMath)</li>\n<li>Added: <code>X-PJAX-Selectors</code> HTTP header. This is a serialized JSON array of selectors, taken from <code>options.selectors</code>. You can use this to send back only the elements that Pjax will use to switch, instead of sending the whole page.<br>(<a href=\"https://github.com/MoOx/pjax/pull/144\">#144</a> - @BehindTheMath)</li>\n<li>Added: An option to use <code>FormData</code> to submit forms.<br>(<a href=\"https://github.com/MoOx/pjax/pull/153\">#153</a> - @BehindTheMath)</li>\n<li>Added: Tests.<br>(<a href=\"https://github.com/MoOx/pjax/commit/f98f2dd63b48113ff91b6bd8808257bfc723ef6b\">f98f2dd</a>, <a href=\"https://github.com/MoOx/pjax/pull/145\">#145</a> - @robinnorth, @BehindTheMath)</li>\n</ul>\n<h1 id=\"0-2-5-2018-02-02\"><a href=\"#0-2-5-2018-02-02\" class=\"headerlink\" title=\"0.2.5 - 2018-02-02\"></a>0.2.5 - 2018-02-02</h1><ul>\n<li>Fixed: Async switch functions now work correctly, because the DOM is now parsed after all the switches finish.<br>(<a href=\"https://github.com/MoOx/pjax/pull/79\">#79</a>, <a href=\"https://github.com/MoOx/pjax/pull/110\">#110</a> - @oskarrough, @BehindTheMath, @robinnorth)</li>\n<li>Fixed: Bug on IE11 preventing AJAX page refresh.<br>(<a href=\"https://github.com/MoOx/pjax/pull/81\">#81</a> - @CPTechnikVX)</li>\n<li>Fixed: Default switches are now available as <code>Pjax.switches</code>.<br>(<a href=\"https://github.com/MoOx/pjax/pull/92\">#92</a> - @BehindTheMath)</li>\n<li>Fixed: An error that was caused by a missing <code>switchElementsAlt</code>.<br>(<a href=\"https://github.com/MoOx/pjax/pull/93\">#93</a>, <a href=\"https://github.com/MoOx/pjax/pull/104\">#104</a> - @BehindTheMath, @robinnorth)</li>\n<li>Fixed: Incorrect <code>main</code> field in npm package<br>(<a href=\"https://github.com/MoOx/pjax/pull/105\">#105</a> - @robinnorth)</li>\n<li>Fixed: A pending XHR is now aborted if the user navigates somewhere else before the request is finished.<br>(<a href=\"https://github.com/MoOx/pjax/pull/114\">#114</a> - @robinnorth)</li>\n<li>Fixed: When rendering new content, focus will now be removed only from elements within one of the containers manipulated by Pjax.<br>(<a href=\"https://github.com/MoOx/pjax/pull/116\">#116</a> - @BehindTheMath)</li>\n<li>Fixed: Stop dispatching extraneous <code>pjax:complete</code> events when external scripts load<br>(<a href=\"https://github.com/MoOx/pjax/pull/118\">#118</a> - @robinnorth)</li>\n<li>Added: Send the <code>X-PJAX</code> header with XHR requests.<br>(<a href=\"https://github.com/MoOx/pjax/pull/80\">#80</a> - @bram1028)</li>\n<li>Added: Direct download link for script tags. (@MoOx)</li>\n<li>Added: Pass the element that triggered Pjax to the <code>pjax:send</code> event.<br>(<a href=\"https://github.com/MoOx/pjax/pull/94\">#94</a> - @BehindTheMath)</li>\n<li>Added: An option to set a timeout for XHR requests.<br>(<a href=\"https://github.com/MoOx/pjax/pull/95\">#95</a> - @BehindTheMath)</li>\n<li>Added: Checks for XHR redirects<br>(<a href=\"https://github.com/MoOx/pjax/pull/101\">#101</a> - @BehindTheMath)</li>\n<li>Added: Save scroll position with history, and restore when navigating backwards or forwards.<br>(<a href=\"https://github.com/MoOx/pjax/pull/110\">#110</a>, <a href=\"https://github.com/MoOx/pjax/pull/119\">#119</a> - @BehindTheMath, @robinnorth)</li>\n<li>Added: Scroll to element position when URL contains a hash<br>(<a href=\"https://github.com/MoOx/pjax/pull/110\">#110</a> - @BehindTheMath)</li>\n<li>Added: Minified version of the Pjax bundle.<br>(<a href=\"https://github.com/MoOx/pjax/pull/115\">#115</a> - @BehindTheMath)</li>\n<li>Changed: Miscellaneous code and tests cleanup.<br>(<a href=\"https://github.com/MoOx/pjax/pull/96\">#96</a>, <a href=\"https://github.com/MoOx/pjax/pull/98\">#98</a>, <a href=\"https://github.com/MoOx/pjax/pull/99\">#99</a>, <a href=\"https://github.com/MoOx/pjax/pull/1070\">#100</a>, <a href=\"https://github.com/MoOx/pjax/pull/107\">#107</a>, <a href=\"https://github.com/MoOx/pjax/pull/113\">#113</a>, <a href=\"https://github.com/MoOx/pjax/pull/120\">#120</a> - @BehindTheMath, @MoOx, @robinnorth)</li>\n</ul>\n<h1 id=\"0-2-4-2016-06-28\"><a href=\"#0-2-4-2016-06-28\" class=\"headerlink\" title=\"0.2.4 - 2016-06-28\"></a>0.2.4 - 2016-06-28</h1><ul>\n<li>Fixed: <code>refresh</code> should now work (use <code>this.parseDOM</code> for refresh)<br>(<a href=\"https://github.com/MoOx/pjax/pull/67\">#67</a> - @compressed)</li>\n<li>Fixed: Some attributes, such as <code>itemscope</code> have no corresponding value.<br>This change allows them to still be set.<br>(<a href=\"https://github.com/MoOx/pjax/pull/67\">#67</a> - @compressed)</li>\n<li>Added: <code>cacheBust</code> option<br>(<a href=\"https://github.com/MoOx/pjax/pull/71\">#71</a> - @tremby)</li>\n</ul>\n<h1 id=\"0-2-3-2016-03-24\"><a href=\"#0-2-3-2016-03-24\" class=\"headerlink\" title=\"0.2.3 - 2016-03-24\"></a>0.2.3 - 2016-03-24</h1><ul>\n<li>Fixed: <code>currentUrlFullReload</code> option now works</li>\n<li>Fixed: <code>this.reload</code> is now a Function<br>(<a href=\"https://github.com/MoOx/pjax/issues/65\">#65</a>)</li>\n</ul>\n<h1 id=\"0-2-2-2016-03-12\"><a href=\"#0-2-2-2016-03-12\" class=\"headerlink\" title=\"0.2.2 - 2016-03-12\"></a>0.2.2 - 2016-03-12</h1><ul>\n<li>Fixed: added back standalone version in <code>./pjax.js</code><br>(<a href=\"https://github.com/MoOx/pjax/issues/57\">#57</a></li>\n<li>Fixed: error when using pjax with google analytics (<code>options</code> was undefined)<br>(<a href=\"https://github.com/MoOx/pjax/pull/59\">#59</a>)</li>\n<li>Fixed: HierarchyRequestError error<br>(<a href=\"https://github.com/MoOx/pjax/pull/49\">#49</a>)</li>\n<li>Fixed: <code>TypeError: Pjax.forEachEls is not a function</code><br>(<a href=\"https://github.com/MoOx/pjax/pull/52\">#52</a>)</li>\n<li>Fixed: <code>TypeError: Pjax.executeScripts is not a function</code><br>(<a href=\"https://github.com/MoOx/pjax/pull/52\">#52</a>)</li>\n<li>Fixed: <code>TypeError: Pjax.clone is not a function</code><br>(<a href=\"https://github.com/MoOx/pjax/pull/52\">#52</a>)</li>\n<li>Added: Ignore events with prevented defaults<br>(<a href=\"https://github.com/MoOx/pjax/pull/50\">#50</a>)</li>\n</ul>\n<h1 id=\"0-2-1-2015-02-04\"><a href=\"#0-2-1-2015-02-04\" class=\"headerlink\" title=\"0.2.1 - 2015-02-04\"></a>0.2.1 - 2015-02-04</h1><ul>\n<li>Fixed: it’s better when a release have actual files.</li>\n</ul>\n<h1 id=\"0-2-0-2015-02-04\"><a href=\"#0-2-0-2015-02-04\" class=\"headerlink\" title=\"0.2.0 - 2015-02-04\"></a>0.2.0 - 2015-02-04</h1><ul>\n<li>Fixed: prevent scrollTo from being converted from false to 0 (<a href=\"https://github.com/MoOx/pjax/pull/33\">#33</a>)</li>\n<li>Changed: code exploded in commonjs style</li>\n<li>Added: lots of tests</li>\n<li>Added: <code>refresh</code> method to force update a DOM element (<a href=\"https://github.com/MoOx/pjax/pull/36\">#36</a>)</li>\n</ul>\n<h1 id=\"0-1-4-2014-10-14\"><a href=\"#0-1-4-2014-10-14\" class=\"headerlink\" title=\"0.1.4 - 2014-10-14\"></a>0.1.4 - 2014-10-14</h1><ul>\n<li>Fixed: allow to load pages without any attributes on <code>&lt;html&gt;</code> element (fix <a href=\"https://github.com/MoOx/pjax/issues/6\">#6</a>)</li>\n<li>Fixed: make <code>Pjax.switches.sideBySide</code> method usable (fix <a href=\"https://github.com/MoOx/pjax/issues/13\">#13</a>)</li>\n</ul>\n<h1 id=\"0-1-3-2014-09-16\"><a href=\"#0-1-3-2014-09-16\" class=\"headerlink\" title=\"0.1.3 - 2014-09-16\"></a>0.1.3 - 2014-09-16</h1><ul>\n<li>Fixed: clicking on the current url somewhere does not produce a full reload by default (see option <code>currentUrlFullReload</code>)</li>\n<li>Fixed: <code>document.implementation.createHTMLDocument</code> error (in IE10, ref <a href=\"https://github.com/MoOx/pjax/pull/16\">#16</a>)</li>\n</ul>\n<h1 id=\"0-1-2-2014-04-03\"><a href=\"#0-1-2-2014-04-03\" class=\"headerlink\" title=\"0.1.2 - 2014-04-03\"></a>0.1.2 - 2014-04-03</h1><ul>\n<li>Changed: <code>pjax.js</code> relocated in <code>src/</code></li>\n<li>Fixed: <code>&lt;html&gt;</code> attributes of pjaxified document are now available</li>\n</ul>\n<h1 id=\"0-1-1-2014-04-02\"><a href=\"#0-1-1-2014-04-02\" class=\"headerlink\" title=\"0.1.1 - 2014-04-02\"></a>0.1.1 - 2014-04-02</h1><ul>\n<li>Fixed: safer UMD wrapper (fix concat issue)</li>\n</ul>\n<h1 id=\"0-1-0-2014-03-24\"><a href=\"#0-1-0-2014-03-24\" class=\"headerlink\" title=\"0.1.0 - 2014-03-24\"></a>0.1.0 - 2014-03-24</h1><p>✨ Initial release</p>\n","site":{"data":{}},"length":4503,"excerpt":"","more":"<h1 id=\"0-2-8-2019-03-09\"><a href=\"#0-2-8-2019-03-09\" class=\"headerlink\" title=\"0.2.8 - 2019-03-09\"></a>0.2.8 - 2019-03-09</h1><ul>\n<li>Fixed: Edge form support.<br>(<a href=\"https://github.com/MoOx/pjax/pull/178\">#178</a> - @robinnorth)</li>\n<li>Fixed: Removed keyup event listener for forms.<br>(<a href=\"https://github.com/MoOx/pjax/pull/184\">#184</a> - @BehindTheMath)</li>\n<li>Fixed: Bugs in evalScripts().<br>(<a href=\"https://github.com/MoOx/pjax/pull/186\">#186</a> - @BehindTheMath)</li>\n<li>Fixed: Handle non-string HTML passed to loadContent().<br>(<a href=\"https://github.com/MoOx/pjax/pull/200\">#200</a> - @BehindTheMath)</li>\n<li>Tooling: Switch linting to ESLint and Prettier.<br>(<a href=\"https://github.com/MoOx/pjax/pull/191\">#191</a> - @BehindTheMath)</li>\n</ul>\n<h1 id=\"0-2-7-2018-08-15\"><a href=\"#0-2-7-2018-08-15\" class=\"headerlink\" title=\"0.2.7 - 2018-08-15\"></a>0.2.7 - 2018-08-15</h1><ul>\n<li>Fixed: Parsing values of option elements in forms.<br>(<a href=\"https://github.com/MoOx/pjax/pull/162\">#162</a> - @BehindTheMath)</li>\n<li>Fixed: Added index.d.ts to package.json so it will be installed by npm.<br>(<a href=\"https://github.com/MoOx/pjax/commit/c589ab9c25bee6161bf3e557eaca44e51c14fb89\">c589ab9</a> - @BehindTheMath)</li>\n<li>Fixed: <code>options.history</code> to correctly parse being set to false.<br>(<a href=\"https://github.com/MoOx/pjax/pull/165\">#165</a> - @BehindTheMath).</li>\n<li>Fixed: Pass the current <code>options</code> object to <code>loadContent()</code>.<br>(<a href=\"https://github.com/MoOx/pjax/pull/171\">#171</a> - @BehindTheMath)</li>\n<li>Fixed: Ensure correct XHR encoding for multipart&#x2F;form-data forms<br>(<a href=\"https://github.com/MoOx/pjax/pull/174\">#174</a> - @BehindTheMath)</li>\n<li>Added: More documentation.<br>(<a href=\"https://github.com/MoOx/pjax/pull/160\">#160</a>, <a href=\"https://github.com/MoOx/pjax/pull/171\">#171</a> - @robinnorth, @BehindTheMath)</li>\n</ul>\n<h1 id=\"0-2-6-2018-04-30\"><a href=\"#0-2-6-2018-04-30\" class=\"headerlink\" title=\"0.2.6 - 2018-04-30\"></a>0.2.6 - 2018-04-30</h1><ul>\n<li>Fixed: Form submission for GET requests.<br>(<a href=\"https://github.com/MoOx/pjax/pull/129\">#129</a> - @robinnorth)</li>\n<li>Fixed: Refactor <code>loadUrl()</code> to make manually calling simpler.<br>(<a href=\"https://github.com/MoOx/pjax/pull/134\">#134</a> - @robinnorth)</li>\n<li>Fixed: Support multiple select fields in form submissions.<br>(<a href=\"https://github.com/MoOx/pjax/pull/147\">#147</a> - @robinnorth)</li>\n<li>Fixed: Use the same options object in <code>handle-response</code> as in <code>send-request</code>. This way, <code>pjax.state.options</code> will also have the request options.<br>(<a href=\"https://github.com/MoOx/pjax/pull/148\">#148</a> - @BehindTheMath)</li>\n<li>Added: Move the XHR callback to a separate method, and trigger an error event if the response cannot be parsed.<br>(<a href=\"https://github.com/MoOx/pjax/pull/137\">#137</a> - @BehindTheMath)</li>\n<li>Added: TypeScript definitions.<br>(<a href=\"https://github.com/MoOx/pjax/pull/138\">#138</a> - @BehindTheMath)</li>\n<li>Added: <code>replaceNode</code> switch, as an alternative to the <code>outerHTML</code> switch.<br>(<a href=\"https://github.com/MoOx/pjax/pull/141\">#141</a> - @BehindTheMath)</li>\n<li>Added: <code>X-PJAX-Selectors</code> HTTP header. This is a serialized JSON array of selectors, taken from <code>options.selectors</code>. You can use this to send back only the elements that Pjax will use to switch, instead of sending the whole page.<br>(<a href=\"https://github.com/MoOx/pjax/pull/144\">#144</a> - @BehindTheMath)</li>\n<li>Added: An option to use <code>FormData</code> to submit forms.<br>(<a href=\"https://github.com/MoOx/pjax/pull/153\">#153</a> - @BehindTheMath)</li>\n<li>Added: Tests.<br>(<a href=\"https://github.com/MoOx/pjax/commit/f98f2dd63b48113ff91b6bd8808257bfc723ef6b\">f98f2dd</a>, <a href=\"https://github.com/MoOx/pjax/pull/145\">#145</a> - @robinnorth, @BehindTheMath)</li>\n</ul>\n<h1 id=\"0-2-5-2018-02-02\"><a href=\"#0-2-5-2018-02-02\" class=\"headerlink\" title=\"0.2.5 - 2018-02-02\"></a>0.2.5 - 2018-02-02</h1><ul>\n<li>Fixed: Async switch functions now work correctly, because the DOM is now parsed after all the switches finish.<br>(<a href=\"https://github.com/MoOx/pjax/pull/79\">#79</a>, <a href=\"https://github.com/MoOx/pjax/pull/110\">#110</a> - @oskarrough, @BehindTheMath, @robinnorth)</li>\n<li>Fixed: Bug on IE11 preventing AJAX page refresh.<br>(<a href=\"https://github.com/MoOx/pjax/pull/81\">#81</a> - @CPTechnikVX)</li>\n<li>Fixed: Default switches are now available as <code>Pjax.switches</code>.<br>(<a href=\"https://github.com/MoOx/pjax/pull/92\">#92</a> - @BehindTheMath)</li>\n<li>Fixed: An error that was caused by a missing <code>switchElementsAlt</code>.<br>(<a href=\"https://github.com/MoOx/pjax/pull/93\">#93</a>, <a href=\"https://github.com/MoOx/pjax/pull/104\">#104</a> - @BehindTheMath, @robinnorth)</li>\n<li>Fixed: Incorrect <code>main</code> field in npm package<br>(<a href=\"https://github.com/MoOx/pjax/pull/105\">#105</a> - @robinnorth)</li>\n<li>Fixed: A pending XHR is now aborted if the user navigates somewhere else before the request is finished.<br>(<a href=\"https://github.com/MoOx/pjax/pull/114\">#114</a> - @robinnorth)</li>\n<li>Fixed: When rendering new content, focus will now be removed only from elements within one of the containers manipulated by Pjax.<br>(<a href=\"https://github.com/MoOx/pjax/pull/116\">#116</a> - @BehindTheMath)</li>\n<li>Fixed: Stop dispatching extraneous <code>pjax:complete</code> events when external scripts load<br>(<a href=\"https://github.com/MoOx/pjax/pull/118\">#118</a> - @robinnorth)</li>\n<li>Added: Send the <code>X-PJAX</code> header with XHR requests.<br>(<a href=\"https://github.com/MoOx/pjax/pull/80\">#80</a> - @bram1028)</li>\n<li>Added: Direct download link for script tags. (@MoOx)</li>\n<li>Added: Pass the element that triggered Pjax to the <code>pjax:send</code> event.<br>(<a href=\"https://github.com/MoOx/pjax/pull/94\">#94</a> - @BehindTheMath)</li>\n<li>Added: An option to set a timeout for XHR requests.<br>(<a href=\"https://github.com/MoOx/pjax/pull/95\">#95</a> - @BehindTheMath)</li>\n<li>Added: Checks for XHR redirects<br>(<a href=\"https://github.com/MoOx/pjax/pull/101\">#101</a> - @BehindTheMath)</li>\n<li>Added: Save scroll position with history, and restore when navigating backwards or forwards.<br>(<a href=\"https://github.com/MoOx/pjax/pull/110\">#110</a>, <a href=\"https://github.com/MoOx/pjax/pull/119\">#119</a> - @BehindTheMath, @robinnorth)</li>\n<li>Added: Scroll to element position when URL contains a hash<br>(<a href=\"https://github.com/MoOx/pjax/pull/110\">#110</a> - @BehindTheMath)</li>\n<li>Added: Minified version of the Pjax bundle.<br>(<a href=\"https://github.com/MoOx/pjax/pull/115\">#115</a> - @BehindTheMath)</li>\n<li>Changed: Miscellaneous code and tests cleanup.<br>(<a href=\"https://github.com/MoOx/pjax/pull/96\">#96</a>, <a href=\"https://github.com/MoOx/pjax/pull/98\">#98</a>, <a href=\"https://github.com/MoOx/pjax/pull/99\">#99</a>, <a href=\"https://github.com/MoOx/pjax/pull/1070\">#100</a>, <a href=\"https://github.com/MoOx/pjax/pull/107\">#107</a>, <a href=\"https://github.com/MoOx/pjax/pull/113\">#113</a>, <a href=\"https://github.com/MoOx/pjax/pull/120\">#120</a> - @BehindTheMath, @MoOx, @robinnorth)</li>\n</ul>\n<h1 id=\"0-2-4-2016-06-28\"><a href=\"#0-2-4-2016-06-28\" class=\"headerlink\" title=\"0.2.4 - 2016-06-28\"></a>0.2.4 - 2016-06-28</h1><ul>\n<li>Fixed: <code>refresh</code> should now work (use <code>this.parseDOM</code> for refresh)<br>(<a href=\"https://github.com/MoOx/pjax/pull/67\">#67</a> - @compressed)</li>\n<li>Fixed: Some attributes, such as <code>itemscope</code> have no corresponding value.<br>This change allows them to still be set.<br>(<a href=\"https://github.com/MoOx/pjax/pull/67\">#67</a> - @compressed)</li>\n<li>Added: <code>cacheBust</code> option<br>(<a href=\"https://github.com/MoOx/pjax/pull/71\">#71</a> - @tremby)</li>\n</ul>\n<h1 id=\"0-2-3-2016-03-24\"><a href=\"#0-2-3-2016-03-24\" class=\"headerlink\" title=\"0.2.3 - 2016-03-24\"></a>0.2.3 - 2016-03-24</h1><ul>\n<li>Fixed: <code>currentUrlFullReload</code> option now works</li>\n<li>Fixed: <code>this.reload</code> is now a Function<br>(<a href=\"https://github.com/MoOx/pjax/issues/65\">#65</a>)</li>\n</ul>\n<h1 id=\"0-2-2-2016-03-12\"><a href=\"#0-2-2-2016-03-12\" class=\"headerlink\" title=\"0.2.2 - 2016-03-12\"></a>0.2.2 - 2016-03-12</h1><ul>\n<li>Fixed: added back standalone version in <code>./pjax.js</code><br>(<a href=\"https://github.com/MoOx/pjax/issues/57\">#57</a></li>\n<li>Fixed: error when using pjax with google analytics (<code>options</code> was undefined)<br>(<a href=\"https://github.com/MoOx/pjax/pull/59\">#59</a>)</li>\n<li>Fixed: HierarchyRequestError error<br>(<a href=\"https://github.com/MoOx/pjax/pull/49\">#49</a>)</li>\n<li>Fixed: <code>TypeError: Pjax.forEachEls is not a function</code><br>(<a href=\"https://github.com/MoOx/pjax/pull/52\">#52</a>)</li>\n<li>Fixed: <code>TypeError: Pjax.executeScripts is not a function</code><br>(<a href=\"https://github.com/MoOx/pjax/pull/52\">#52</a>)</li>\n<li>Fixed: <code>TypeError: Pjax.clone is not a function</code><br>(<a href=\"https://github.com/MoOx/pjax/pull/52\">#52</a>)</li>\n<li>Added: Ignore events with prevented defaults<br>(<a href=\"https://github.com/MoOx/pjax/pull/50\">#50</a>)</li>\n</ul>\n<h1 id=\"0-2-1-2015-02-04\"><a href=\"#0-2-1-2015-02-04\" class=\"headerlink\" title=\"0.2.1 - 2015-02-04\"></a>0.2.1 - 2015-02-04</h1><ul>\n<li>Fixed: it’s better when a release have actual files.</li>\n</ul>\n<h1 id=\"0-2-0-2015-02-04\"><a href=\"#0-2-0-2015-02-04\" class=\"headerlink\" title=\"0.2.0 - 2015-02-04\"></a>0.2.0 - 2015-02-04</h1><ul>\n<li>Fixed: prevent scrollTo from being converted from false to 0 (<a href=\"https://github.com/MoOx/pjax/pull/33\">#33</a>)</li>\n<li>Changed: code exploded in commonjs style</li>\n<li>Added: lots of tests</li>\n<li>Added: <code>refresh</code> method to force update a DOM element (<a href=\"https://github.com/MoOx/pjax/pull/36\">#36</a>)</li>\n</ul>\n<h1 id=\"0-1-4-2014-10-14\"><a href=\"#0-1-4-2014-10-14\" class=\"headerlink\" title=\"0.1.4 - 2014-10-14\"></a>0.1.4 - 2014-10-14</h1><ul>\n<li>Fixed: allow to load pages without any attributes on <code>&lt;html&gt;</code> element (fix <a href=\"https://github.com/MoOx/pjax/issues/6\">#6</a>)</li>\n<li>Fixed: make <code>Pjax.switches.sideBySide</code> method usable (fix <a href=\"https://github.com/MoOx/pjax/issues/13\">#13</a>)</li>\n</ul>\n<h1 id=\"0-1-3-2014-09-16\"><a href=\"#0-1-3-2014-09-16\" class=\"headerlink\" title=\"0.1.3 - 2014-09-16\"></a>0.1.3 - 2014-09-16</h1><ul>\n<li>Fixed: clicking on the current url somewhere does not produce a full reload by default (see option <code>currentUrlFullReload</code>)</li>\n<li>Fixed: <code>document.implementation.createHTMLDocument</code> error (in IE10, ref <a href=\"https://github.com/MoOx/pjax/pull/16\">#16</a>)</li>\n</ul>\n<h1 id=\"0-1-2-2014-04-03\"><a href=\"#0-1-2-2014-04-03\" class=\"headerlink\" title=\"0.1.2 - 2014-04-03\"></a>0.1.2 - 2014-04-03</h1><ul>\n<li>Changed: <code>pjax.js</code> relocated in <code>src/</code></li>\n<li>Fixed: <code>&lt;html&gt;</code> attributes of pjaxified document are now available</li>\n</ul>\n<h1 id=\"0-1-1-2014-04-02\"><a href=\"#0-1-1-2014-04-02\" class=\"headerlink\" title=\"0.1.1 - 2014-04-02\"></a>0.1.1 - 2014-04-02</h1><ul>\n<li>Fixed: safer UMD wrapper (fix concat issue)</li>\n</ul>\n<h1 id=\"0-1-0-2014-03-24\"><a href=\"#0-1-0-2014-03-24\" class=\"headerlink\" title=\"0.1.0 - 2014-03-24\"></a>0.1.0 - 2014-03-24</h1><p>✨ Initial release</p>\n"},{"_content":"// var executeScripts = require(\"./lib/execute-scripts\");  // unused-var\nvar forEachEls = require(\"./lib/foreach-els\");\nvar parseOptions = require(\"./lib/parse-options\");\nvar switches = require(\"./lib/switches\");\nvar newUid = require(\"./lib/uniqueid\");\n\nvar on = require(\"./lib/events/on\");\nvar trigger = require(\"./lib/events/trigger\");\n\nvar clone = require(\"./lib/util/clone\");\nvar contains = require(\"./lib/util/contains\");\nvar extend = require(\"./lib/util/extend\");\nvar noop = require(\"./lib/util/noop\");\n\nvar Pjax = function(options) {\n  this.state = {\n    numPendingSwitches: 0,\n    href: null,\n    options: null\n  };\n\n  this.options = parseOptions(options);\n  this.log(\"Pjax options\", this.options);\n\n  if (this.options.scrollRestoration && \"scrollRestoration\" in history) {\n    history.scrollRestoration = \"manual\";\n  }\n\n  this.maxUid = this.lastUid = newUid();\n\n  this.parseDOM(document);\n\n  on(\n    window,\n    \"popstate\",\n    function(st) {\n      if (st.state) {\n        var opt = clone(this.options);\n        opt.url = st.state.url;\n        opt.title = st.state.title;\n        // Since state already exists, prevent it from being pushed again\n        opt.history = false;\n        opt.scrollPos = st.state.scrollPos;\n        if (st.state.uid < this.lastUid) {\n          opt.backward = true;\n        } else {\n          opt.forward = true;\n        }\n        this.lastUid = st.state.uid;\n\n        // @todo implement history cache here, based on uid\n        this.loadUrl(st.state.url, opt);\n      }\n    }.bind(this)\n  );\n};\n\nPjax.switches = switches;\n\nPjax.prototype = {\n  log: require(\"./lib/proto/log\"),\n\n  getElements: function(el) {\n    return el.querySelectorAll(this.options.elements);\n  },\n\n  parseDOM: function(el) {\n    var parseElement = require(\"./lib/proto/parse-element\");\n    forEachEls(this.getElements(el), parseElement, this);\n  },\n\n  refresh: function(el) {\n    this.parseDOM(el || document);\n  },\n\n  reload: function() {\n    window.location.reload();\n  },\n\n  attachLink: require(\"./lib/proto/attach-link\"),\n\n  attachForm: require(\"./lib/proto/attach-form\"),\n\n  forEachSelectors: function(cb, context, DOMcontext) {\n    return require(\"./lib/foreach-selectors\").bind(this)(\n      this.options.selectors,\n      cb,\n      context,\n      DOMcontext\n    );\n  },\n\n  switchSelectors: function(selectors, fromEl, toEl, options) {\n    return require(\"./lib/switches-selectors\").bind(this)(\n      this.options.switches,\n      this.options.switchesOptions,\n      selectors,\n      fromEl,\n      toEl,\n      options\n    );\n  },\n\n  latestChance: function(href) {\n    window.location = href;\n  },\n\n  onSwitch: function() {\n    trigger(window, \"resize scroll\");\n\n    this.state.numPendingSwitches--;\n\n    // debounce calls, so we only run this once after all switches are finished.\n    if (this.state.numPendingSwitches === 0) {\n      this.afterAllSwitches();\n    }\n  },\n\n  loadContent: function(html, options) {\n    if (typeof html !== \"string\") {\n      trigger(document, \"pjax:complete pjax:error\", options);\n\n      return;\n    }\n\n    var tmpEl = document.implementation.createHTMLDocument(\"pjax\");\n\n    // parse HTML attributes to copy them\n    // since we are forced to use documentElement.innerHTML (outerHTML can't be used for <html>)\n    var htmlRegex = /<html[^>]+>/gi;\n    var htmlAttribsRegex = /\\s?[a-z:]+(?:=['\"][^'\">]+['\"])*/gi;\n    var matches = html.match(htmlRegex);\n    if (matches && matches.length) {\n      matches = matches[0].match(htmlAttribsRegex);\n      if (matches.length) {\n        matches.shift();\n        matches.forEach(function(htmlAttrib) {\n          var attr = htmlAttrib.trim().split(\"=\");\n          if (attr.length === 1) {\n            tmpEl.documentElement.setAttribute(attr[0], true);\n          } else {\n            tmpEl.documentElement.setAttribute(attr[0], attr[1].slice(1, -1));\n          }\n        });\n      }\n    }\n\n    tmpEl.documentElement.innerHTML = html;\n    this.log(\n      \"load content\",\n      tmpEl.documentElement.attributes,\n      tmpEl.documentElement.innerHTML.length\n    );\n\n    // Clear out any focused controls before inserting new page contents.\n    if (\n      document.activeElement &&\n      contains(document, this.options.selectors, document.activeElement)\n    ) {\n      try {\n        document.activeElement.blur();\n      } catch (e) {} // eslint-disable-line no-empty\n    }\n\n    this.switchSelectors(this.options.selectors, tmpEl, document, options);\n  },\n\n  abortRequest: require(\"./lib/abort-request\"),\n\n  doRequest: require(\"./lib/send-request\"),\n\n  handleResponse: require(\"./lib/proto/handle-response\"),\n\n  loadUrl: function(href, options) {\n    options =\n      typeof options === \"object\"\n        ? extend({}, this.options, options)\n        : clone(this.options);\n\n    this.log(\"load href\", href, options);\n\n    // Abort any previous request\n    this.abortRequest(this.request);\n\n    trigger(document, \"pjax:send\", options);\n\n    // Do the request\n    this.request = this.doRequest(\n      href,\n      options,\n      this.handleResponse.bind(this)\n    );\n  },\n\n  afterAllSwitches: function() {\n    // FF bug: Won’t autofocus fields that are inserted via JS.\n    // This behavior is incorrect. So if theres no current focus, autofocus\n    // the last field.\n    //\n    // http://www.w3.org/html/wg/drafts/html/master/forms.html\n    var autofocusEl = Array.prototype.slice\n      .call(document.querySelectorAll(\"[autofocus]\"))\n      .pop();\n    if (autofocusEl && document.activeElement !== autofocusEl) {\n      autofocusEl.focus();\n    }\n\n    // execute scripts when DOM have been completely updated\n    this.options.selectors.forEach(function(selector) {\n      forEachEls(document.querySelectorAll(selector), function(el) {\n        // executeScripts(el);\n        if (el === 0) ;  // intentially left blank!\n      });\n    });\n\n    var state = this.state;\n\n    if (state.options.history) {\n      if (!window.history.state) {\n        this.lastUid = this.maxUid = newUid();\n        window.history.replaceState(\n          {\n            url: window.location.href,\n            title: document.title,\n            uid: this.maxUid,\n            scrollPos: [0, 0]\n          },\n          document.title\n        );\n      }\n\n      // Update browser history\n      this.lastUid = this.maxUid = newUid();\n\n      window.history.pushState(\n        {\n          url: state.href,\n          title: state.options.title,\n          uid: this.maxUid,\n          scrollPos: [0, 0]\n        },\n        state.options.title,\n        state.href\n      );\n    }\n\n    this.forEachSelectors(function(el) {\n      this.parseDOM(el);\n    }, this);\n\n    // Fire Events\n    trigger(document, \"pjax:complete pjax:success\", state.options);\n\n    if (typeof state.options.analytics === \"function\") {\n      state.options.analytics();\n    }\n\n    if (state.options.history) {\n      // First parse url and check for hash to override scroll\n      var a = document.createElement(\"a\");\n      a.href = this.state.href;\n      if (a.hash) {\n        var name = a.hash.slice(1);\n        name = decodeURIComponent(name);\n\n        var curtop = 0;\n        var target =\n          document.getElementById(name) || document.getElementsByName(name)[0];\n        if (target) {\n          // http://stackoverflow.com/questions/8111094/cross-browser-javascript-function-to-find-actual-position-of-an-element-in-page\n          if (target.offsetParent) {\n            do {\n              curtop += target.offsetTop;\n\n              target = target.offsetParent;\n            } while (target);\n          }\n        }\n        window.scrollTo(0, curtop);\n      } else if (state.options.scrollTo !== false) {\n        // Scroll page to top on new page load\n        if (state.options.scrollTo.length > 1) {\n          window.scrollTo(state.options.scrollTo[0], state.options.scrollTo[1]);\n        } else {\n          window.scrollTo(0, state.options.scrollTo);\n        }\n      }\n    } else if (state.options.scrollRestoration && state.options.scrollPos) {\n      window.scrollTo(state.options.scrollPos[0], state.options.scrollPos[1]);\n    }\n\n    this.state = {\n      numPendingSwitches: 0,\n      href: null,\n      options: null\n    };\n  }\n};\n\nPjax.isSupported = require(\"./lib/is-supported\");\n\n// arguably could do `if( require(\"./lib/is-supported\")()) {` but that might be a little to simple\nif (Pjax.isSupported()) {\n  module.exports = Pjax;\n}\n// if there isn’t required browser functions, returning stupid api\nelse {\n  var stupidPjax = noop;\n  for (var key in Pjax.prototype) {\n    if (\n      Pjax.prototype.hasOwnProperty(key) &&\n      typeof Pjax.prototype[key] === \"function\"\n    ) {\n      stupidPjax[key] = noop;\n    }\n  }\n\n  module.exports = stupidPjax;\n}\n","source":"lib/pjax/index.js","raw":"// var executeScripts = require(\"./lib/execute-scripts\");  // unused-var\nvar forEachEls = require(\"./lib/foreach-els\");\nvar parseOptions = require(\"./lib/parse-options\");\nvar switches = require(\"./lib/switches\");\nvar newUid = require(\"./lib/uniqueid\");\n\nvar on = require(\"./lib/events/on\");\nvar trigger = require(\"./lib/events/trigger\");\n\nvar clone = require(\"./lib/util/clone\");\nvar contains = require(\"./lib/util/contains\");\nvar extend = require(\"./lib/util/extend\");\nvar noop = require(\"./lib/util/noop\");\n\nvar Pjax = function(options) {\n  this.state = {\n    numPendingSwitches: 0,\n    href: null,\n    options: null\n  };\n\n  this.options = parseOptions(options);\n  this.log(\"Pjax options\", this.options);\n\n  if (this.options.scrollRestoration && \"scrollRestoration\" in history) {\n    history.scrollRestoration = \"manual\";\n  }\n\n  this.maxUid = this.lastUid = newUid();\n\n  this.parseDOM(document);\n\n  on(\n    window,\n    \"popstate\",\n    function(st) {\n      if (st.state) {\n        var opt = clone(this.options);\n        opt.url = st.state.url;\n        opt.title = st.state.title;\n        // Since state already exists, prevent it from being pushed again\n        opt.history = false;\n        opt.scrollPos = st.state.scrollPos;\n        if (st.state.uid < this.lastUid) {\n          opt.backward = true;\n        } else {\n          opt.forward = true;\n        }\n        this.lastUid = st.state.uid;\n\n        // @todo implement history cache here, based on uid\n        this.loadUrl(st.state.url, opt);\n      }\n    }.bind(this)\n  );\n};\n\nPjax.switches = switches;\n\nPjax.prototype = {\n  log: require(\"./lib/proto/log\"),\n\n  getElements: function(el) {\n    return el.querySelectorAll(this.options.elements);\n  },\n\n  parseDOM: function(el) {\n    var parseElement = require(\"./lib/proto/parse-element\");\n    forEachEls(this.getElements(el), parseElement, this);\n  },\n\n  refresh: function(el) {\n    this.parseDOM(el || document);\n  },\n\n  reload: function() {\n    window.location.reload();\n  },\n\n  attachLink: require(\"./lib/proto/attach-link\"),\n\n  attachForm: require(\"./lib/proto/attach-form\"),\n\n  forEachSelectors: function(cb, context, DOMcontext) {\n    return require(\"./lib/foreach-selectors\").bind(this)(\n      this.options.selectors,\n      cb,\n      context,\n      DOMcontext\n    );\n  },\n\n  switchSelectors: function(selectors, fromEl, toEl, options) {\n    return require(\"./lib/switches-selectors\").bind(this)(\n      this.options.switches,\n      this.options.switchesOptions,\n      selectors,\n      fromEl,\n      toEl,\n      options\n    );\n  },\n\n  latestChance: function(href) {\n    window.location = href;\n  },\n\n  onSwitch: function() {\n    trigger(window, \"resize scroll\");\n\n    this.state.numPendingSwitches--;\n\n    // debounce calls, so we only run this once after all switches are finished.\n    if (this.state.numPendingSwitches === 0) {\n      this.afterAllSwitches();\n    }\n  },\n\n  loadContent: function(html, options) {\n    if (typeof html !== \"string\") {\n      trigger(document, \"pjax:complete pjax:error\", options);\n\n      return;\n    }\n\n    var tmpEl = document.implementation.createHTMLDocument(\"pjax\");\n\n    // parse HTML attributes to copy them\n    // since we are forced to use documentElement.innerHTML (outerHTML can't be used for <html>)\n    var htmlRegex = /<html[^>]+>/gi;\n    var htmlAttribsRegex = /\\s?[a-z:]+(?:=['\"][^'\">]+['\"])*/gi;\n    var matches = html.match(htmlRegex);\n    if (matches && matches.length) {\n      matches = matches[0].match(htmlAttribsRegex);\n      if (matches.length) {\n        matches.shift();\n        matches.forEach(function(htmlAttrib) {\n          var attr = htmlAttrib.trim().split(\"=\");\n          if (attr.length === 1) {\n            tmpEl.documentElement.setAttribute(attr[0], true);\n          } else {\n            tmpEl.documentElement.setAttribute(attr[0], attr[1].slice(1, -1));\n          }\n        });\n      }\n    }\n\n    tmpEl.documentElement.innerHTML = html;\n    this.log(\n      \"load content\",\n      tmpEl.documentElement.attributes,\n      tmpEl.documentElement.innerHTML.length\n    );\n\n    // Clear out any focused controls before inserting new page contents.\n    if (\n      document.activeElement &&\n      contains(document, this.options.selectors, document.activeElement)\n    ) {\n      try {\n        document.activeElement.blur();\n      } catch (e) {} // eslint-disable-line no-empty\n    }\n\n    this.switchSelectors(this.options.selectors, tmpEl, document, options);\n  },\n\n  abortRequest: require(\"./lib/abort-request\"),\n\n  doRequest: require(\"./lib/send-request\"),\n\n  handleResponse: require(\"./lib/proto/handle-response\"),\n\n  loadUrl: function(href, options) {\n    options =\n      typeof options === \"object\"\n        ? extend({}, this.options, options)\n        : clone(this.options);\n\n    this.log(\"load href\", href, options);\n\n    // Abort any previous request\n    this.abortRequest(this.request);\n\n    trigger(document, \"pjax:send\", options);\n\n    // Do the request\n    this.request = this.doRequest(\n      href,\n      options,\n      this.handleResponse.bind(this)\n    );\n  },\n\n  afterAllSwitches: function() {\n    // FF bug: Won’t autofocus fields that are inserted via JS.\n    // This behavior is incorrect. So if theres no current focus, autofocus\n    // the last field.\n    //\n    // http://www.w3.org/html/wg/drafts/html/master/forms.html\n    var autofocusEl = Array.prototype.slice\n      .call(document.querySelectorAll(\"[autofocus]\"))\n      .pop();\n    if (autofocusEl && document.activeElement !== autofocusEl) {\n      autofocusEl.focus();\n    }\n\n    // execute scripts when DOM have been completely updated\n    this.options.selectors.forEach(function(selector) {\n      forEachEls(document.querySelectorAll(selector), function(el) {\n        // executeScripts(el);\n        if (el === 0) ;  // intentially left blank!\n      });\n    });\n\n    var state = this.state;\n\n    if (state.options.history) {\n      if (!window.history.state) {\n        this.lastUid = this.maxUid = newUid();\n        window.history.replaceState(\n          {\n            url: window.location.href,\n            title: document.title,\n            uid: this.maxUid,\n            scrollPos: [0, 0]\n          },\n          document.title\n        );\n      }\n\n      // Update browser history\n      this.lastUid = this.maxUid = newUid();\n\n      window.history.pushState(\n        {\n          url: state.href,\n          title: state.options.title,\n          uid: this.maxUid,\n          scrollPos: [0, 0]\n        },\n        state.options.title,\n        state.href\n      );\n    }\n\n    this.forEachSelectors(function(el) {\n      this.parseDOM(el);\n    }, this);\n\n    // Fire Events\n    trigger(document, \"pjax:complete pjax:success\", state.options);\n\n    if (typeof state.options.analytics === \"function\") {\n      state.options.analytics();\n    }\n\n    if (state.options.history) {\n      // First parse url and check for hash to override scroll\n      var a = document.createElement(\"a\");\n      a.href = this.state.href;\n      if (a.hash) {\n        var name = a.hash.slice(1);\n        name = decodeURIComponent(name);\n\n        var curtop = 0;\n        var target =\n          document.getElementById(name) || document.getElementsByName(name)[0];\n        if (target) {\n          // http://stackoverflow.com/questions/8111094/cross-browser-javascript-function-to-find-actual-position-of-an-element-in-page\n          if (target.offsetParent) {\n            do {\n              curtop += target.offsetTop;\n\n              target = target.offsetParent;\n            } while (target);\n          }\n        }\n        window.scrollTo(0, curtop);\n      } else if (state.options.scrollTo !== false) {\n        // Scroll page to top on new page load\n        if (state.options.scrollTo.length > 1) {\n          window.scrollTo(state.options.scrollTo[0], state.options.scrollTo[1]);\n        } else {\n          window.scrollTo(0, state.options.scrollTo);\n        }\n      }\n    } else if (state.options.scrollRestoration && state.options.scrollPos) {\n      window.scrollTo(state.options.scrollPos[0], state.options.scrollPos[1]);\n    }\n\n    this.state = {\n      numPendingSwitches: 0,\n      href: null,\n      options: null\n    };\n  }\n};\n\nPjax.isSupported = require(\"./lib/is-supported\");\n\n// arguably could do `if( require(\"./lib/is-supported\")()) {` but that might be a little to simple\nif (Pjax.isSupported()) {\n  module.exports = Pjax;\n}\n// if there isn’t required browser functions, returning stupid api\nelse {\n  var stupidPjax = noop;\n  for (var key in Pjax.prototype) {\n    if (\n      Pjax.prototype.hasOwnProperty(key) &&\n      typeof Pjax.prototype[key] === \"function\"\n    ) {\n      stupidPjax[key] = noop;\n    }\n  }\n\n  module.exports = stupidPjax;\n}\n","date":"2023-06-15T18:42:17.930Z","updated":"2023-06-15T18:42:17.930Z","path":"lib/pjax/index.js","layout":"false","title":"","comments":1,"_id":"clixi465y000537jx9lrwew9g","content":"// var executeScripts = require(\"./lib/execute-scripts\");  // unused-var\nvar forEachEls = require(\"./lib/foreach-els\");\nvar parseOptions = require(\"./lib/parse-options\");\nvar switches = require(\"./lib/switches\");\nvar newUid = require(\"./lib/uniqueid\");\n\nvar on = require(\"./lib/events/on\");\nvar trigger = require(\"./lib/events/trigger\");\n\nvar clone = require(\"./lib/util/clone\");\nvar contains = require(\"./lib/util/contains\");\nvar extend = require(\"./lib/util/extend\");\nvar noop = require(\"./lib/util/noop\");\n\nvar Pjax = function(options) {\n  this.state = {\n    numPendingSwitches: 0,\n    href: null,\n    options: null\n  };\n\n  this.options = parseOptions(options);\n  this.log(\"Pjax options\", this.options);\n\n  if (this.options.scrollRestoration && \"scrollRestoration\" in history) {\n    history.scrollRestoration = \"manual\";\n  }\n\n  this.maxUid = this.lastUid = newUid();\n\n  this.parseDOM(document);\n\n  on(\n    window,\n    \"popstate\",\n    function(st) {\n      if (st.state) {\n        var opt = clone(this.options);\n        opt.url = st.state.url;\n        opt.title = st.state.title;\n        // Since state already exists, prevent it from being pushed again\n        opt.history = false;\n        opt.scrollPos = st.state.scrollPos;\n        if (st.state.uid < this.lastUid) {\n          opt.backward = true;\n        } else {\n          opt.forward = true;\n        }\n        this.lastUid = st.state.uid;\n\n        // @todo implement history cache here, based on uid\n        this.loadUrl(st.state.url, opt);\n      }\n    }.bind(this)\n  );\n};\n\nPjax.switches = switches;\n\nPjax.prototype = {\n  log: require(\"./lib/proto/log\"),\n\n  getElements: function(el) {\n    return el.querySelectorAll(this.options.elements);\n  },\n\n  parseDOM: function(el) {\n    var parseElement = require(\"./lib/proto/parse-element\");\n    forEachEls(this.getElements(el), parseElement, this);\n  },\n\n  refresh: function(el) {\n    this.parseDOM(el || document);\n  },\n\n  reload: function() {\n    window.location.reload();\n  },\n\n  attachLink: require(\"./lib/proto/attach-link\"),\n\n  attachForm: require(\"./lib/proto/attach-form\"),\n\n  forEachSelectors: function(cb, context, DOMcontext) {\n    return require(\"./lib/foreach-selectors\").bind(this)(\n      this.options.selectors,\n      cb,\n      context,\n      DOMcontext\n    );\n  },\n\n  switchSelectors: function(selectors, fromEl, toEl, options) {\n    return require(\"./lib/switches-selectors\").bind(this)(\n      this.options.switches,\n      this.options.switchesOptions,\n      selectors,\n      fromEl,\n      toEl,\n      options\n    );\n  },\n\n  latestChance: function(href) {\n    window.location = href;\n  },\n\n  onSwitch: function() {\n    trigger(window, \"resize scroll\");\n\n    this.state.numPendingSwitches--;\n\n    // debounce calls, so we only run this once after all switches are finished.\n    if (this.state.numPendingSwitches === 0) {\n      this.afterAllSwitches();\n    }\n  },\n\n  loadContent: function(html, options) {\n    if (typeof html !== \"string\") {\n      trigger(document, \"pjax:complete pjax:error\", options);\n\n      return;\n    }\n\n    var tmpEl = document.implementation.createHTMLDocument(\"pjax\");\n\n    // parse HTML attributes to copy them\n    // since we are forced to use documentElement.innerHTML (outerHTML can't be used for <html>)\n    var htmlRegex = /<html[^>]+>/gi;\n    var htmlAttribsRegex = /\\s?[a-z:]+(?:=['\"][^'\">]+['\"])*/gi;\n    var matches = html.match(htmlRegex);\n    if (matches && matches.length) {\n      matches = matches[0].match(htmlAttribsRegex);\n      if (matches.length) {\n        matches.shift();\n        matches.forEach(function(htmlAttrib) {\n          var attr = htmlAttrib.trim().split(\"=\");\n          if (attr.length === 1) {\n            tmpEl.documentElement.setAttribute(attr[0], true);\n          } else {\n            tmpEl.documentElement.setAttribute(attr[0], attr[1].slice(1, -1));\n          }\n        });\n      }\n    }\n\n    tmpEl.documentElement.innerHTML = html;\n    this.log(\n      \"load content\",\n      tmpEl.documentElement.attributes,\n      tmpEl.documentElement.innerHTML.length\n    );\n\n    // Clear out any focused controls before inserting new page contents.\n    if (\n      document.activeElement &&\n      contains(document, this.options.selectors, document.activeElement)\n    ) {\n      try {\n        document.activeElement.blur();\n      } catch (e) {} // eslint-disable-line no-empty\n    }\n\n    this.switchSelectors(this.options.selectors, tmpEl, document, options);\n  },\n\n  abortRequest: require(\"./lib/abort-request\"),\n\n  doRequest: require(\"./lib/send-request\"),\n\n  handleResponse: require(\"./lib/proto/handle-response\"),\n\n  loadUrl: function(href, options) {\n    options =\n      typeof options === \"object\"\n        ? extend({}, this.options, options)\n        : clone(this.options);\n\n    this.log(\"load href\", href, options);\n\n    // Abort any previous request\n    this.abortRequest(this.request);\n\n    trigger(document, \"pjax:send\", options);\n\n    // Do the request\n    this.request = this.doRequest(\n      href,\n      options,\n      this.handleResponse.bind(this)\n    );\n  },\n\n  afterAllSwitches: function() {\n    // FF bug: Won’t autofocus fields that are inserted via JS.\n    // This behavior is incorrect. So if theres no current focus, autofocus\n    // the last field.\n    //\n    // http://www.w3.org/html/wg/drafts/html/master/forms.html\n    var autofocusEl = Array.prototype.slice\n      .call(document.querySelectorAll(\"[autofocus]\"))\n      .pop();\n    if (autofocusEl && document.activeElement !== autofocusEl) {\n      autofocusEl.focus();\n    }\n\n    // execute scripts when DOM have been completely updated\n    this.options.selectors.forEach(function(selector) {\n      forEachEls(document.querySelectorAll(selector), function(el) {\n        // executeScripts(el);\n        if (el === 0) ;  // intentially left blank!\n      });\n    });\n\n    var state = this.state;\n\n    if (state.options.history) {\n      if (!window.history.state) {\n        this.lastUid = this.maxUid = newUid();\n        window.history.replaceState(\n          {\n            url: window.location.href,\n            title: document.title,\n            uid: this.maxUid,\n            scrollPos: [0, 0]\n          },\n          document.title\n        );\n      }\n\n      // Update browser history\n      this.lastUid = this.maxUid = newUid();\n\n      window.history.pushState(\n        {\n          url: state.href,\n          title: state.options.title,\n          uid: this.maxUid,\n          scrollPos: [0, 0]\n        },\n        state.options.title,\n        state.href\n      );\n    }\n\n    this.forEachSelectors(function(el) {\n      this.parseDOM(el);\n    }, this);\n\n    // Fire Events\n    trigger(document, \"pjax:complete pjax:success\", state.options);\n\n    if (typeof state.options.analytics === \"function\") {\n      state.options.analytics();\n    }\n\n    if (state.options.history) {\n      // First parse url and check for hash to override scroll\n      var a = document.createElement(\"a\");\n      a.href = this.state.href;\n      if (a.hash) {\n        var name = a.hash.slice(1);\n        name = decodeURIComponent(name);\n\n        var curtop = 0;\n        var target =\n          document.getElementById(name) || document.getElementsByName(name)[0];\n        if (target) {\n          // http://stackoverflow.com/questions/8111094/cross-browser-javascript-function-to-find-actual-position-of-an-element-in-page\n          if (target.offsetParent) {\n            do {\n              curtop += target.offsetTop;\n\n              target = target.offsetParent;\n            } while (target);\n          }\n        }\n        window.scrollTo(0, curtop);\n      } else if (state.options.scrollTo !== false) {\n        // Scroll page to top on new page load\n        if (state.options.scrollTo.length > 1) {\n          window.scrollTo(state.options.scrollTo[0], state.options.scrollTo[1]);\n        } else {\n          window.scrollTo(0, state.options.scrollTo);\n        }\n      }\n    } else if (state.options.scrollRestoration && state.options.scrollPos) {\n      window.scrollTo(state.options.scrollPos[0], state.options.scrollPos[1]);\n    }\n\n    this.state = {\n      numPendingSwitches: 0,\n      href: null,\n      options: null\n    };\n  }\n};\n\nPjax.isSupported = require(\"./lib/is-supported\");\n\n// arguably could do `if( require(\"./lib/is-supported\")()) {` but that might be a little to simple\nif (Pjax.isSupported()) {\n  module.exports = Pjax;\n}\n// if there isn’t required browser functions, returning stupid api\nelse {\n  var stupidPjax = noop;\n  for (var key in Pjax.prototype) {\n    if (\n      Pjax.prototype.hasOwnProperty(key) &&\n      typeof Pjax.prototype[key] === \"function\"\n    ) {\n      stupidPjax[key] = noop;\n    }\n  }\n\n  module.exports = stupidPjax;\n}\n","site":{"data":{}},"length":6473,"excerpt":"","more":"// var executeScripts = require(\"./lib/execute-scripts\");  // unused-var\nvar forEachEls = require(\"./lib/foreach-els\");\nvar parseOptions = require(\"./lib/parse-options\");\nvar switches = require(\"./lib/switches\");\nvar newUid = require(\"./lib/uniqueid\");\n\nvar on = require(\"./lib/events/on\");\nvar trigger = require(\"./lib/events/trigger\");\n\nvar clone = require(\"./lib/util/clone\");\nvar contains = require(\"./lib/util/contains\");\nvar extend = require(\"./lib/util/extend\");\nvar noop = require(\"./lib/util/noop\");\n\nvar Pjax = function(options) {\n  this.state = {\n    numPendingSwitches: 0,\n    href: null,\n    options: null\n  };\n\n  this.options = parseOptions(options);\n  this.log(\"Pjax options\", this.options);\n\n  if (this.options.scrollRestoration && \"scrollRestoration\" in history) {\n    history.scrollRestoration = \"manual\";\n  }\n\n  this.maxUid = this.lastUid = newUid();\n\n  this.parseDOM(document);\n\n  on(\n    window,\n    \"popstate\",\n    function(st) {\n      if (st.state) {\n        var opt = clone(this.options);\n        opt.url = st.state.url;\n        opt.title = st.state.title;\n        // Since state already exists, prevent it from being pushed again\n        opt.history = false;\n        opt.scrollPos = st.state.scrollPos;\n        if (st.state.uid < this.lastUid) {\n          opt.backward = true;\n        } else {\n          opt.forward = true;\n        }\n        this.lastUid = st.state.uid;\n\n        // @todo implement history cache here, based on uid\n        this.loadUrl(st.state.url, opt);\n      }\n    }.bind(this)\n  );\n};\n\nPjax.switches = switches;\n\nPjax.prototype = {\n  log: require(\"./lib/proto/log\"),\n\n  getElements: function(el) {\n    return el.querySelectorAll(this.options.elements);\n  },\n\n  parseDOM: function(el) {\n    var parseElement = require(\"./lib/proto/parse-element\");\n    forEachEls(this.getElements(el), parseElement, this);\n  },\n\n  refresh: function(el) {\n    this.parseDOM(el || document);\n  },\n\n  reload: function() {\n    window.location.reload();\n  },\n\n  attachLink: require(\"./lib/proto/attach-link\"),\n\n  attachForm: require(\"./lib/proto/attach-form\"),\n\n  forEachSelectors: function(cb, context, DOMcontext) {\n    return require(\"./lib/foreach-selectors\").bind(this)(\n      this.options.selectors,\n      cb,\n      context,\n      DOMcontext\n    );\n  },\n\n  switchSelectors: function(selectors, fromEl, toEl, options) {\n    return require(\"./lib/switches-selectors\").bind(this)(\n      this.options.switches,\n      this.options.switchesOptions,\n      selectors,\n      fromEl,\n      toEl,\n      options\n    );\n  },\n\n  latestChance: function(href) {\n    window.location = href;\n  },\n\n  onSwitch: function() {\n    trigger(window, \"resize scroll\");\n\n    this.state.numPendingSwitches--;\n\n    // debounce calls, so we only run this once after all switches are finished.\n    if (this.state.numPendingSwitches === 0) {\n      this.afterAllSwitches();\n    }\n  },\n\n  loadContent: function(html, options) {\n    if (typeof html !== \"string\") {\n      trigger(document, \"pjax:complete pjax:error\", options);\n\n      return;\n    }\n\n    var tmpEl = document.implementation.createHTMLDocument(\"pjax\");\n\n    // parse HTML attributes to copy them\n    // since we are forced to use documentElement.innerHTML (outerHTML can't be used for <html>)\n    var htmlRegex = /<html[^>]+>/gi;\n    var htmlAttribsRegex = /\\s?[a-z:]+(?:=['\"][^'\">]+['\"])*/gi;\n    var matches = html.match(htmlRegex);\n    if (matches && matches.length) {\n      matches = matches[0].match(htmlAttribsRegex);\n      if (matches.length) {\n        matches.shift();\n        matches.forEach(function(htmlAttrib) {\n          var attr = htmlAttrib.trim().split(\"=\");\n          if (attr.length === 1) {\n            tmpEl.documentElement.setAttribute(attr[0], true);\n          } else {\n            tmpEl.documentElement.setAttribute(attr[0], attr[1].slice(1, -1));\n          }\n        });\n      }\n    }\n\n    tmpEl.documentElement.innerHTML = html;\n    this.log(\n      \"load content\",\n      tmpEl.documentElement.attributes,\n      tmpEl.documentElement.innerHTML.length\n    );\n\n    // Clear out any focused controls before inserting new page contents.\n    if (\n      document.activeElement &&\n      contains(document, this.options.selectors, document.activeElement)\n    ) {\n      try {\n        document.activeElement.blur();\n      } catch (e) {} // eslint-disable-line no-empty\n    }\n\n    this.switchSelectors(this.options.selectors, tmpEl, document, options);\n  },\n\n  abortRequest: require(\"./lib/abort-request\"),\n\n  doRequest: require(\"./lib/send-request\"),\n\n  handleResponse: require(\"./lib/proto/handle-response\"),\n\n  loadUrl: function(href, options) {\n    options =\n      typeof options === \"object\"\n        ? extend({}, this.options, options)\n        : clone(this.options);\n\n    this.log(\"load href\", href, options);\n\n    // Abort any previous request\n    this.abortRequest(this.request);\n\n    trigger(document, \"pjax:send\", options);\n\n    // Do the request\n    this.request = this.doRequest(\n      href,\n      options,\n      this.handleResponse.bind(this)\n    );\n  },\n\n  afterAllSwitches: function() {\n    // FF bug: Won’t autofocus fields that are inserted via JS.\n    // This behavior is incorrect. So if theres no current focus, autofocus\n    // the last field.\n    //\n    // http://www.w3.org/html/wg/drafts/html/master/forms.html\n    var autofocusEl = Array.prototype.slice\n      .call(document.querySelectorAll(\"[autofocus]\"))\n      .pop();\n    if (autofocusEl && document.activeElement !== autofocusEl) {\n      autofocusEl.focus();\n    }\n\n    // execute scripts when DOM have been completely updated\n    this.options.selectors.forEach(function(selector) {\n      forEachEls(document.querySelectorAll(selector), function(el) {\n        // executeScripts(el);\n        if (el === 0) ;  // intentially left blank!\n      });\n    });\n\n    var state = this.state;\n\n    if (state.options.history) {\n      if (!window.history.state) {\n        this.lastUid = this.maxUid = newUid();\n        window.history.replaceState(\n          {\n            url: window.location.href,\n            title: document.title,\n            uid: this.maxUid,\n            scrollPos: [0, 0]\n          },\n          document.title\n        );\n      }\n\n      // Update browser history\n      this.lastUid = this.maxUid = newUid();\n\n      window.history.pushState(\n        {\n          url: state.href,\n          title: state.options.title,\n          uid: this.maxUid,\n          scrollPos: [0, 0]\n        },\n        state.options.title,\n        state.href\n      );\n    }\n\n    this.forEachSelectors(function(el) {\n      this.parseDOM(el);\n    }, this);\n\n    // Fire Events\n    trigger(document, \"pjax:complete pjax:success\", state.options);\n\n    if (typeof state.options.analytics === \"function\") {\n      state.options.analytics();\n    }\n\n    if (state.options.history) {\n      // First parse url and check for hash to override scroll\n      var a = document.createElement(\"a\");\n      a.href = this.state.href;\n      if (a.hash) {\n        var name = a.hash.slice(1);\n        name = decodeURIComponent(name);\n\n        var curtop = 0;\n        var target =\n          document.getElementById(name) || document.getElementsByName(name)[0];\n        if (target) {\n          // http://stackoverflow.com/questions/8111094/cross-browser-javascript-function-to-find-actual-position-of-an-element-in-page\n          if (target.offsetParent) {\n            do {\n              curtop += target.offsetTop;\n\n              target = target.offsetParent;\n            } while (target);\n          }\n        }\n        window.scrollTo(0, curtop);\n      } else if (state.options.scrollTo !== false) {\n        // Scroll page to top on new page load\n        if (state.options.scrollTo.length > 1) {\n          window.scrollTo(state.options.scrollTo[0], state.options.scrollTo[1]);\n        } else {\n          window.scrollTo(0, state.options.scrollTo);\n        }\n      }\n    } else if (state.options.scrollRestoration && state.options.scrollPos) {\n      window.scrollTo(state.options.scrollPos[0], state.options.scrollPos[1]);\n    }\n\n    this.state = {\n      numPendingSwitches: 0,\n      href: null,\n      options: null\n    };\n  }\n};\n\nPjax.isSupported = require(\"./lib/is-supported\");\n\n// arguably could do `if( require(\"./lib/is-supported\")()) {` but that might be a little to simple\nif (Pjax.isSupported()) {\n  module.exports = Pjax;\n}\n// if there isn’t required browser functions, returning stupid api\nelse {\n  var stupidPjax = noop;\n  for (var key in Pjax.prototype) {\n    if (\n      Pjax.prototype.hasOwnProperty(key) &&\n      typeof Pjax.prototype[key] === \"function\"\n    ) {\n      stupidPjax[key] = noop;\n    }\n  }\n\n  module.exports = stupidPjax;\n}\n"},{"_content":"{\n  \"name\": \"pjax\",\n  \"version\": \"0.2.8\",\n  \"description\": \"Easily enable fast AJAX navigation on any website (using pushState + XHR)\",\n  \"keywords\": [\n    \"pjax\",\n    \"pushstate\",\n    \"ajax\",\n    \"navigation\",\n    \"transition\",\n    \"animation\"\n  ],\n  \"repository\": \"https://github.com/MoOx/pjax.git\",\n  \"author\": \"Maxime Thirouin\",\n  \"contributors\": [\n    \"BehindTheMath\",\n    \"Robin North (http://robinnorth.co.uk)\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"index.js\",\n  \"files\": [\n    \"index.js\",\n    \"lib\",\n    \"pjax.js\",\n    \"pjax.min.js\",\n    \"index.d.ts\"\n  ],\n  \"types\": \"index.d.ts\",\n  \"devDependencies\": {\n    \"browserify\": \"^16.5.0\",\n    \"eslint\": \"^6.6.0\",\n    \"eslint-config-i-am-meticulous\": \"^11.0.0\",\n    \"husky\": \"^3.1.0\",\n    \"jsdom\": \"^15.2.1\",\n    \"jsdom-global\": \"^3.0.2\",\n    \"lint-staged\": \"^9.4.3\",\n    \"npmpub\": \"^5.0.0\",\n    \"nyc\": \"^14.1.1\",\n    \"opn-cli\": \"^5.0.0\",\n    \"prettier\": \"^1.19.1\",\n    \"serve\": \"^11.2.0\",\n    \"tap-nyc\": \"^1.0.3\",\n    \"tap-spec\": \"^5.0.0\",\n    \"tape\": \"^4.11.0\",\n    \"uglify-js\": \"^3.6.9\"\n  },\n  \"scripts\": {\n    \"lint\": \"eslint .\",\n    \"standalone\": \"browserify index.js --standalone Pjax > pjax.js\",\n    \"build\": \"npm run standalone && uglifyjs pjax.js -o pjax.min.js\",\n    \"build-debug\": \"browserify index.js --debug --standalone Pjax > pjax.js\",\n    \"tests\": \"tape -r ./tests/setup.js \\\"./tests/**/*.js\\\"\",\n    \"test\": \"npm run lint && npm run tests | tap-spec\",\n    \"coverage-tests\": \"npm run tests | tap-nyc\",\n    \"coverage\": \"nyc -x \\\"tests/**\\\" npm run coverage-tests\",\n    \"example\": \"open http://localhost:3000/example/ && serve -p 3000 .\",\n    \"prepublish\": \"npm run build\",\n    \"release\": \"npmpub\"\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm test && lint-staged\"\n    }\n  },\n  \"lint-staged\": {\n    \"*.js\": [\n      \"eslint --fix\",\n      \"prettier --write\",\n      \"git add\"\n    ]\n  }\n}\n","source":"lib/pjax/package.json","raw":"{\n  \"name\": \"pjax\",\n  \"version\": \"0.2.8\",\n  \"description\": \"Easily enable fast AJAX navigation on any website (using pushState + XHR)\",\n  \"keywords\": [\n    \"pjax\",\n    \"pushstate\",\n    \"ajax\",\n    \"navigation\",\n    \"transition\",\n    \"animation\"\n  ],\n  \"repository\": \"https://github.com/MoOx/pjax.git\",\n  \"author\": \"Maxime Thirouin\",\n  \"contributors\": [\n    \"BehindTheMath\",\n    \"Robin North (http://robinnorth.co.uk)\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"index.js\",\n  \"files\": [\n    \"index.js\",\n    \"lib\",\n    \"pjax.js\",\n    \"pjax.min.js\",\n    \"index.d.ts\"\n  ],\n  \"types\": \"index.d.ts\",\n  \"devDependencies\": {\n    \"browserify\": \"^16.5.0\",\n    \"eslint\": \"^6.6.0\",\n    \"eslint-config-i-am-meticulous\": \"^11.0.0\",\n    \"husky\": \"^3.1.0\",\n    \"jsdom\": \"^15.2.1\",\n    \"jsdom-global\": \"^3.0.2\",\n    \"lint-staged\": \"^9.4.3\",\n    \"npmpub\": \"^5.0.0\",\n    \"nyc\": \"^14.1.1\",\n    \"opn-cli\": \"^5.0.0\",\n    \"prettier\": \"^1.19.1\",\n    \"serve\": \"^11.2.0\",\n    \"tap-nyc\": \"^1.0.3\",\n    \"tap-spec\": \"^5.0.0\",\n    \"tape\": \"^4.11.0\",\n    \"uglify-js\": \"^3.6.9\"\n  },\n  \"scripts\": {\n    \"lint\": \"eslint .\",\n    \"standalone\": \"browserify index.js --standalone Pjax > pjax.js\",\n    \"build\": \"npm run standalone && uglifyjs pjax.js -o pjax.min.js\",\n    \"build-debug\": \"browserify index.js --debug --standalone Pjax > pjax.js\",\n    \"tests\": \"tape -r ./tests/setup.js \\\"./tests/**/*.js\\\"\",\n    \"test\": \"npm run lint && npm run tests | tap-spec\",\n    \"coverage-tests\": \"npm run tests | tap-nyc\",\n    \"coverage\": \"nyc -x \\\"tests/**\\\" npm run coverage-tests\",\n    \"example\": \"open http://localhost:3000/example/ && serve -p 3000 .\",\n    \"prepublish\": \"npm run build\",\n    \"release\": \"npmpub\"\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm test && lint-staged\"\n    }\n  },\n  \"lint-staged\": {\n    \"*.js\": [\n      \"eslint --fix\",\n      \"prettier --write\",\n      \"git add\"\n    ]\n  }\n}\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/package.json","layout":"false","title":"","comments":1,"_id":"clixi465z000637jxgxoehnf3","content":"{\"name\":\"pjax\",\"version\":\"0.2.8\",\"description\":\"Easily enable fast AJAX navigation on any website (using pushState + XHR)\",\"keywords\":[\"pjax\",\"pushstate\",\"ajax\",\"navigation\",\"transition\",\"animation\"],\"repository\":\"https://github.com/MoOx/pjax.git\",\"author\":\"Maxime Thirouin\",\"contributors\":[\"BehindTheMath\",\"Robin North (http://robinnorth.co.uk)\"],\"license\":\"MIT\",\"main\":\"index.js\",\"files\":[\"index.js\",\"lib\",\"pjax.js\",\"pjax.min.js\",\"index.d.ts\"],\"types\":\"index.d.ts\",\"devDependencies\":{\"browserify\":\"^16.5.0\",\"eslint\":\"^6.6.0\",\"eslint-config-i-am-meticulous\":\"^11.0.0\",\"husky\":\"^3.1.0\",\"jsdom\":\"^15.2.1\",\"jsdom-global\":\"^3.0.2\",\"lint-staged\":\"^9.4.3\",\"npmpub\":\"^5.0.0\",\"nyc\":\"^14.1.1\",\"opn-cli\":\"^5.0.0\",\"prettier\":\"^1.19.1\",\"serve\":\"^11.2.0\",\"tap-nyc\":\"^1.0.3\",\"tap-spec\":\"^5.0.0\",\"tape\":\"^4.11.0\",\"uglify-js\":\"^3.6.9\"},\"scripts\":{\"lint\":\"eslint .\",\"standalone\":\"browserify index.js --standalone Pjax > pjax.js\",\"build\":\"npm run standalone && uglifyjs pjax.js -o pjax.min.js\",\"build-debug\":\"browserify index.js --debug --standalone Pjax > pjax.js\",\"tests\":\"tape -r ./tests/setup.js \\\"./tests/**/*.js\\\"\",\"test\":\"npm run lint && npm run tests | tap-spec\",\"coverage-tests\":\"npm run tests | tap-nyc\",\"coverage\":\"nyc -x \\\"tests/**\\\" npm run coverage-tests\",\"example\":\"open http://localhost:3000/example/ && serve -p 3000 .\",\"prepublish\":\"npm run build\",\"release\":\"npmpub\"},\"husky\":{\"hooks\":{\"pre-commit\":\"npm test && lint-staged\"}},\"lint-staged\":{\"*.js\":[\"eslint --fix\",\"prettier --write\",\"git add\"]}}","site":{"data":{}},"length":1430,"excerpt":"","more":"{\"name\":\"pjax\",\"version\":\"0.2.8\",\"description\":\"Easily enable fast AJAX navigation on any website (using pushState + XHR)\",\"keywords\":[\"pjax\",\"pushstate\",\"ajax\",\"navigation\",\"transition\",\"animation\"],\"repository\":\"https://github.com/MoOx/pjax.git\",\"author\":\"Maxime Thirouin\",\"contributors\":[\"BehindTheMath\",\"Robin North (http://robinnorth.co.uk)\"],\"license\":\"MIT\",\"main\":\"index.js\",\"files\":[\"index.js\",\"lib\",\"pjax.js\",\"pjax.min.js\",\"index.d.ts\"],\"types\":\"index.d.ts\",\"devDependencies\":{\"browserify\":\"^16.5.0\",\"eslint\":\"^6.6.0\",\"eslint-config-i-am-meticulous\":\"^11.0.0\",\"husky\":\"^3.1.0\",\"jsdom\":\"^15.2.1\",\"jsdom-global\":\"^3.0.2\",\"lint-staged\":\"^9.4.3\",\"npmpub\":\"^5.0.0\",\"nyc\":\"^14.1.1\",\"opn-cli\":\"^5.0.0\",\"prettier\":\"^1.19.1\",\"serve\":\"^11.2.0\",\"tap-nyc\":\"^1.0.3\",\"tap-spec\":\"^5.0.0\",\"tape\":\"^4.11.0\",\"uglify-js\":\"^3.6.9\"},\"scripts\":{\"lint\":\"eslint .\",\"standalone\":\"browserify index.js --standalone Pjax > pjax.js\",\"build\":\"npm run standalone && uglifyjs pjax.js -o pjax.min.js\",\"build-debug\":\"browserify index.js --debug --standalone Pjax > pjax.js\",\"tests\":\"tape -r ./tests/setup.js \\\"./tests/**/*.js\\\"\",\"test\":\"npm run lint && npm run tests | tap-spec\",\"coverage-tests\":\"npm run tests | tap-nyc\",\"coverage\":\"nyc -x \\\"tests/**\\\" npm run coverage-tests\",\"example\":\"open http://localhost:3000/example/ && serve -p 3000 .\",\"prepublish\":\"npm run build\",\"release\":\"npmpub\"},\"husky\":{\"hooks\":{\"pre-commit\":\"npm test && lint-staged\"}},\"lint-staged\":{\"*.js\":[\"eslint --fix\",\"prettier --write\",\"git add\"]}}"},{"_content":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Forms</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Forms</h1>\n      Hello. Try out the examples below and inspect the results in your browser's developer tools, or go to the <a href=\"index.html\" class=\"js-Pjax\">Index</a>.\n\n      <h3>GET form</h3>\n\n      <form action=\"\" method=\"get\" class=\"js-Pjax\" id=\"get-form\">\n        <label for=\"get-form-text\">Text input:</label>\n        <input type=\"text\" name=\"textInput\" id=\"get-form-text\" value=\"Foobar\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-number\">Number input:</label>\n        <input type=\"number\" name=\"numberInput\" id=\"get-form-number\" value=\"1\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-email\">Email input:</label>\n        <input type=\"email\" name=\"emailInput\" id=\"get-form-email\" value=\"example@example.com\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-textarea\">Textarea:</label>\n        <textarea name=\"textarea\" id=\"get-form-textarea\">This is some text</textarea>\n\n        <br />\n        <br />\n\n        <fieldset>\n          <label for=\"get-form-radio-1\">Radio input:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-1\" checked id=\"get-form-radio-1\" />\n\n          <label for=\"get-form-radio-2\">Radio input alt:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-2\" id=\"get-form-radio-2\" />\n        </fieldset>\n\n        <br />\n        <br />\n\n        <label for=\"get-form-checkbox\">Checkbox input:</label>\n        <input type=\"checkbox\" name=\"checkboxInput\" checked id=\"get-form-checkbox\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-select\">Select list:</label>\n        <select multiple name=\"select\" id=\"get-form-select\">\n          <option>\n            Option 1\n          </option>\n          <option>\n            Option 2\n          </option>\n        </select>\n\n        <br />\n        <br />\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n      <br />\n      <br />\n\n      <h3>POST form</h3>\n\n      <form action=\"\" method=\"post\" class=\"js-Pjax\" id=\"post-form\">\n        <label for=\"post-form-text\">Text input:</label>\n        <input type=\"text\" name=\"textInput\" id=\"post-form-text\" value=\"Foobar\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-number\">Number input:</label>\n        <input type=\"number\" name=\"numberInput\" id=\"post-form-number\" value=\"1\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-email\">Email input:</label>\n        <input type=\"email\" name=\"emailInput\" id=\"post-form-email\" value=\"example@example.com\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-textarea\">Textarea:</label>\n        <textarea name=\"textarea\" id=\"post-form-textarea\">This is some text</textarea>\n\n        <br />\n        <br />\n\n        <fieldset>\n          <label for=\"post-form-radio-1\">Radio input:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-1\" checked id=\"post-form-radio-1\" />\n\n          <label for=\"post-form-radio-2\">Radio input alt:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-2\" id=\"post-form-radio-2\" />\n        </fieldset>\n\n        <br />\n        <br />\n\n        <label for=\"post-form-checkbox\">Checkbox input:</label>\n        <input type=\"checkbox\" name=\"checkboxInput\" checked id=\"post-form-checkbox\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-select\">Select list:</label>\n        <select multiple name=\"select\" id=\"post-form-select\">\n          <option>\n            Option 1\n          </option>\n          <option>\n            Option 2\n          </option>\n        </select>\n\n        <br />\n        <br />\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  </body>\n</html>\n","source":"lib/pjax/example/forms.html","raw":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Forms</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Forms</h1>\n      Hello. Try out the examples below and inspect the results in your browser's developer tools, or go to the <a href=\"index.html\" class=\"js-Pjax\">Index</a>.\n\n      <h3>GET form</h3>\n\n      <form action=\"\" method=\"get\" class=\"js-Pjax\" id=\"get-form\">\n        <label for=\"get-form-text\">Text input:</label>\n        <input type=\"text\" name=\"textInput\" id=\"get-form-text\" value=\"Foobar\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-number\">Number input:</label>\n        <input type=\"number\" name=\"numberInput\" id=\"get-form-number\" value=\"1\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-email\">Email input:</label>\n        <input type=\"email\" name=\"emailInput\" id=\"get-form-email\" value=\"example@example.com\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-textarea\">Textarea:</label>\n        <textarea name=\"textarea\" id=\"get-form-textarea\">This is some text</textarea>\n\n        <br />\n        <br />\n\n        <fieldset>\n          <label for=\"get-form-radio-1\">Radio input:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-1\" checked id=\"get-form-radio-1\" />\n\n          <label for=\"get-form-radio-2\">Radio input alt:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-2\" id=\"get-form-radio-2\" />\n        </fieldset>\n\n        <br />\n        <br />\n\n        <label for=\"get-form-checkbox\">Checkbox input:</label>\n        <input type=\"checkbox\" name=\"checkboxInput\" checked id=\"get-form-checkbox\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-select\">Select list:</label>\n        <select multiple name=\"select\" id=\"get-form-select\">\n          <option>\n            Option 1\n          </option>\n          <option>\n            Option 2\n          </option>\n        </select>\n\n        <br />\n        <br />\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n      <br />\n      <br />\n\n      <h3>POST form</h3>\n\n      <form action=\"\" method=\"post\" class=\"js-Pjax\" id=\"post-form\">\n        <label for=\"post-form-text\">Text input:</label>\n        <input type=\"text\" name=\"textInput\" id=\"post-form-text\" value=\"Foobar\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-number\">Number input:</label>\n        <input type=\"number\" name=\"numberInput\" id=\"post-form-number\" value=\"1\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-email\">Email input:</label>\n        <input type=\"email\" name=\"emailInput\" id=\"post-form-email\" value=\"example@example.com\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-textarea\">Textarea:</label>\n        <textarea name=\"textarea\" id=\"post-form-textarea\">This is some text</textarea>\n\n        <br />\n        <br />\n\n        <fieldset>\n          <label for=\"post-form-radio-1\">Radio input:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-1\" checked id=\"post-form-radio-1\" />\n\n          <label for=\"post-form-radio-2\">Radio input alt:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-2\" id=\"post-form-radio-2\" />\n        </fieldset>\n\n        <br />\n        <br />\n\n        <label for=\"post-form-checkbox\">Checkbox input:</label>\n        <input type=\"checkbox\" name=\"checkboxInput\" checked id=\"post-form-checkbox\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-select\">Select list:</label>\n        <select multiple name=\"select\" id=\"post-form-select\">\n          <option>\n            Option 1\n          </option>\n          <option>\n            Option 2\n          </option>\n        </select>\n\n        <br />\n        <br />\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  </body>\n</html>\n","date":"2023-06-15T18:42:17.930Z","updated":"2023-06-15T18:42:17.930Z","path":"lib/pjax/example/forms.html","title":"","comments":1,"layout":"page","_id":"clixi4662000737jxbbp85mtz","content":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Forms</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Forms</h1>\n      Hello. Try out the examples below and inspect the results in your browser's developer tools, or go to the <a href=\"index.html\" class=\"js-Pjax\">Index</a>.\n\n      <h3>GET form</h3>\n\n      <form action=\"\" method=\"get\" class=\"js-Pjax\" id=\"get-form\">\n        <label for=\"get-form-text\">Text input:</label>\n        <input type=\"text\" name=\"textInput\" id=\"get-form-text\" value=\"Foobar\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-number\">Number input:</label>\n        <input type=\"number\" name=\"numberInput\" id=\"get-form-number\" value=\"1\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-email\">Email input:</label>\n        <input type=\"email\" name=\"emailInput\" id=\"get-form-email\" value=\"example@example.com\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-textarea\">Textarea:</label>\n        <textarea name=\"textarea\" id=\"get-form-textarea\">This is some text</textarea>\n\n        <br />\n        <br />\n\n        <fieldset>\n          <label for=\"get-form-radio-1\">Radio input:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-1\" checked id=\"get-form-radio-1\" />\n\n          <label for=\"get-form-radio-2\">Radio input alt:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-2\" id=\"get-form-radio-2\" />\n        </fieldset>\n\n        <br />\n        <br />\n\n        <label for=\"get-form-checkbox\">Checkbox input:</label>\n        <input type=\"checkbox\" name=\"checkboxInput\" checked id=\"get-form-checkbox\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-select\">Select list:</label>\n        <select multiple name=\"select\" id=\"get-form-select\">\n          <option>\n            Option 1\n          </option>\n          <option>\n            Option 2\n          </option>\n        </select>\n\n        <br />\n        <br />\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n      <br />\n      <br />\n\n      <h3>POST form</h3>\n\n      <form action=\"\" method=\"post\" class=\"js-Pjax\" id=\"post-form\">\n        <label for=\"post-form-text\">Text input:</label>\n        <input type=\"text\" name=\"textInput\" id=\"post-form-text\" value=\"Foobar\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-number\">Number input:</label>\n        <input type=\"number\" name=\"numberInput\" id=\"post-form-number\" value=\"1\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-email\">Email input:</label>\n        <input type=\"email\" name=\"emailInput\" id=\"post-form-email\" value=\"example@example.com\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-textarea\">Textarea:</label>\n        <textarea name=\"textarea\" id=\"post-form-textarea\">This is some text</textarea>\n\n        <br />\n        <br />\n\n        <fieldset>\n          <label for=\"post-form-radio-1\">Radio input:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-1\" checked id=\"post-form-radio-1\" />\n\n          <label for=\"post-form-radio-2\">Radio input alt:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-2\" id=\"post-form-radio-2\" />\n        </fieldset>\n\n        <br />\n        <br />\n\n        <label for=\"post-form-checkbox\">Checkbox input:</label>\n        <input type=\"checkbox\" name=\"checkboxInput\" checked id=\"post-form-checkbox\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-select\">Select list:</label>\n        <select multiple name=\"select\" id=\"post-form-select\">\n          <option>\n            Option 1\n          </option>\n          <option>\n            Option 2\n          </option>\n        </select>\n\n        <br />\n        <br />\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  </body>\n</html>\n","site":{"data":{}},"length":358,"excerpt":"","more":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Forms</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Forms</h1>\n      Hello. Try out the examples below and inspect the results in your browser's developer tools, or go to the <a href=\"index.html\" class=\"js-Pjax\">Index</a>.\n\n      <h3>GET form</h3>\n\n      <form action=\"\" method=\"get\" class=\"js-Pjax\" id=\"get-form\">\n        <label for=\"get-form-text\">Text input:</label>\n        <input type=\"text\" name=\"textInput\" id=\"get-form-text\" value=\"Foobar\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-number\">Number input:</label>\n        <input type=\"number\" name=\"numberInput\" id=\"get-form-number\" value=\"1\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-email\">Email input:</label>\n        <input type=\"email\" name=\"emailInput\" id=\"get-form-email\" value=\"example@example.com\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-textarea\">Textarea:</label>\n        <textarea name=\"textarea\" id=\"get-form-textarea\">This is some text</textarea>\n\n        <br />\n        <br />\n\n        <fieldset>\n          <label for=\"get-form-radio-1\">Radio input:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-1\" checked id=\"get-form-radio-1\" />\n\n          <label for=\"get-form-radio-2\">Radio input alt:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-2\" id=\"get-form-radio-2\" />\n        </fieldset>\n\n        <br />\n        <br />\n\n        <label for=\"get-form-checkbox\">Checkbox input:</label>\n        <input type=\"checkbox\" name=\"checkboxInput\" checked id=\"get-form-checkbox\" />\n\n        <br />\n        <br />\n\n        <label for=\"get-form-select\">Select list:</label>\n        <select multiple name=\"select\" id=\"get-form-select\">\n          <option>\n            Option 1\n          </option>\n          <option>\n            Option 2\n          </option>\n        </select>\n\n        <br />\n        <br />\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n      <br />\n      <br />\n\n      <h3>POST form</h3>\n\n      <form action=\"\" method=\"post\" class=\"js-Pjax\" id=\"post-form\">\n        <label for=\"post-form-text\">Text input:</label>\n        <input type=\"text\" name=\"textInput\" id=\"post-form-text\" value=\"Foobar\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-number\">Number input:</label>\n        <input type=\"number\" name=\"numberInput\" id=\"post-form-number\" value=\"1\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-email\">Email input:</label>\n        <input type=\"email\" name=\"emailInput\" id=\"post-form-email\" value=\"example@example.com\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-textarea\">Textarea:</label>\n        <textarea name=\"textarea\" id=\"post-form-textarea\">This is some text</textarea>\n\n        <br />\n        <br />\n\n        <fieldset>\n          <label for=\"post-form-radio-1\">Radio input:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-1\" checked id=\"post-form-radio-1\" />\n\n          <label for=\"post-form-radio-2\">Radio input alt:</label>\n          <input type=\"radio\" name=\"radioInput\" value=\"radio-2\" id=\"post-form-radio-2\" />\n        </fieldset>\n\n        <br />\n        <br />\n\n        <label for=\"post-form-checkbox\">Checkbox input:</label>\n        <input type=\"checkbox\" name=\"checkboxInput\" checked id=\"post-form-checkbox\" />\n\n        <br />\n        <br />\n\n        <label for=\"post-form-select\">Select list:</label>\n        <select multiple name=\"select\" id=\"post-form-select\">\n          <option>\n            Option 1\n          </option>\n          <option>\n            Option 2\n          </option>\n        </select>\n\n        <br />\n        <br />\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  </body>\n</html>\n"},{"_content":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Page 2</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Page 2</h1>\n      Hello. Go to <a href=\"index.html\" class=\"js-Pjax\">Index</a>.\n    </div>\n  </body>\n</html>\n","source":"lib/pjax/example/page2.html","raw":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Page 2</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Page 2</h1>\n      Hello. Go to <a href=\"index.html\" class=\"js-Pjax\">Index</a>.\n    </div>\n  </body>\n</html>\n","date":"2023-06-15T18:42:17.930Z","updated":"2023-06-15T18:42:17.930Z","path":"lib/pjax/example/page2.html","title":"","comments":1,"layout":"page","_id":"clixi4663000837jx04shetc0","content":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Page 2</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Page 2</h1>\n      Hello. Go to <a href=\"index.html\" class=\"js-Pjax\">Index</a>.\n    </div>\n  </body>\n</html>\n","site":{"data":{}},"length":26,"excerpt":"","more":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Page 2</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Page 2</h1>\n      Hello. Go to <a href=\"index.html\" class=\"js-Pjax\">Index</a>.\n    </div>\n  </body>\n</html>\n"},{"_content":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Page 3</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Page 3</h1>\n      Hello. Go to <a href=\"index.html\" class=\"js-Pjax\">Index</a>.\n    </div>\n  </body>\n</html>\n","source":"lib/pjax/example/page3.html","raw":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Page 3</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Page 3</h1>\n      Hello. Go to <a href=\"index.html\" class=\"js-Pjax\">Index</a>.\n    </div>\n  </body>\n</html>\n","date":"2023-06-15T18:42:17.930Z","updated":"2023-06-15T18:42:17.930Z","path":"lib/pjax/example/page3.html","title":"","comments":1,"layout":"page","_id":"clixi4663000937jxgx9jar9x","content":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Page 3</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Page 3</h1>\n      Hello. Go to <a href=\"index.html\" class=\"js-Pjax\">Index</a>.\n    </div>\n  </body>\n</html>\n","site":{"data":{}},"length":26,"excerpt":"","more":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Page 3</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Page 3</h1>\n      Hello. Go to <a href=\"index.html\" class=\"js-Pjax\">Index</a>.\n    </div>\n  </body>\n</html>\n"},{"_content":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Hello</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Index</h1>\n      Hello.\n      Go to <a href=\"page2.html\" class=\"js-Pjax\">Page 2</a> or <a href=\"page3.html\" class=\"js-Pjax\">Page 3</a> and view your console to see Pjax events.\n      Clicking on <a href=\"index.html\">this page</a> will do nothing.\n\n      <h2>Manual URL loading</h2>\n\n      You can use Pjax's <i>loadUrl</i> method to manually load a URL. Click the buttons below to try it out!<br /><br />\n\n      <button data-manual-trigger>loadUrl with current options</button><br /><br />\n      <button data-manual-trigger data-manual-trigger-override=\"true\">loadUrl with overridden options (no cache busting)</button>\n\n      <h2>Forms</h2>\n\n      You can submit GET or POST forms with Pjax! Go to the <a href=\"forms.html\">form examples</a> to try it out.\n\n    </div>\n  </body>\n</html>\n","source":"lib/pjax/example/index.html","raw":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Hello</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Index</h1>\n      Hello.\n      Go to <a href=\"page2.html\" class=\"js-Pjax\">Page 2</a> or <a href=\"page3.html\" class=\"js-Pjax\">Page 3</a> and view your console to see Pjax events.\n      Clicking on <a href=\"index.html\">this page</a> will do nothing.\n\n      <h2>Manual URL loading</h2>\n\n      You can use Pjax's <i>loadUrl</i> method to manually load a URL. Click the buttons below to try it out!<br /><br />\n\n      <button data-manual-trigger>loadUrl with current options</button><br /><br />\n      <button data-manual-trigger data-manual-trigger-override=\"true\">loadUrl with overridden options (no cache busting)</button>\n\n      <h2>Forms</h2>\n\n      You can submit GET or POST forms with Pjax! Go to the <a href=\"forms.html\">form examples</a> to try it out.\n\n    </div>\n  </body>\n</html>\n","date":"2023-06-15T18:42:17.930Z","updated":"2023-06-15T18:42:17.930Z","path":"lib/pjax/example/index.html","title":"","comments":1,"layout":"page","_id":"clixi4664000a37jx2npx2an9","content":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Hello</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Index</h1>\n      Hello.\n      Go to <a href=\"page2.html\" class=\"js-Pjax\">Page 2</a> or <a href=\"page3.html\" class=\"js-Pjax\">Page 3</a> and view your console to see Pjax events.\n      Clicking on <a href=\"index.html\">this page</a> will do nothing.\n\n      <h2>Manual URL loading</h2>\n\n      You can use Pjax's <i>loadUrl</i> method to manually load a URL. Click the buttons below to try it out!<br /><br />\n\n      <button data-manual-trigger>loadUrl with current options</button><br /><br />\n      <button data-manual-trigger data-manual-trigger-override=\"true\">loadUrl with overridden options (no cache busting)</button>\n\n      <h2>Forms</h2>\n\n      You can submit GET or POST forms with Pjax! Go to the <a href=\"forms.html\">form examples</a> to try it out.\n\n    </div>\n  </body>\n</html>\n","site":{"data":{}},"length":331,"excerpt":"","more":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Hello</title>\n    <script src=\"../pjax.js\"></script>\n    <script src=\"example.js\"></script>\n  </head>\n  <body>\n    <div class=\"body\">\n      <h1>Index</h1>\n      Hello.\n      Go to <a href=\"page2.html\" class=\"js-Pjax\">Page 2</a> or <a href=\"page3.html\" class=\"js-Pjax\">Page 3</a> and view your console to see Pjax events.\n      Clicking on <a href=\"index.html\">this page</a> will do nothing.\n\n      <h2>Manual URL loading</h2>\n\n      You can use Pjax's <i>loadUrl</i> method to manually load a URL. Click the buttons below to try it out!<br /><br />\n\n      <button data-manual-trigger>loadUrl with current options</button><br /><br />\n      <button data-manual-trigger data-manual-trigger-override=\"true\">loadUrl with overridden options (no cache busting)</button>\n\n      <h2>Forms</h2>\n\n      You can submit GET or POST forms with Pjax! Go to the <a href=\"forms.html\">form examples</a> to try it out.\n\n    </div>\n  </body>\n</html>\n"},{"_content":"/* global Pjax */\nvar pjax;\nvar initButtons = function() {\n  var buttons = document.querySelectorAll(\"button[data-manual-trigger]\");\n\n  if (!buttons) {\n    return;\n  }\n\n  // jshint -W083\n  for (var i = 0; i < buttons.length; i++) {\n    buttons[i].addEventListener(\"click\", function(e) {\n      var el = e.currentTarget;\n\n      if (el.getAttribute(\"data-manual-trigger-override\") === \"true\") {\n        // Manually load URL with overridden Pjax instance options\n        pjax.loadUrl(\"/example/page2.html\", { cacheBust: false });\n      } else {\n        // Manually load URL with current Pjax instance options\n        pjax.loadUrl(\"/example/page2.html\");\n      }\n    });\n  }\n  // jshint +W083\n};\n\nconsole.log(\"Document initialized:\", window.location.href);\n\ndocument.addEventListener(\"pjax:send\", function() {\n  console.log(\"Event: pjax:send\", arguments);\n});\n\ndocument.addEventListener(\"pjax:complete\", function() {\n  console.log(\"Event: pjax:complete\", arguments);\n});\n\ndocument.addEventListener(\"pjax:error\", function() {\n  console.log(\"Event: pjax:error\", arguments);\n});\n\ndocument.addEventListener(\"pjax:success\", function() {\n  console.log(\"Event: pjax:success\", arguments);\n\n  // Init page content\n  initButtons();\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  // Init Pjax instance\n  pjax = new Pjax({\n    elements: [\".js-Pjax\"],\n    selectors: [\".body\", \"title\"],\n    cacheBust: true\n  });\n  console.log(\"Pjax initialized.\", pjax);\n\n  // Init page content\n  initButtons();\n});\n","source":"lib/pjax/example/example.js","raw":"/* global Pjax */\nvar pjax;\nvar initButtons = function() {\n  var buttons = document.querySelectorAll(\"button[data-manual-trigger]\");\n\n  if (!buttons) {\n    return;\n  }\n\n  // jshint -W083\n  for (var i = 0; i < buttons.length; i++) {\n    buttons[i].addEventListener(\"click\", function(e) {\n      var el = e.currentTarget;\n\n      if (el.getAttribute(\"data-manual-trigger-override\") === \"true\") {\n        // Manually load URL with overridden Pjax instance options\n        pjax.loadUrl(\"/example/page2.html\", { cacheBust: false });\n      } else {\n        // Manually load URL with current Pjax instance options\n        pjax.loadUrl(\"/example/page2.html\");\n      }\n    });\n  }\n  // jshint +W083\n};\n\nconsole.log(\"Document initialized:\", window.location.href);\n\ndocument.addEventListener(\"pjax:send\", function() {\n  console.log(\"Event: pjax:send\", arguments);\n});\n\ndocument.addEventListener(\"pjax:complete\", function() {\n  console.log(\"Event: pjax:complete\", arguments);\n});\n\ndocument.addEventListener(\"pjax:error\", function() {\n  console.log(\"Event: pjax:error\", arguments);\n});\n\ndocument.addEventListener(\"pjax:success\", function() {\n  console.log(\"Event: pjax:success\", arguments);\n\n  // Init page content\n  initButtons();\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  // Init Pjax instance\n  pjax = new Pjax({\n    elements: [\".js-Pjax\"],\n    selectors: [\".body\", \"title\"],\n    cacheBust: true\n  });\n  console.log(\"Pjax initialized.\", pjax);\n\n  // Init page content\n  initButtons();\n});\n","date":"2023-06-15T18:42:17.930Z","updated":"2023-06-15T18:42:17.930Z","path":"lib/pjax/example/example.js","layout":"false","title":"","comments":1,"_id":"clixi4665000b37jxcms08igw","content":"/* global Pjax */\nvar pjax;\nvar initButtons = function() {\n  var buttons = document.querySelectorAll(\"button[data-manual-trigger]\");\n\n  if (!buttons) {\n    return;\n  }\n\n  // jshint -W083\n  for (var i = 0; i < buttons.length; i++) {\n    buttons[i].addEventListener(\"click\", function(e) {\n      var el = e.currentTarget;\n\n      if (el.getAttribute(\"data-manual-trigger-override\") === \"true\") {\n        // Manually load URL with overridden Pjax instance options\n        pjax.loadUrl(\"/example/page2.html\", { cacheBust: false });\n      } else {\n        // Manually load URL with current Pjax instance options\n        pjax.loadUrl(\"/example/page2.html\");\n      }\n    });\n  }\n  // jshint +W083\n};\n\nconsole.log(\"Document initialized:\", window.location.href);\n\ndocument.addEventListener(\"pjax:send\", function() {\n  console.log(\"Event: pjax:send\", arguments);\n});\n\ndocument.addEventListener(\"pjax:complete\", function() {\n  console.log(\"Event: pjax:complete\", arguments);\n});\n\ndocument.addEventListener(\"pjax:error\", function() {\n  console.log(\"Event: pjax:error\", arguments);\n});\n\ndocument.addEventListener(\"pjax:success\", function() {\n  console.log(\"Event: pjax:success\", arguments);\n\n  // Init page content\n  initButtons();\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  // Init Pjax instance\n  pjax = new Pjax({\n    elements: [\".js-Pjax\"],\n    selectors: [\".body\", \"title\"],\n    cacheBust: true\n  });\n  console.log(\"Pjax initialized.\", pjax);\n\n  // Init page content\n  initButtons();\n});\n","site":{"data":{}},"length":1229,"excerpt":"","more":"/* global Pjax */\nvar pjax;\nvar initButtons = function() {\n  var buttons = document.querySelectorAll(\"button[data-manual-trigger]\");\n\n  if (!buttons) {\n    return;\n  }\n\n  // jshint -W083\n  for (var i = 0; i < buttons.length; i++) {\n    buttons[i].addEventListener(\"click\", function(e) {\n      var el = e.currentTarget;\n\n      if (el.getAttribute(\"data-manual-trigger-override\") === \"true\") {\n        // Manually load URL with overridden Pjax instance options\n        pjax.loadUrl(\"/example/page2.html\", { cacheBust: false });\n      } else {\n        // Manually load URL with current Pjax instance options\n        pjax.loadUrl(\"/example/page2.html\");\n      }\n    });\n  }\n  // jshint +W083\n};\n\nconsole.log(\"Document initialized:\", window.location.href);\n\ndocument.addEventListener(\"pjax:send\", function() {\n  console.log(\"Event: pjax:send\", arguments);\n});\n\ndocument.addEventListener(\"pjax:complete\", function() {\n  console.log(\"Event: pjax:complete\", arguments);\n});\n\ndocument.addEventListener(\"pjax:error\", function() {\n  console.log(\"Event: pjax:error\", arguments);\n});\n\ndocument.addEventListener(\"pjax:success\", function() {\n  console.log(\"Event: pjax:success\", arguments);\n\n  // Init page content\n  initButtons();\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  // Init Pjax instance\n  pjax = new Pjax({\n    elements: [\".js-Pjax\"],\n    selectors: [\".body\", \"title\"],\n    cacheBust: true\n  });\n  console.log(\"Pjax initialized.\", pjax);\n\n  // Init page content\n  initButtons();\n});\n"},{"_content":"var noop = require(\"./util/noop\");\n\nmodule.exports = function(request) {\n  if (request && request.readyState < 4) {\n    request.onreadystatechange = noop;\n    request.abort();\n  }\n};\n","source":"lib/pjax/lib/abort-request.js","raw":"var noop = require(\"./util/noop\");\n\nmodule.exports = function(request) {\n  if (request && request.readyState < 4) {\n    request.onreadystatechange = noop;\n    request.abort();\n  }\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/abort-request.js","layout":"false","title":"","comments":1,"_id":"clixi4666000c37jx98p0083e","content":"var noop = require(\"./util/noop\");\n\nmodule.exports = function(request) {\n  if (request && request.readyState < 4) {\n    request.onreadystatechange = noop;\n    request.abort();\n  }\n};\n","site":{"data":{}},"length":149,"excerpt":"","more":"var noop = require(\"./util/noop\");\n\nmodule.exports = function(request) {\n  if (request && request.readyState < 4) {\n    request.onreadystatechange = noop;\n    request.abort();\n  }\n};\n"},{"_content":"module.exports = function(el) {\n  var code = el.text || el.textContent || el.innerHTML || \"\";\n  var src = el.src || \"\";\n  var parent =\n    el.parentNode || document.querySelector(\"head\") || document.documentElement;\n  var script = document.createElement(\"script\");\n\n  if (code.match(\"document.write\")) {\n    if (console && console.log) {\n      console.log(\n        \"Script contains document.write. Can’t be executed correctly. Code skipped \",\n        el\n      );\n    }\n    return false;\n  }\n\n  script.type = \"text/javascript\";\n  script.id = el.id;\n\n  /* istanbul ignore if */\n  if (src !== \"\") {\n    script.src = src;\n    script.async = false; // force synchronous loading of peripheral JS\n  }\n\n  if (code !== \"\") {\n    try {\n      script.appendChild(document.createTextNode(code));\n    } catch (e) {\n      /* istanbul ignore next */\n      // old IEs have funky script nodes\n      script.text = code;\n    }\n  }\n\n  // execute\n  parent.appendChild(script);\n  // avoid pollution only in head or body tags\n  if (\n    (parent instanceof HTMLHeadElement || parent instanceof HTMLBodyElement) &&\n    parent.contains(script)\n  ) {\n    parent.removeChild(script);\n  }\n\n  return true;\n};\n","source":"lib/pjax/lib/eval-script.js","raw":"module.exports = function(el) {\n  var code = el.text || el.textContent || el.innerHTML || \"\";\n  var src = el.src || \"\";\n  var parent =\n    el.parentNode || document.querySelector(\"head\") || document.documentElement;\n  var script = document.createElement(\"script\");\n\n  if (code.match(\"document.write\")) {\n    if (console && console.log) {\n      console.log(\n        \"Script contains document.write. Can’t be executed correctly. Code skipped \",\n        el\n      );\n    }\n    return false;\n  }\n\n  script.type = \"text/javascript\";\n  script.id = el.id;\n\n  /* istanbul ignore if */\n  if (src !== \"\") {\n    script.src = src;\n    script.async = false; // force synchronous loading of peripheral JS\n  }\n\n  if (code !== \"\") {\n    try {\n      script.appendChild(document.createTextNode(code));\n    } catch (e) {\n      /* istanbul ignore next */\n      // old IEs have funky script nodes\n      script.text = code;\n    }\n  }\n\n  // execute\n  parent.appendChild(script);\n  // avoid pollution only in head or body tags\n  if (\n    (parent instanceof HTMLHeadElement || parent instanceof HTMLBodyElement) &&\n    parent.contains(script)\n  ) {\n    parent.removeChild(script);\n  }\n\n  return true;\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/eval-script.js","layout":"false","title":"","comments":1,"_id":"clixi466c000d37jxg6iuefqu","content":"module.exports = function(el) {\n  var code = el.text || el.textContent || el.innerHTML || \"\";\n  var src = el.src || \"\";\n  var parent =\n    el.parentNode || document.querySelector(\"head\") || document.documentElement;\n  var script = document.createElement(\"script\");\n\n  if (code.match(\"document.write\")) {\n    if (console && console.log) {\n      console.log(\n        \"Script contains document.write. Can’t be executed correctly. Code skipped \",\n        el\n      );\n    }\n    return false;\n  }\n\n  script.type = \"text/javascript\";\n  script.id = el.id;\n\n  /* istanbul ignore if */\n  if (src !== \"\") {\n    script.src = src;\n    script.async = false; // force synchronous loading of peripheral JS\n  }\n\n  if (code !== \"\") {\n    try {\n      script.appendChild(document.createTextNode(code));\n    } catch (e) {\n      /* istanbul ignore next */\n      // old IEs have funky script nodes\n      script.text = code;\n    }\n  }\n\n  // execute\n  parent.appendChild(script);\n  // avoid pollution only in head or body tags\n  if (\n    (parent instanceof HTMLHeadElement || parent instanceof HTMLBodyElement) &&\n    parent.contains(script)\n  ) {\n    parent.removeChild(script);\n  }\n\n  return true;\n};\n","site":{"data":{}},"length":886,"excerpt":"","more":"module.exports = function(el) {\n  var code = el.text || el.textContent || el.innerHTML || \"\";\n  var src = el.src || \"\";\n  var parent =\n    el.parentNode || document.querySelector(\"head\") || document.documentElement;\n  var script = document.createElement(\"script\");\n\n  if (code.match(\"document.write\")) {\n    if (console && console.log) {\n      console.log(\n        \"Script contains document.write. Can’t be executed correctly. Code skipped \",\n        el\n      );\n    }\n    return false;\n  }\n\n  script.type = \"text/javascript\";\n  script.id = el.id;\n\n  /* istanbul ignore if */\n  if (src !== \"\") {\n    script.src = src;\n    script.async = false; // force synchronous loading of peripheral JS\n  }\n\n  if (code !== \"\") {\n    try {\n      script.appendChild(document.createTextNode(code));\n    } catch (e) {\n      /* istanbul ignore next */\n      // old IEs have funky script nodes\n      script.text = code;\n    }\n  }\n\n  // execute\n  parent.appendChild(script);\n  // avoid pollution only in head or body tags\n  if (\n    (parent instanceof HTMLHeadElement || parent instanceof HTMLBodyElement) &&\n    parent.contains(script)\n  ) {\n    parent.removeChild(script);\n  }\n\n  return true;\n};\n"},{"_content":"var forEachEls = require(\"./foreach-els\");\nvar evalScript = require(\"./eval-script\");\n// Finds and executes scripts (used for newly added elements)\n// Needed since innerHTML does not run scripts\nmodule.exports = function(el) {\n  if (el.tagName.toLowerCase() === \"script\") {\n    evalScript(el);\n  }\n\n  forEachEls(el.querySelectorAll(\"script\"), function(script) {\n    if (!script.type || script.type.toLowerCase() === \"text/javascript\") {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n      evalScript(script);\n    }\n  });\n};\n","source":"lib/pjax/lib/execute-scripts.js","raw":"var forEachEls = require(\"./foreach-els\");\nvar evalScript = require(\"./eval-script\");\n// Finds and executes scripts (used for newly added elements)\n// Needed since innerHTML does not run scripts\nmodule.exports = function(el) {\n  if (el.tagName.toLowerCase() === \"script\") {\n    evalScript(el);\n  }\n\n  forEachEls(el.querySelectorAll(\"script\"), function(script) {\n    if (!script.type || script.type.toLowerCase() === \"text/javascript\") {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n      evalScript(script);\n    }\n  });\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/execute-scripts.js","layout":"false","title":"","comments":1,"_id":"clixi466d000e37jx125oasje","content":"var forEachEls = require(\"./foreach-els\");\nvar evalScript = require(\"./eval-script\");\n// Finds and executes scripts (used for newly added elements)\n// Needed since innerHTML does not run scripts\nmodule.exports = function(el) {\n  if (el.tagName.toLowerCase() === \"script\") {\n    evalScript(el);\n  }\n\n  forEachEls(el.querySelectorAll(\"script\"), function(script) {\n    if (!script.type || script.type.toLowerCase() === \"text/javascript\") {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n      evalScript(script);\n    }\n  });\n};\n","site":{"data":{}},"length":461,"excerpt":"","more":"var forEachEls = require(\"./foreach-els\");\nvar evalScript = require(\"./eval-script\");\n// Finds and executes scripts (used for newly added elements)\n// Needed since innerHTML does not run scripts\nmodule.exports = function(el) {\n  if (el.tagName.toLowerCase() === \"script\") {\n    evalScript(el);\n  }\n\n  forEachEls(el.querySelectorAll(\"script\"), function(script) {\n    if (!script.type || script.type.toLowerCase() === \"text/javascript\") {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n      evalScript(script);\n    }\n  });\n};\n"},{"_content":"/* global HTMLCollection: true */\n\nmodule.exports = function(els, fn, context) {\n  if (\n    els instanceof HTMLCollection ||\n    els instanceof NodeList ||\n    els instanceof Array\n  ) {\n    return Array.prototype.forEach.call(els, fn, context);\n  }\n  // assume simple DOM element\n  return fn.call(context, els);\n};\n","source":"lib/pjax/lib/foreach-els.js","raw":"/* global HTMLCollection: true */\n\nmodule.exports = function(els, fn, context) {\n  if (\n    els instanceof HTMLCollection ||\n    els instanceof NodeList ||\n    els instanceof Array\n  ) {\n    return Array.prototype.forEach.call(els, fn, context);\n  }\n  // assume simple DOM element\n  return fn.call(context, els);\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/foreach-els.js","layout":"false","title":"","comments":1,"_id":"clixi466e000f37jx4rqu73ka","content":"/* global HTMLCollection: true */\n\nmodule.exports = function(els, fn, context) {\n  if (\n    els instanceof HTMLCollection ||\n    els instanceof NodeList ||\n    els instanceof Array\n  ) {\n    return Array.prototype.forEach.call(els, fn, context);\n  }\n  // assume simple DOM element\n  return fn.call(context, els);\n};\n","site":{"data":{}},"length":249,"excerpt":"","more":"/* global HTMLCollection: true */\n\nmodule.exports = function(els, fn, context) {\n  if (\n    els instanceof HTMLCollection ||\n    els instanceof NodeList ||\n    els instanceof Array\n  ) {\n    return Array.prototype.forEach.call(els, fn, context);\n  }\n  // assume simple DOM element\n  return fn.call(context, els);\n};\n"},{"_content":"var forEachEls = require(\"./foreach-els\");\n\nmodule.exports = function(selectors, cb, context, DOMcontext) {\n  DOMcontext = DOMcontext || document;\n  selectors.forEach(function(selector) {\n    forEachEls(DOMcontext.querySelectorAll(selector), cb, context);\n  });\n};\n","source":"lib/pjax/lib/foreach-selectors.js","raw":"var forEachEls = require(\"./foreach-els\");\n\nmodule.exports = function(selectors, cb, context, DOMcontext) {\n  DOMcontext = DOMcontext || document;\n  selectors.forEach(function(selector) {\n    forEachEls(DOMcontext.querySelectorAll(selector), cb, context);\n  });\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/foreach-selectors.js","layout":"false","title":"","comments":1,"_id":"clixi466g000g37jx6l4tawfb","content":"var forEachEls = require(\"./foreach-els\");\n\nmodule.exports = function(selectors, cb, context, DOMcontext) {\n  DOMcontext = DOMcontext || document;\n  selectors.forEach(function(selector) {\n    forEachEls(DOMcontext.querySelectorAll(selector), cb, context);\n  });\n};\n","site":{"data":{}},"length":231,"excerpt":"","more":"var forEachEls = require(\"./foreach-els\");\n\nmodule.exports = function(selectors, cb, context, DOMcontext) {\n  DOMcontext = DOMcontext || document;\n  selectors.forEach(function(selector) {\n    forEachEls(DOMcontext.querySelectorAll(selector), cb, context);\n  });\n};\n"},{"_content":"module.exports = function() {\n  // Borrowed wholesale from https://github.com/defunkt/jquery-pjax\n  return (\n    window.history &&\n    window.history.pushState &&\n    window.history.replaceState &&\n    // pushState isn’t reliable on iOS until 5.\n    !navigator.userAgent.match(\n      /((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/\n    )\n  );\n};\n","source":"lib/pjax/lib/is-supported.js","raw":"module.exports = function() {\n  // Borrowed wholesale from https://github.com/defunkt/jquery-pjax\n  return (\n    window.history &&\n    window.history.pushState &&\n    window.history.replaceState &&\n    // pushState isn’t reliable on iOS until 5.\n    !navigator.userAgent.match(\n      /((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/\n    )\n  );\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/is-supported.js","layout":"false","title":"","comments":1,"_id":"clixi466h000h37jxb6vu8xgi","content":"module.exports = function() {\n  // Borrowed wholesale from https://github.com/defunkt/jquery-pjax\n  return (\n    window.history &&\n    window.history.pushState &&\n    window.history.replaceState &&\n    // pushState isn’t reliable on iOS until 5.\n    !navigator.userAgent.match(\n      /((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/\n    )\n  );\n};\n","site":{"data":{}},"length":292,"excerpt":"","more":"module.exports = function() {\n  // Borrowed wholesale from https://github.com/defunkt/jquery-pjax\n  return (\n    window.history &&\n    window.history.pushState &&\n    window.history.replaceState &&\n    // pushState isn’t reliable on iOS until 5.\n    !navigator.userAgent.match(\n      /((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/\n    )\n  );\n};\n"},{"_content":"/* global _gaq: true, ga: true */\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(options) {\n  options = options || {};\n  options.elements = options.elements || \"a[href], form[action]\";\n  options.selectors = options.selectors || [\"title\", \".js-Pjax\"];\n  options.switches = options.switches || {};\n  options.switchesOptions = options.switchesOptions || {};\n  options.history =\n    typeof options.history === \"undefined\" ? true : options.history;\n  options.analytics =\n    typeof options.analytics === \"function\" || options.analytics === false\n      ? options.analytics\n      : defaultAnalytics;\n  options.scrollTo =\n    typeof options.scrollTo === \"undefined\" ? 0 : options.scrollTo;\n  options.scrollRestoration =\n    typeof options.scrollRestoration !== \"undefined\"\n      ? options.scrollRestoration\n      : true;\n  options.cacheBust =\n    typeof options.cacheBust === \"undefined\" ? true : options.cacheBust;\n  options.debug = options.debug || false;\n  options.timeout = options.timeout || 0;\n  options.currentUrlFullReload =\n    typeof options.currentUrlFullReload === \"undefined\"\n      ? false\n      : options.currentUrlFullReload;\n\n  // We can’t replace body.outerHTML or head.outerHTML.\n  // It creates a bug where a new body or head are created in the DOM.\n  // If you set head.outerHTML, a new body tag is appended, so the DOM has 2 body nodes, and vice versa\n  if (!options.switches.head) {\n    options.switches.head = defaultSwitches.switchElementsAlt;\n  }\n  if (!options.switches.body) {\n    options.switches.body = defaultSwitches.switchElementsAlt;\n  }\n\n  return options;\n};\n\n/* istanbul ignore next */\nfunction defaultAnalytics() {\n  if (window._gaq) {\n    _gaq.push([\"_trackPageview\"]);\n  }\n  if (window.ga) {\n    ga(\"send\", \"pageview\", { page: location.pathname, title: document.title });\n  }\n}\n","source":"lib/pjax/lib/parse-options.js","raw":"/* global _gaq: true, ga: true */\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(options) {\n  options = options || {};\n  options.elements = options.elements || \"a[href], form[action]\";\n  options.selectors = options.selectors || [\"title\", \".js-Pjax\"];\n  options.switches = options.switches || {};\n  options.switchesOptions = options.switchesOptions || {};\n  options.history =\n    typeof options.history === \"undefined\" ? true : options.history;\n  options.analytics =\n    typeof options.analytics === \"function\" || options.analytics === false\n      ? options.analytics\n      : defaultAnalytics;\n  options.scrollTo =\n    typeof options.scrollTo === \"undefined\" ? 0 : options.scrollTo;\n  options.scrollRestoration =\n    typeof options.scrollRestoration !== \"undefined\"\n      ? options.scrollRestoration\n      : true;\n  options.cacheBust =\n    typeof options.cacheBust === \"undefined\" ? true : options.cacheBust;\n  options.debug = options.debug || false;\n  options.timeout = options.timeout || 0;\n  options.currentUrlFullReload =\n    typeof options.currentUrlFullReload === \"undefined\"\n      ? false\n      : options.currentUrlFullReload;\n\n  // We can’t replace body.outerHTML or head.outerHTML.\n  // It creates a bug where a new body or head are created in the DOM.\n  // If you set head.outerHTML, a new body tag is appended, so the DOM has 2 body nodes, and vice versa\n  if (!options.switches.head) {\n    options.switches.head = defaultSwitches.switchElementsAlt;\n  }\n  if (!options.switches.body) {\n    options.switches.body = defaultSwitches.switchElementsAlt;\n  }\n\n  return options;\n};\n\n/* istanbul ignore next */\nfunction defaultAnalytics() {\n  if (window._gaq) {\n    _gaq.push([\"_trackPageview\"]);\n  }\n  if (window.ga) {\n    ga(\"send\", \"pageview\", { page: location.pathname, title: document.title });\n  }\n}\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/parse-options.js","layout":"false","title":"","comments":1,"_id":"clixi466i000i37jx6f25htma","content":"/* global _gaq: true, ga: true */\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(options) {\n  options = options || {};\n  options.elements = options.elements || \"a[href], form[action]\";\n  options.selectors = options.selectors || [\"title\", \".js-Pjax\"];\n  options.switches = options.switches || {};\n  options.switchesOptions = options.switchesOptions || {};\n  options.history =\n    typeof options.history === \"undefined\" ? true : options.history;\n  options.analytics =\n    typeof options.analytics === \"function\" || options.analytics === false\n      ? options.analytics\n      : defaultAnalytics;\n  options.scrollTo =\n    typeof options.scrollTo === \"undefined\" ? 0 : options.scrollTo;\n  options.scrollRestoration =\n    typeof options.scrollRestoration !== \"undefined\"\n      ? options.scrollRestoration\n      : true;\n  options.cacheBust =\n    typeof options.cacheBust === \"undefined\" ? true : options.cacheBust;\n  options.debug = options.debug || false;\n  options.timeout = options.timeout || 0;\n  options.currentUrlFullReload =\n    typeof options.currentUrlFullReload === \"undefined\"\n      ? false\n      : options.currentUrlFullReload;\n\n  // We can’t replace body.outerHTML or head.outerHTML.\n  // It creates a bug where a new body or head are created in the DOM.\n  // If you set head.outerHTML, a new body tag is appended, so the DOM has 2 body nodes, and vice versa\n  if (!options.switches.head) {\n    options.switches.head = defaultSwitches.switchElementsAlt;\n  }\n  if (!options.switches.body) {\n    options.switches.body = defaultSwitches.switchElementsAlt;\n  }\n\n  return options;\n};\n\n/* istanbul ignore next */\nfunction defaultAnalytics() {\n  if (window._gaq) {\n    _gaq.push([\"_trackPageview\"]);\n  }\n  if (window.ga) {\n    ga(\"send\", \"pageview\", { page: location.pathname, title: document.title });\n  }\n}\n","site":{"data":{}},"length":1500,"excerpt":"","more":"/* global _gaq: true, ga: true */\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(options) {\n  options = options || {};\n  options.elements = options.elements || \"a[href], form[action]\";\n  options.selectors = options.selectors || [\"title\", \".js-Pjax\"];\n  options.switches = options.switches || {};\n  options.switchesOptions = options.switchesOptions || {};\n  options.history =\n    typeof options.history === \"undefined\" ? true : options.history;\n  options.analytics =\n    typeof options.analytics === \"function\" || options.analytics === false\n      ? options.analytics\n      : defaultAnalytics;\n  options.scrollTo =\n    typeof options.scrollTo === \"undefined\" ? 0 : options.scrollTo;\n  options.scrollRestoration =\n    typeof options.scrollRestoration !== \"undefined\"\n      ? options.scrollRestoration\n      : true;\n  options.cacheBust =\n    typeof options.cacheBust === \"undefined\" ? true : options.cacheBust;\n  options.debug = options.debug || false;\n  options.timeout = options.timeout || 0;\n  options.currentUrlFullReload =\n    typeof options.currentUrlFullReload === \"undefined\"\n      ? false\n      : options.currentUrlFullReload;\n\n  // We can’t replace body.outerHTML or head.outerHTML.\n  // It creates a bug where a new body or head are created in the DOM.\n  // If you set head.outerHTML, a new body tag is appended, so the DOM has 2 body nodes, and vice versa\n  if (!options.switches.head) {\n    options.switches.head = defaultSwitches.switchElementsAlt;\n  }\n  if (!options.switches.body) {\n    options.switches.body = defaultSwitches.switchElementsAlt;\n  }\n\n  return options;\n};\n\n/* istanbul ignore next */\nfunction defaultAnalytics() {\n  if (window._gaq) {\n    _gaq.push([\"_trackPageview\"]);\n  }\n  if (window.ga) {\n    ga(\"send\", \"pageview\", { page: location.pathname, title: document.title });\n  }\n}\n"},{"_content":"var updateQueryString = require(\"./util/update-query-string\");\n\nmodule.exports = function(location, options, callback) {\n  options = options || {};\n  var queryString;\n  var requestOptions = options.requestOptions || {};\n  var requestMethod = (requestOptions.requestMethod || \"GET\").toUpperCase();\n  var requestParams = requestOptions.requestParams || null;\n  var formData = requestOptions.formData || null;\n  var requestPayload = null;\n  var request = new XMLHttpRequest();\n  var timeout = options.timeout || 0;\n\n  request.onreadystatechange = function() {\n    if (request.readyState === 4) {\n      if (request.status === 200) {\n        callback(request.responseText, request, location, options);\n      } else if (request.status !== 0) {\n        callback(null, request, location, options);\n      }\n    }\n  };\n\n  request.onerror = function(e) {\n    console.log(e);\n    callback(null, request, location, options);\n  };\n\n  request.ontimeout = function() {\n    callback(null, request, location, options);\n  };\n\n  // Prepare the request payload for forms, if available\n  if (requestParams && requestParams.length) {\n    // Build query string\n    queryString = requestParams\n      .map(function(param) {\n        return param.name + \"=\" + param.value;\n      })\n      .join(\"&\");\n\n    switch (requestMethod) {\n      case \"GET\":\n        // Reset query string to avoid an issue with repeat submissions where checkboxes that were\n        // previously checked are incorrectly preserved\n        location = location.split(\"?\")[0];\n\n        // Append new query string\n        location += \"?\" + queryString;\n        break;\n\n      case \"POST\":\n        // Send query string as request payload\n        requestPayload = queryString;\n        break;\n    }\n  } else if (formData) {\n    requestPayload = formData;\n  }\n\n  // Add a timestamp as part of the query string if cache busting is enabled\n  if (options.cacheBust) {\n    location = updateQueryString(location, \"t\", Date.now());\n  }\n\n  request.open(requestMethod, location, true);\n  request.timeout = timeout;\n  request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n  request.setRequestHeader(\"X-PJAX\", \"true\");\n  request.setRequestHeader(\n    \"X-PJAX-Selectors\",\n    JSON.stringify(options.selectors)\n  );\n\n  // Send the proper header information for POST forms\n  if (requestPayload && requestMethod === \"POST\" && !formData) {\n    request.setRequestHeader(\n      \"Content-Type\",\n      \"application/x-www-form-urlencoded\"\n    );\n  }\n\n  request.send(requestPayload);\n\n  return request;\n};\n","source":"lib/pjax/lib/send-request.js","raw":"var updateQueryString = require(\"./util/update-query-string\");\n\nmodule.exports = function(location, options, callback) {\n  options = options || {};\n  var queryString;\n  var requestOptions = options.requestOptions || {};\n  var requestMethod = (requestOptions.requestMethod || \"GET\").toUpperCase();\n  var requestParams = requestOptions.requestParams || null;\n  var formData = requestOptions.formData || null;\n  var requestPayload = null;\n  var request = new XMLHttpRequest();\n  var timeout = options.timeout || 0;\n\n  request.onreadystatechange = function() {\n    if (request.readyState === 4) {\n      if (request.status === 200) {\n        callback(request.responseText, request, location, options);\n      } else if (request.status !== 0) {\n        callback(null, request, location, options);\n      }\n    }\n  };\n\n  request.onerror = function(e) {\n    console.log(e);\n    callback(null, request, location, options);\n  };\n\n  request.ontimeout = function() {\n    callback(null, request, location, options);\n  };\n\n  // Prepare the request payload for forms, if available\n  if (requestParams && requestParams.length) {\n    // Build query string\n    queryString = requestParams\n      .map(function(param) {\n        return param.name + \"=\" + param.value;\n      })\n      .join(\"&\");\n\n    switch (requestMethod) {\n      case \"GET\":\n        // Reset query string to avoid an issue with repeat submissions where checkboxes that were\n        // previously checked are incorrectly preserved\n        location = location.split(\"?\")[0];\n\n        // Append new query string\n        location += \"?\" + queryString;\n        break;\n\n      case \"POST\":\n        // Send query string as request payload\n        requestPayload = queryString;\n        break;\n    }\n  } else if (formData) {\n    requestPayload = formData;\n  }\n\n  // Add a timestamp as part of the query string if cache busting is enabled\n  if (options.cacheBust) {\n    location = updateQueryString(location, \"t\", Date.now());\n  }\n\n  request.open(requestMethod, location, true);\n  request.timeout = timeout;\n  request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n  request.setRequestHeader(\"X-PJAX\", \"true\");\n  request.setRequestHeader(\n    \"X-PJAX-Selectors\",\n    JSON.stringify(options.selectors)\n  );\n\n  // Send the proper header information for POST forms\n  if (requestPayload && requestMethod === \"POST\" && !formData) {\n    request.setRequestHeader(\n      \"Content-Type\",\n      \"application/x-www-form-urlencoded\"\n    );\n  }\n\n  request.send(requestPayload);\n\n  return request;\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/send-request.js","layout":"false","title":"","comments":1,"_id":"clixi466i000j37jxbtkf0dfb","content":"var updateQueryString = require(\"./util/update-query-string\");\n\nmodule.exports = function(location, options, callback) {\n  options = options || {};\n  var queryString;\n  var requestOptions = options.requestOptions || {};\n  var requestMethod = (requestOptions.requestMethod || \"GET\").toUpperCase();\n  var requestParams = requestOptions.requestParams || null;\n  var formData = requestOptions.formData || null;\n  var requestPayload = null;\n  var request = new XMLHttpRequest();\n  var timeout = options.timeout || 0;\n\n  request.onreadystatechange = function() {\n    if (request.readyState === 4) {\n      if (request.status === 200) {\n        callback(request.responseText, request, location, options);\n      } else if (request.status !== 0) {\n        callback(null, request, location, options);\n      }\n    }\n  };\n\n  request.onerror = function(e) {\n    console.log(e);\n    callback(null, request, location, options);\n  };\n\n  request.ontimeout = function() {\n    callback(null, request, location, options);\n  };\n\n  // Prepare the request payload for forms, if available\n  if (requestParams && requestParams.length) {\n    // Build query string\n    queryString = requestParams\n      .map(function(param) {\n        return param.name + \"=\" + param.value;\n      })\n      .join(\"&\");\n\n    switch (requestMethod) {\n      case \"GET\":\n        // Reset query string to avoid an issue with repeat submissions where checkboxes that were\n        // previously checked are incorrectly preserved\n        location = location.split(\"?\")[0];\n\n        // Append new query string\n        location += \"?\" + queryString;\n        break;\n\n      case \"POST\":\n        // Send query string as request payload\n        requestPayload = queryString;\n        break;\n    }\n  } else if (formData) {\n    requestPayload = formData;\n  }\n\n  // Add a timestamp as part of the query string if cache busting is enabled\n  if (options.cacheBust) {\n    location = updateQueryString(location, \"t\", Date.now());\n  }\n\n  request.open(requestMethod, location, true);\n  request.timeout = timeout;\n  request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n  request.setRequestHeader(\"X-PJAX\", \"true\");\n  request.setRequestHeader(\n    \"X-PJAX-Selectors\",\n    JSON.stringify(options.selectors)\n  );\n\n  // Send the proper header information for POST forms\n  if (requestPayload && requestMethod === \"POST\" && !formData) {\n    request.setRequestHeader(\n      \"Content-Type\",\n      \"application/x-www-form-urlencoded\"\n    );\n  }\n\n  request.send(requestPayload);\n\n  return request;\n};\n","site":{"data":{}},"length":1969,"excerpt":"","more":"var updateQueryString = require(\"./util/update-query-string\");\n\nmodule.exports = function(location, options, callback) {\n  options = options || {};\n  var queryString;\n  var requestOptions = options.requestOptions || {};\n  var requestMethod = (requestOptions.requestMethod || \"GET\").toUpperCase();\n  var requestParams = requestOptions.requestParams || null;\n  var formData = requestOptions.formData || null;\n  var requestPayload = null;\n  var request = new XMLHttpRequest();\n  var timeout = options.timeout || 0;\n\n  request.onreadystatechange = function() {\n    if (request.readyState === 4) {\n      if (request.status === 200) {\n        callback(request.responseText, request, location, options);\n      } else if (request.status !== 0) {\n        callback(null, request, location, options);\n      }\n    }\n  };\n\n  request.onerror = function(e) {\n    console.log(e);\n    callback(null, request, location, options);\n  };\n\n  request.ontimeout = function() {\n    callback(null, request, location, options);\n  };\n\n  // Prepare the request payload for forms, if available\n  if (requestParams && requestParams.length) {\n    // Build query string\n    queryString = requestParams\n      .map(function(param) {\n        return param.name + \"=\" + param.value;\n      })\n      .join(\"&\");\n\n    switch (requestMethod) {\n      case \"GET\":\n        // Reset query string to avoid an issue with repeat submissions where checkboxes that were\n        // previously checked are incorrectly preserved\n        location = location.split(\"?\")[0];\n\n        // Append new query string\n        location += \"?\" + queryString;\n        break;\n\n      case \"POST\":\n        // Send query string as request payload\n        requestPayload = queryString;\n        break;\n    }\n  } else if (formData) {\n    requestPayload = formData;\n  }\n\n  // Add a timestamp as part of the query string if cache busting is enabled\n  if (options.cacheBust) {\n    location = updateQueryString(location, \"t\", Date.now());\n  }\n\n  request.open(requestMethod, location, true);\n  request.timeout = timeout;\n  request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n  request.setRequestHeader(\"X-PJAX\", \"true\");\n  request.setRequestHeader(\n    \"X-PJAX-Selectors\",\n    JSON.stringify(options.selectors)\n  );\n\n  // Send the proper header information for POST forms\n  if (requestPayload && requestMethod === \"POST\" && !formData) {\n    request.setRequestHeader(\n      \"Content-Type\",\n      \"application/x-www-form-urlencoded\"\n    );\n  }\n\n  request.send(requestPayload);\n\n  return request;\n};\n"},{"_content":"var forEachEls = require(\"./foreach-els\");\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(\n  switches,\n  switchesOptions,\n  selectors,\n  fromEl,\n  toEl,\n  options\n) {\n  var switchesQueue = [];\n\n  selectors.forEach(function(selector) {\n    var newEls = fromEl.querySelectorAll(selector);\n    var oldEls = toEl.querySelectorAll(selector);\n    if (this.log) {\n      this.log(\"Pjax switch\", selector, newEls, oldEls);\n    }\n    if (newEls.length !== oldEls.length) {\n      throw \"DOM doesn’t look the same on new loaded page: ’\" +\n        selector +\n        \"’ - new \" +\n        newEls.length +\n        \", old \" +\n        oldEls.length;\n    }\n\n    forEachEls(\n      newEls,\n      function(newEl, i) {\n        var oldEl = oldEls[i];\n        if (this.log) {\n          this.log(\"newEl\", newEl, \"oldEl\", oldEl);\n        }\n\n        var callback = switches[selector]\n          ? switches[selector].bind(\n              this,\n              oldEl,\n              newEl,\n              options,\n              switchesOptions[selector]\n            )\n          : defaultSwitches.outerHTML.bind(this, oldEl, newEl, options);\n\n        switchesQueue.push(callback);\n      },\n      this\n    );\n  }, this);\n\n  this.state.numPendingSwitches = switchesQueue.length;\n\n  switchesQueue.forEach(function(queuedSwitch) {\n    queuedSwitch();\n  });\n};\n","source":"lib/pjax/lib/switches-selectors.js","raw":"var forEachEls = require(\"./foreach-els\");\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(\n  switches,\n  switchesOptions,\n  selectors,\n  fromEl,\n  toEl,\n  options\n) {\n  var switchesQueue = [];\n\n  selectors.forEach(function(selector) {\n    var newEls = fromEl.querySelectorAll(selector);\n    var oldEls = toEl.querySelectorAll(selector);\n    if (this.log) {\n      this.log(\"Pjax switch\", selector, newEls, oldEls);\n    }\n    if (newEls.length !== oldEls.length) {\n      throw \"DOM doesn’t look the same on new loaded page: ’\" +\n        selector +\n        \"’ - new \" +\n        newEls.length +\n        \", old \" +\n        oldEls.length;\n    }\n\n    forEachEls(\n      newEls,\n      function(newEl, i) {\n        var oldEl = oldEls[i];\n        if (this.log) {\n          this.log(\"newEl\", newEl, \"oldEl\", oldEl);\n        }\n\n        var callback = switches[selector]\n          ? switches[selector].bind(\n              this,\n              oldEl,\n              newEl,\n              options,\n              switchesOptions[selector]\n            )\n          : defaultSwitches.outerHTML.bind(this, oldEl, newEl, options);\n\n        switchesQueue.push(callback);\n      },\n      this\n    );\n  }, this);\n\n  this.state.numPendingSwitches = switchesQueue.length;\n\n  switchesQueue.forEach(function(queuedSwitch) {\n    queuedSwitch();\n  });\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/switches-selectors.js","layout":"false","title":"","comments":1,"_id":"clixi466j000k37jxeya069wr","content":"var forEachEls = require(\"./foreach-els\");\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(\n  switches,\n  switchesOptions,\n  selectors,\n  fromEl,\n  toEl,\n  options\n) {\n  var switchesQueue = [];\n\n  selectors.forEach(function(selector) {\n    var newEls = fromEl.querySelectorAll(selector);\n    var oldEls = toEl.querySelectorAll(selector);\n    if (this.log) {\n      this.log(\"Pjax switch\", selector, newEls, oldEls);\n    }\n    if (newEls.length !== oldEls.length) {\n      throw \"DOM doesn’t look the same on new loaded page: ’\" +\n        selector +\n        \"’ - new \" +\n        newEls.length +\n        \", old \" +\n        oldEls.length;\n    }\n\n    forEachEls(\n      newEls,\n      function(newEl, i) {\n        var oldEl = oldEls[i];\n        if (this.log) {\n          this.log(\"newEl\", newEl, \"oldEl\", oldEl);\n        }\n\n        var callback = switches[selector]\n          ? switches[selector].bind(\n              this,\n              oldEl,\n              newEl,\n              options,\n              switchesOptions[selector]\n            )\n          : defaultSwitches.outerHTML.bind(this, oldEl, newEl, options);\n\n        switchesQueue.push(callback);\n      },\n      this\n    );\n  }, this);\n\n  this.state.numPendingSwitches = switchesQueue.length;\n\n  switchesQueue.forEach(function(queuedSwitch) {\n    queuedSwitch();\n  });\n};\n","site":{"data":{}},"length":928,"excerpt":"","more":"var forEachEls = require(\"./foreach-els\");\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(\n  switches,\n  switchesOptions,\n  selectors,\n  fromEl,\n  toEl,\n  options\n) {\n  var switchesQueue = [];\n\n  selectors.forEach(function(selector) {\n    var newEls = fromEl.querySelectorAll(selector);\n    var oldEls = toEl.querySelectorAll(selector);\n    if (this.log) {\n      this.log(\"Pjax switch\", selector, newEls, oldEls);\n    }\n    if (newEls.length !== oldEls.length) {\n      throw \"DOM doesn’t look the same on new loaded page: ’\" +\n        selector +\n        \"’ - new \" +\n        newEls.length +\n        \", old \" +\n        oldEls.length;\n    }\n\n    forEachEls(\n      newEls,\n      function(newEl, i) {\n        var oldEl = oldEls[i];\n        if (this.log) {\n          this.log(\"newEl\", newEl, \"oldEl\", oldEl);\n        }\n\n        var callback = switches[selector]\n          ? switches[selector].bind(\n              this,\n              oldEl,\n              newEl,\n              options,\n              switchesOptions[selector]\n            )\n          : defaultSwitches.outerHTML.bind(this, oldEl, newEl, options);\n\n        switchesQueue.push(callback);\n      },\n      this\n    );\n  }, this);\n\n  this.state.numPendingSwitches = switchesQueue.length;\n\n  switchesQueue.forEach(function(queuedSwitch) {\n    queuedSwitch();\n  });\n};\n"},{"_content":"var on = require(\"./events/on\");\n\nmodule.exports = {\n  outerHTML: function(oldEl, newEl) {\n    oldEl.outerHTML = newEl.outerHTML;\n    this.onSwitch();\n  },\n\n  innerHTML: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    if (newEl.className === \"\") {\n      oldEl.removeAttribute(\"class\");\n    } else {\n      //oldEl.className = newEl.className;\n    }\n\n    this.onSwitch();\n  },\n\n  switchElementsAlt: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    // Copy attributes from the new element to the old one\n    if (newEl.hasAttributes()) {\n      var attrs = newEl.attributes;\n      for (var i = 0; i < attrs.length; i++) {\n        oldEl.attributes.setNamedItem(attrs[i].cloneNode());\n      }\n    }\n\n    this.onSwitch();\n  },\n\n  // Equivalent to outerHTML(), but doesn't require switchElementsAlt() for <head> and <body>\n  replaceNode: function(oldEl, newEl) {\n    oldEl.parentNode.replaceChild(newEl, oldEl);\n    this.onSwitch();\n  },\n\n  sideBySide: function(oldEl, newEl, options, switchOptions) {\n    var forEach = Array.prototype.forEach;\n    var elsToRemove = [];\n    var elsToAdd = [];\n    var fragToAppend = document.createDocumentFragment();\n    var animationEventNames =\n      \"animationend webkitAnimationEnd MSAnimationEnd oanimationend\";\n    var animatedElsNumber = 0;\n    var sexyAnimationEnd = function(e) {\n      if (e.target !== e.currentTarget) {\n        // end triggered by an animation on a child\n        return;\n      }\n\n      animatedElsNumber--;\n      if (animatedElsNumber <= 0 && elsToRemove) {\n        elsToRemove.forEach(function(el) {\n          // browsing quickly can make the el\n          // already removed by last page update ?\n          if (el.parentNode) {\n            el.parentNode.removeChild(el);\n          }\n        });\n\n        elsToAdd.forEach(function(el) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        });\n\n        elsToAdd = null; // free memory\n        elsToRemove = null; // free memory\n\n        // this is to trigger some repaint (example: picturefill)\n        this.onSwitch();\n      }\n    }.bind(this);\n\n    switchOptions = switchOptions || {};\n\n    forEach.call(oldEl.childNodes, function(el) {\n      elsToRemove.push(el);\n      if (el.classList && !el.classList.contains(\"js-Pjax-remove\")) {\n        // for fast switch, clean element that just have been added, & not cleaned yet.\n        if (el.hasAttribute(\"data-pjax-classes\")) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        }\n        el.classList.add(\"js-Pjax-remove\");\n        if (switchOptions.callbacks && switchOptions.callbacks.removeElement) {\n          switchOptions.callbacks.removeElement(el);\n        }\n        if (switchOptions.classNames) {\n          el.className +=\n            \" \" +\n            switchOptions.classNames.remove +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.backward\n              : switchOptions.classNames.forward);\n        }\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    forEach.call(newEl.childNodes, function(el) {\n      if (el.classList) {\n        var addClasses = \"\";\n        if (switchOptions.classNames) {\n          addClasses =\n            \" js-Pjax-add \" +\n            switchOptions.classNames.add +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.forward\n              : switchOptions.classNames.backward);\n        }\n        if (switchOptions.callbacks && switchOptions.callbacks.addElement) {\n          switchOptions.callbacks.addElement(el);\n        }\n        el.className += addClasses;\n        el.setAttribute(\"data-pjax-classes\", addClasses);\n        elsToAdd.push(el);\n        fragToAppend.appendChild(el);\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    // pass all className of the parent\n    oldEl.className = newEl.className;\n    oldEl.appendChild(fragToAppend);\n  }\n};\n","source":"lib/pjax/lib/switches.js","raw":"var on = require(\"./events/on\");\n\nmodule.exports = {\n  outerHTML: function(oldEl, newEl) {\n    oldEl.outerHTML = newEl.outerHTML;\n    this.onSwitch();\n  },\n\n  innerHTML: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    if (newEl.className === \"\") {\n      oldEl.removeAttribute(\"class\");\n    } else {\n      //oldEl.className = newEl.className;\n    }\n\n    this.onSwitch();\n  },\n\n  switchElementsAlt: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    // Copy attributes from the new element to the old one\n    if (newEl.hasAttributes()) {\n      var attrs = newEl.attributes;\n      for (var i = 0; i < attrs.length; i++) {\n        oldEl.attributes.setNamedItem(attrs[i].cloneNode());\n      }\n    }\n\n    this.onSwitch();\n  },\n\n  // Equivalent to outerHTML(), but doesn't require switchElementsAlt() for <head> and <body>\n  replaceNode: function(oldEl, newEl) {\n    oldEl.parentNode.replaceChild(newEl, oldEl);\n    this.onSwitch();\n  },\n\n  sideBySide: function(oldEl, newEl, options, switchOptions) {\n    var forEach = Array.prototype.forEach;\n    var elsToRemove = [];\n    var elsToAdd = [];\n    var fragToAppend = document.createDocumentFragment();\n    var animationEventNames =\n      \"animationend webkitAnimationEnd MSAnimationEnd oanimationend\";\n    var animatedElsNumber = 0;\n    var sexyAnimationEnd = function(e) {\n      if (e.target !== e.currentTarget) {\n        // end triggered by an animation on a child\n        return;\n      }\n\n      animatedElsNumber--;\n      if (animatedElsNumber <= 0 && elsToRemove) {\n        elsToRemove.forEach(function(el) {\n          // browsing quickly can make the el\n          // already removed by last page update ?\n          if (el.parentNode) {\n            el.parentNode.removeChild(el);\n          }\n        });\n\n        elsToAdd.forEach(function(el) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        });\n\n        elsToAdd = null; // free memory\n        elsToRemove = null; // free memory\n\n        // this is to trigger some repaint (example: picturefill)\n        this.onSwitch();\n      }\n    }.bind(this);\n\n    switchOptions = switchOptions || {};\n\n    forEach.call(oldEl.childNodes, function(el) {\n      elsToRemove.push(el);\n      if (el.classList && !el.classList.contains(\"js-Pjax-remove\")) {\n        // for fast switch, clean element that just have been added, & not cleaned yet.\n        if (el.hasAttribute(\"data-pjax-classes\")) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        }\n        el.classList.add(\"js-Pjax-remove\");\n        if (switchOptions.callbacks && switchOptions.callbacks.removeElement) {\n          switchOptions.callbacks.removeElement(el);\n        }\n        if (switchOptions.classNames) {\n          el.className +=\n            \" \" +\n            switchOptions.classNames.remove +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.backward\n              : switchOptions.classNames.forward);\n        }\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    forEach.call(newEl.childNodes, function(el) {\n      if (el.classList) {\n        var addClasses = \"\";\n        if (switchOptions.classNames) {\n          addClasses =\n            \" js-Pjax-add \" +\n            switchOptions.classNames.add +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.forward\n              : switchOptions.classNames.backward);\n        }\n        if (switchOptions.callbacks && switchOptions.callbacks.addElement) {\n          switchOptions.callbacks.addElement(el);\n        }\n        el.className += addClasses;\n        el.setAttribute(\"data-pjax-classes\", addClasses);\n        elsToAdd.push(el);\n        fragToAppend.appendChild(el);\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    // pass all className of the parent\n    oldEl.className = newEl.className;\n    oldEl.appendChild(fragToAppend);\n  }\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/switches.js","layout":"false","title":"","comments":1,"_id":"clixi466j000l37jx4kjmg7r6","content":"var on = require(\"./events/on\");\n\nmodule.exports = {\n  outerHTML: function(oldEl, newEl) {\n    oldEl.outerHTML = newEl.outerHTML;\n    this.onSwitch();\n  },\n\n  innerHTML: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    if (newEl.className === \"\") {\n      oldEl.removeAttribute(\"class\");\n    } else {\n      //oldEl.className = newEl.className;\n    }\n\n    this.onSwitch();\n  },\n\n  switchElementsAlt: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    // Copy attributes from the new element to the old one\n    if (newEl.hasAttributes()) {\n      var attrs = newEl.attributes;\n      for (var i = 0; i < attrs.length; i++) {\n        oldEl.attributes.setNamedItem(attrs[i].cloneNode());\n      }\n    }\n\n    this.onSwitch();\n  },\n\n  // Equivalent to outerHTML(), but doesn't require switchElementsAlt() for <head> and <body>\n  replaceNode: function(oldEl, newEl) {\n    oldEl.parentNode.replaceChild(newEl, oldEl);\n    this.onSwitch();\n  },\n\n  sideBySide: function(oldEl, newEl, options, switchOptions) {\n    var forEach = Array.prototype.forEach;\n    var elsToRemove = [];\n    var elsToAdd = [];\n    var fragToAppend = document.createDocumentFragment();\n    var animationEventNames =\n      \"animationend webkitAnimationEnd MSAnimationEnd oanimationend\";\n    var animatedElsNumber = 0;\n    var sexyAnimationEnd = function(e) {\n      if (e.target !== e.currentTarget) {\n        // end triggered by an animation on a child\n        return;\n      }\n\n      animatedElsNumber--;\n      if (animatedElsNumber <= 0 && elsToRemove) {\n        elsToRemove.forEach(function(el) {\n          // browsing quickly can make the el\n          // already removed by last page update ?\n          if (el.parentNode) {\n            el.parentNode.removeChild(el);\n          }\n        });\n\n        elsToAdd.forEach(function(el) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        });\n\n        elsToAdd = null; // free memory\n        elsToRemove = null; // free memory\n\n        // this is to trigger some repaint (example: picturefill)\n        this.onSwitch();\n      }\n    }.bind(this);\n\n    switchOptions = switchOptions || {};\n\n    forEach.call(oldEl.childNodes, function(el) {\n      elsToRemove.push(el);\n      if (el.classList && !el.classList.contains(\"js-Pjax-remove\")) {\n        // for fast switch, clean element that just have been added, & not cleaned yet.\n        if (el.hasAttribute(\"data-pjax-classes\")) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        }\n        el.classList.add(\"js-Pjax-remove\");\n        if (switchOptions.callbacks && switchOptions.callbacks.removeElement) {\n          switchOptions.callbacks.removeElement(el);\n        }\n        if (switchOptions.classNames) {\n          el.className +=\n            \" \" +\n            switchOptions.classNames.remove +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.backward\n              : switchOptions.classNames.forward);\n        }\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    forEach.call(newEl.childNodes, function(el) {\n      if (el.classList) {\n        var addClasses = \"\";\n        if (switchOptions.classNames) {\n          addClasses =\n            \" js-Pjax-add \" +\n            switchOptions.classNames.add +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.forward\n              : switchOptions.classNames.backward);\n        }\n        if (switchOptions.callbacks && switchOptions.callbacks.addElement) {\n          switchOptions.callbacks.addElement(el);\n        }\n        el.className += addClasses;\n        el.setAttribute(\"data-pjax-classes\", addClasses);\n        elsToAdd.push(el);\n        fragToAppend.appendChild(el);\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    // pass all className of the parent\n    oldEl.className = newEl.className;\n    oldEl.appendChild(fragToAppend);\n  }\n};\n","site":{"data":{}},"length":1165,"excerpt":"","more":"var on = require(\"./events/on\");\n\nmodule.exports = {\n  outerHTML: function(oldEl, newEl) {\n    oldEl.outerHTML = newEl.outerHTML;\n    this.onSwitch();\n  },\n\n  innerHTML: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    if (newEl.className === \"\") {\n      oldEl.removeAttribute(\"class\");\n    } else {\n      //oldEl.className = newEl.className;\n    }\n\n    this.onSwitch();\n  },\n\n  switchElementsAlt: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    // Copy attributes from the new element to the old one\n    if (newEl.hasAttributes()) {\n      var attrs = newEl.attributes;\n      for (var i = 0; i < attrs.length; i++) {\n        oldEl.attributes.setNamedItem(attrs[i].cloneNode());\n      }\n    }\n\n    this.onSwitch();\n  },\n\n  // Equivalent to outerHTML(), but doesn't require switchElementsAlt() for <head> and <body>\n  replaceNode: function(oldEl, newEl) {\n    oldEl.parentNode.replaceChild(newEl, oldEl);\n    this.onSwitch();\n  },\n\n  sideBySide: function(oldEl, newEl, options, switchOptions) {\n    var forEach = Array.prototype.forEach;\n    var elsToRemove = [];\n    var elsToAdd = [];\n    var fragToAppend = document.createDocumentFragment();\n    var animationEventNames =\n      \"animationend webkitAnimationEnd MSAnimationEnd oanimationend\";\n    var animatedElsNumber = 0;\n    var sexyAnimationEnd = function(e) {\n      if (e.target !== e.currentTarget) {\n        // end triggered by an animation on a child\n        return;\n      }\n\n      animatedElsNumber--;\n      if (animatedElsNumber <= 0 && elsToRemove) {\n        elsToRemove.forEach(function(el) {\n          // browsing quickly can make the el\n          // already removed by last page update ?\n          if (el.parentNode) {\n            el.parentNode.removeChild(el);\n          }\n        });\n\n        elsToAdd.forEach(function(el) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        });\n\n        elsToAdd = null; // free memory\n        elsToRemove = null; // free memory\n\n        // this is to trigger some repaint (example: picturefill)\n        this.onSwitch();\n      }\n    }.bind(this);\n\n    switchOptions = switchOptions || {};\n\n    forEach.call(oldEl.childNodes, function(el) {\n      elsToRemove.push(el);\n      if (el.classList && !el.classList.contains(\"js-Pjax-remove\")) {\n        // for fast switch, clean element that just have been added, & not cleaned yet.\n        if (el.hasAttribute(\"data-pjax-classes\")) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        }\n        el.classList.add(\"js-Pjax-remove\");\n        if (switchOptions.callbacks && switchOptions.callbacks.removeElement) {\n          switchOptions.callbacks.removeElement(el);\n        }\n        if (switchOptions.classNames) {\n          el.className +=\n            \" \" +\n            switchOptions.classNames.remove +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.backward\n              : switchOptions.classNames.forward);\n        }\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    forEach.call(newEl.childNodes, function(el) {\n      if (el.classList) {\n        var addClasses = \"\";\n        if (switchOptions.classNames) {\n          addClasses =\n            \" js-Pjax-add \" +\n            switchOptions.classNames.add +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.forward\n              : switchOptions.classNames.backward);\n        }\n        if (switchOptions.callbacks && switchOptions.callbacks.addElement) {\n          switchOptions.callbacks.addElement(el);\n        }\n        el.className += addClasses;\n        el.setAttribute(\"data-pjax-classes\", addClasses);\n        elsToAdd.push(el);\n        fragToAppend.appendChild(el);\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    // pass all className of the parent\n    oldEl.className = newEl.className;\n    oldEl.appendChild(fragToAppend);\n  }\n};\n"},{"_content":"module.exports = (function() {\n  var counter = 0;\n  return function() {\n    var id = \"pjax\" + new Date().getTime() + \"_\" + counter;\n    counter++;\n    return id;\n  };\n})();\n","source":"lib/pjax/lib/uniqueid.js","raw":"module.exports = (function() {\n  var counter = 0;\n  return function() {\n    var id = \"pjax\" + new Date().getTime() + \"_\" + counter;\n    counter++;\n    return id;\n  };\n})();\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/uniqueid.js","layout":"false","title":"","comments":1,"_id":"clixi466k000m37jx71ipb1kq","content":"module.exports = (function() {\n  var counter = 0;\n  return function() {\n    var id = \"pjax\" + new Date().getTime() + \"_\" + counter;\n    counter++;\n    return id;\n  };\n})();\n","site":{"data":{}},"length":128,"excerpt":"","more":"module.exports = (function() {\n  var counter = 0;\n  return function() {\n    var id = \"pjax\" + new Date().getTime() + \"_\" + counter;\n    counter++;\n    return id;\n  };\n})();\n"},{"_content":"var jsdomOptions = {\n  url: \"https://example.org/\",\n  runScripts: \"dangerously\"\n};\n\nrequire(\"jsdom-global\")(\"\", jsdomOptions);\n","source":"lib/pjax/tests/setup.js","raw":"var jsdomOptions = {\n  url: \"https://example.org/\",\n  runScripts: \"dangerously\"\n};\n\nrequire(\"jsdom-global\")(\"\", jsdomOptions);\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/setup.js","layout":"false","title":"","comments":1,"_id":"clixi466l000n37jx705l620o","content":"var jsdomOptions = {\n  url: \"https://example.org/\",\n  runScripts: \"dangerously\"\n};\n\nrequire(\"jsdom-global\")(\"\", jsdomOptions);\n","site":{"data":{}},"length":111,"excerpt":"","more":"var jsdomOptions = {\n  url: \"https://example.org/\",\n  runScripts: \"dangerously\"\n};\n\nrequire(\"jsdom-global\")(\"\", jsdomOptions);\n"},{"_content":"var forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, listener, useCapture) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    forEachEls(els, function(el) {\n      el.removeEventListener(e, listener, useCapture);\n    });\n  });\n};\n","source":"lib/pjax/lib/events/off.js","raw":"var forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, listener, useCapture) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    forEachEls(els, function(el) {\n      el.removeEventListener(e, listener, useCapture);\n    });\n  });\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/events/off.js","layout":"false","title":"","comments":1,"_id":"clixi466l000o37jxbr44fzq9","content":"var forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, listener, useCapture) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    forEachEls(els, function(el) {\n      el.removeEventListener(e, listener, useCapture);\n    });\n  });\n};\n","site":{"data":{}},"length":260,"excerpt":"","more":"var forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, listener, useCapture) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    forEachEls(els, function(el) {\n      el.removeEventListener(e, listener, useCapture);\n    });\n  });\n};\n"},{"_content":"var forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, listener, useCapture) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    forEachEls(els, function(el) {\n      el.addEventListener(e, listener, useCapture);\n    });\n  });\n};\n","source":"lib/pjax/lib/events/on.js","raw":"var forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, listener, useCapture) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    forEachEls(els, function(el) {\n      el.addEventListener(e, listener, useCapture);\n    });\n  });\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/events/on.js","layout":"false","title":"","comments":1,"_id":"clixi466m000p37jxdfpw32s8","content":"var forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, listener, useCapture) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    forEachEls(els, function(el) {\n      el.addEventListener(e, listener, useCapture);\n    });\n  });\n};\n","site":{"data":{}},"length":257,"excerpt":"","more":"var forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, listener, useCapture) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    forEachEls(els, function(el) {\n      el.addEventListener(e, listener, useCapture);\n    });\n  });\n};\n"},{"_content":"var forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, opts) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    var event;\n    event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(e, true, true);\n    event.eventName = e;\n    if (opts) {\n      Object.keys(opts).forEach(function(key) {\n        event[key] = opts[key];\n      });\n    }\n\n    forEachEls(els, function(el) {\n      var domFix = false;\n      if (!el.parentNode && el !== document && el !== window) {\n        // THANK YOU IE (9/10/11)\n        // dispatchEvent doesn't work if the element is not in the DOM\n        domFix = true;\n        document.body.appendChild(el);\n      }\n      el.dispatchEvent(event);\n      if (domFix) {\n        el.parentNode.removeChild(el);\n      }\n    });\n  });\n};\n","source":"lib/pjax/lib/events/trigger.js","raw":"var forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, opts) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    var event;\n    event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(e, true, true);\n    event.eventName = e;\n    if (opts) {\n      Object.keys(opts).forEach(function(key) {\n        event[key] = opts[key];\n      });\n    }\n\n    forEachEls(els, function(el) {\n      var domFix = false;\n      if (!el.parentNode && el !== document && el !== window) {\n        // THANK YOU IE (9/10/11)\n        // dispatchEvent doesn't work if the element is not in the DOM\n        domFix = true;\n        document.body.appendChild(el);\n      }\n      el.dispatchEvent(event);\n      if (domFix) {\n        el.parentNode.removeChild(el);\n      }\n    });\n  });\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/events/trigger.js","layout":"false","title":"","comments":1,"_id":"clixi466n000q37jxgve2a9f0","content":"var forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, opts) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    var event;\n    event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(e, true, true);\n    event.eventName = e;\n    if (opts) {\n      Object.keys(opts).forEach(function(key) {\n        event[key] = opts[key];\n      });\n    }\n\n    forEachEls(els, function(el) {\n      var domFix = false;\n      if (!el.parentNode && el !== document && el !== window) {\n        // THANK YOU IE (9/10/11)\n        // dispatchEvent doesn't work if the element is not in the DOM\n        domFix = true;\n        document.body.appendChild(el);\n      }\n      el.dispatchEvent(event);\n      if (domFix) {\n        el.parentNode.removeChild(el);\n      }\n    });\n  });\n};\n","site":{"data":{}},"length":614,"excerpt":"","more":"var forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, opts) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    var event;\n    event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(e, true, true);\n    event.eventName = e;\n    if (opts) {\n      Object.keys(opts).forEach(function(key) {\n        event[key] = opts[key];\n      });\n    }\n\n    forEachEls(els, function(el) {\n      var domFix = false;\n      if (!el.parentNode && el !== document && el !== window) {\n        // THANK YOU IE (9/10/11)\n        // dispatchEvent doesn't work if the element is not in the DOM\n        domFix = true;\n        document.body.appendChild(el);\n      }\n      el.dispatchEvent(event);\n      if (domFix) {\n        el.parentNode.removeChild(el);\n      }\n    });\n  });\n};\n"},{"_content":"var on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar formAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  // Initialize requestOptions\n  options.requestOptions = {\n    requestUrl: el.getAttribute(\"action\") || window.location.href,\n    requestMethod: el.getAttribute(\"method\") || \"GET\"\n  };\n\n  // create a testable virtual link of the form action\n  var virtLinkElement = document.createElement(\"a\");\n  virtLinkElement.setAttribute(\"href\", options.requestOptions.requestUrl);\n\n  var attrValue = checkIfShouldAbort(virtLinkElement, options);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  if (el.enctype === \"multipart/form-data\") {\n    options.requestOptions.formData = new FormData(el);\n  } else {\n    options.requestOptions.requestParams = parseFormElements(el);\n  }\n\n  el.setAttribute(attrState, \"submit\");\n\n  options.triggerElement = el;\n  this.loadUrl(virtLinkElement.href, options);\n};\n\nfunction parseFormElements(el) {\n  var requestParams = [];\n  var formElements = el.elements;\n\n  for (var i = 0; i < formElements.length; i++) {\n    var element = formElements[i];\n    var tagName = element.tagName.toLowerCase();\n    // jscs:disable disallowImplicitTypeConversion\n    if (\n      !!element.name &&\n      element.attributes !== undefined &&\n      tagName !== \"button\"\n    ) {\n      // jscs:enable disallowImplicitTypeConversion\n      var type = element.attributes.type;\n\n      if (\n        !type ||\n        (type.value !== \"checkbox\" && type.value !== \"radio\") ||\n        element.checked\n      ) {\n        // Build array of values to submit\n        var values = [];\n\n        if (tagName === \"select\") {\n          var opt;\n\n          for (var j = 0; j < element.options.length; j++) {\n            opt = element.options[j];\n            if (opt.selected && !opt.disabled) {\n              values.push(opt.hasAttribute(\"value\") ? opt.value : opt.text);\n            }\n          }\n        } else {\n          values.push(element.value);\n        }\n\n        for (var k = 0; k < values.length; k++) {\n          requestParams.push({\n            name: encodeURIComponent(element.name),\n            value: encodeURIComponent(values[k])\n          });\n        }\n      }\n    }\n  }\n\n  return requestParams;\n}\n\nfunction checkIfShouldAbort(virtLinkElement, options) {\n  // Ignore external links.\n  if (\n    virtLinkElement.protocol !== window.location.protocol ||\n    virtLinkElement.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore click if we are on an anchor on the same page\n  if (\n    virtLinkElement.hash &&\n    virtLinkElement.href.replace(virtLinkElement.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (virtLinkElement.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n\n  // if declared as a full reload, just normally submit the form\n  if (\n    options.currentUrlFullReload &&\n    virtLinkElement.href === window.location.href.split(\"#\")[0]\n  ) {\n    return \"reload\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"submit\", function(event) {\n    formAction.call(that, el, event);\n  });\n};\n","source":"lib/pjax/lib/proto/attach-form.js","raw":"var on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar formAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  // Initialize requestOptions\n  options.requestOptions = {\n    requestUrl: el.getAttribute(\"action\") || window.location.href,\n    requestMethod: el.getAttribute(\"method\") || \"GET\"\n  };\n\n  // create a testable virtual link of the form action\n  var virtLinkElement = document.createElement(\"a\");\n  virtLinkElement.setAttribute(\"href\", options.requestOptions.requestUrl);\n\n  var attrValue = checkIfShouldAbort(virtLinkElement, options);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  if (el.enctype === \"multipart/form-data\") {\n    options.requestOptions.formData = new FormData(el);\n  } else {\n    options.requestOptions.requestParams = parseFormElements(el);\n  }\n\n  el.setAttribute(attrState, \"submit\");\n\n  options.triggerElement = el;\n  this.loadUrl(virtLinkElement.href, options);\n};\n\nfunction parseFormElements(el) {\n  var requestParams = [];\n  var formElements = el.elements;\n\n  for (var i = 0; i < formElements.length; i++) {\n    var element = formElements[i];\n    var tagName = element.tagName.toLowerCase();\n    // jscs:disable disallowImplicitTypeConversion\n    if (\n      !!element.name &&\n      element.attributes !== undefined &&\n      tagName !== \"button\"\n    ) {\n      // jscs:enable disallowImplicitTypeConversion\n      var type = element.attributes.type;\n\n      if (\n        !type ||\n        (type.value !== \"checkbox\" && type.value !== \"radio\") ||\n        element.checked\n      ) {\n        // Build array of values to submit\n        var values = [];\n\n        if (tagName === \"select\") {\n          var opt;\n\n          for (var j = 0; j < element.options.length; j++) {\n            opt = element.options[j];\n            if (opt.selected && !opt.disabled) {\n              values.push(opt.hasAttribute(\"value\") ? opt.value : opt.text);\n            }\n          }\n        } else {\n          values.push(element.value);\n        }\n\n        for (var k = 0; k < values.length; k++) {\n          requestParams.push({\n            name: encodeURIComponent(element.name),\n            value: encodeURIComponent(values[k])\n          });\n        }\n      }\n    }\n  }\n\n  return requestParams;\n}\n\nfunction checkIfShouldAbort(virtLinkElement, options) {\n  // Ignore external links.\n  if (\n    virtLinkElement.protocol !== window.location.protocol ||\n    virtLinkElement.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore click if we are on an anchor on the same page\n  if (\n    virtLinkElement.hash &&\n    virtLinkElement.href.replace(virtLinkElement.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (virtLinkElement.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n\n  // if declared as a full reload, just normally submit the form\n  if (\n    options.currentUrlFullReload &&\n    virtLinkElement.href === window.location.href.split(\"#\")[0]\n  ) {\n    return \"reload\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"submit\", function(event) {\n    formAction.call(that, el, event);\n  });\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/proto/attach-form.js","layout":"false","title":"","comments":1,"_id":"clixi466n000r37jx1rsc7e8j","content":"var on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar formAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  // Initialize requestOptions\n  options.requestOptions = {\n    requestUrl: el.getAttribute(\"action\") || window.location.href,\n    requestMethod: el.getAttribute(\"method\") || \"GET\"\n  };\n\n  // create a testable virtual link of the form action\n  var virtLinkElement = document.createElement(\"a\");\n  virtLinkElement.setAttribute(\"href\", options.requestOptions.requestUrl);\n\n  var attrValue = checkIfShouldAbort(virtLinkElement, options);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  if (el.enctype === \"multipart/form-data\") {\n    options.requestOptions.formData = new FormData(el);\n  } else {\n    options.requestOptions.requestParams = parseFormElements(el);\n  }\n\n  el.setAttribute(attrState, \"submit\");\n\n  options.triggerElement = el;\n  this.loadUrl(virtLinkElement.href, options);\n};\n\nfunction parseFormElements(el) {\n  var requestParams = [];\n  var formElements = el.elements;\n\n  for (var i = 0; i < formElements.length; i++) {\n    var element = formElements[i];\n    var tagName = element.tagName.toLowerCase();\n    // jscs:disable disallowImplicitTypeConversion\n    if (\n      !!element.name &&\n      element.attributes !== undefined &&\n      tagName !== \"button\"\n    ) {\n      // jscs:enable disallowImplicitTypeConversion\n      var type = element.attributes.type;\n\n      if (\n        !type ||\n        (type.value !== \"checkbox\" && type.value !== \"radio\") ||\n        element.checked\n      ) {\n        // Build array of values to submit\n        var values = [];\n\n        if (tagName === \"select\") {\n          var opt;\n\n          for (var j = 0; j < element.options.length; j++) {\n            opt = element.options[j];\n            if (opt.selected && !opt.disabled) {\n              values.push(opt.hasAttribute(\"value\") ? opt.value : opt.text);\n            }\n          }\n        } else {\n          values.push(element.value);\n        }\n\n        for (var k = 0; k < values.length; k++) {\n          requestParams.push({\n            name: encodeURIComponent(element.name),\n            value: encodeURIComponent(values[k])\n          });\n        }\n      }\n    }\n  }\n\n  return requestParams;\n}\n\nfunction checkIfShouldAbort(virtLinkElement, options) {\n  // Ignore external links.\n  if (\n    virtLinkElement.protocol !== window.location.protocol ||\n    virtLinkElement.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore click if we are on an anchor on the same page\n  if (\n    virtLinkElement.hash &&\n    virtLinkElement.href.replace(virtLinkElement.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (virtLinkElement.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n\n  // if declared as a full reload, just normally submit the form\n  if (\n    options.currentUrlFullReload &&\n    virtLinkElement.href === window.location.href.split(\"#\")[0]\n  ) {\n    return \"reload\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"submit\", function(event) {\n    formAction.call(that, el, event);\n  });\n};\n","site":{"data":{}},"length":2769,"excerpt":"","more":"var on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar formAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  // Initialize requestOptions\n  options.requestOptions = {\n    requestUrl: el.getAttribute(\"action\") || window.location.href,\n    requestMethod: el.getAttribute(\"method\") || \"GET\"\n  };\n\n  // create a testable virtual link of the form action\n  var virtLinkElement = document.createElement(\"a\");\n  virtLinkElement.setAttribute(\"href\", options.requestOptions.requestUrl);\n\n  var attrValue = checkIfShouldAbort(virtLinkElement, options);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  if (el.enctype === \"multipart/form-data\") {\n    options.requestOptions.formData = new FormData(el);\n  } else {\n    options.requestOptions.requestParams = parseFormElements(el);\n  }\n\n  el.setAttribute(attrState, \"submit\");\n\n  options.triggerElement = el;\n  this.loadUrl(virtLinkElement.href, options);\n};\n\nfunction parseFormElements(el) {\n  var requestParams = [];\n  var formElements = el.elements;\n\n  for (var i = 0; i < formElements.length; i++) {\n    var element = formElements[i];\n    var tagName = element.tagName.toLowerCase();\n    // jscs:disable disallowImplicitTypeConversion\n    if (\n      !!element.name &&\n      element.attributes !== undefined &&\n      tagName !== \"button\"\n    ) {\n      // jscs:enable disallowImplicitTypeConversion\n      var type = element.attributes.type;\n\n      if (\n        !type ||\n        (type.value !== \"checkbox\" && type.value !== \"radio\") ||\n        element.checked\n      ) {\n        // Build array of values to submit\n        var values = [];\n\n        if (tagName === \"select\") {\n          var opt;\n\n          for (var j = 0; j < element.options.length; j++) {\n            opt = element.options[j];\n            if (opt.selected && !opt.disabled) {\n              values.push(opt.hasAttribute(\"value\") ? opt.value : opt.text);\n            }\n          }\n        } else {\n          values.push(element.value);\n        }\n\n        for (var k = 0; k < values.length; k++) {\n          requestParams.push({\n            name: encodeURIComponent(element.name),\n            value: encodeURIComponent(values[k])\n          });\n        }\n      }\n    }\n  }\n\n  return requestParams;\n}\n\nfunction checkIfShouldAbort(virtLinkElement, options) {\n  // Ignore external links.\n  if (\n    virtLinkElement.protocol !== window.location.protocol ||\n    virtLinkElement.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore click if we are on an anchor on the same page\n  if (\n    virtLinkElement.hash &&\n    virtLinkElement.href.replace(virtLinkElement.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (virtLinkElement.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n\n  // if declared as a full reload, just normally submit the form\n  if (\n    options.currentUrlFullReload &&\n    virtLinkElement.href === window.location.href.split(\"#\")[0]\n  ) {\n    return \"reload\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"submit\", function(event) {\n    formAction.call(that, el, event);\n  });\n};\n"},{"_content":"var on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar linkAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  var attrValue = checkIfShouldAbort(el, event);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  // don’t do \"nothing\" if user try to reload the page by clicking the same link twice\n  if (\n    this.options.currentUrlFullReload &&\n    el.href === window.location.href.split(\"#\")[0]\n  ) {\n    el.setAttribute(attrState, \"reload\");\n    this.reload();\n    return;\n  }\n\n  el.setAttribute(attrState, \"load\");\n\n  options.triggerElement = el;\n  this.loadUrl(el.href, options);\n};\n\nfunction checkIfShouldAbort(el, event) {\n  // Don’t break browser special behavior on links (like page in new window)\n  if (\n    event.which > 1 ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey\n  ) {\n    return \"modifier\";\n  }\n\n  // we do test on href now to prevent unexpected behavior if for some reason\n  // user have href that can be dynamically updated\n\n  // Ignore external links.\n  if (\n    el.protocol !== window.location.protocol ||\n    el.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore anchors on the same page (keep native behavior)\n  if (\n    el.hash &&\n    el.href.replace(el.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (el.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"click\", function(event) {\n    linkAction.call(that, el, event);\n  });\n\n  on(\n    el,\n    \"keyup\",\n    function(event) {\n      if (event.keyCode === 13) {\n        linkAction.call(that, el, event);\n      }\n    }.bind(this)\n  );\n};\n","source":"lib/pjax/lib/proto/attach-link.js","raw":"var on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar linkAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  var attrValue = checkIfShouldAbort(el, event);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  // don’t do \"nothing\" if user try to reload the page by clicking the same link twice\n  if (\n    this.options.currentUrlFullReload &&\n    el.href === window.location.href.split(\"#\")[0]\n  ) {\n    el.setAttribute(attrState, \"reload\");\n    this.reload();\n    return;\n  }\n\n  el.setAttribute(attrState, \"load\");\n\n  options.triggerElement = el;\n  this.loadUrl(el.href, options);\n};\n\nfunction checkIfShouldAbort(el, event) {\n  // Don’t break browser special behavior on links (like page in new window)\n  if (\n    event.which > 1 ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey\n  ) {\n    return \"modifier\";\n  }\n\n  // we do test on href now to prevent unexpected behavior if for some reason\n  // user have href that can be dynamically updated\n\n  // Ignore external links.\n  if (\n    el.protocol !== window.location.protocol ||\n    el.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore anchors on the same page (keep native behavior)\n  if (\n    el.hash &&\n    el.href.replace(el.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (el.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"click\", function(event) {\n    linkAction.call(that, el, event);\n  });\n\n  on(\n    el,\n    \"keyup\",\n    function(event) {\n      if (event.keyCode === 13) {\n        linkAction.call(that, el, event);\n      }\n    }.bind(this)\n  );\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/proto/attach-link.js","layout":"false","title":"","comments":1,"_id":"clixi466o000s37jxbgtw3nzz","content":"var on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar linkAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  var attrValue = checkIfShouldAbort(el, event);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  // don’t do \"nothing\" if user try to reload the page by clicking the same link twice\n  if (\n    this.options.currentUrlFullReload &&\n    el.href === window.location.href.split(\"#\")[0]\n  ) {\n    el.setAttribute(attrState, \"reload\");\n    this.reload();\n    return;\n  }\n\n  el.setAttribute(attrState, \"load\");\n\n  options.triggerElement = el;\n  this.loadUrl(el.href, options);\n};\n\nfunction checkIfShouldAbort(el, event) {\n  // Don’t break browser special behavior on links (like page in new window)\n  if (\n    event.which > 1 ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey\n  ) {\n    return \"modifier\";\n  }\n\n  // we do test on href now to prevent unexpected behavior if for some reason\n  // user have href that can be dynamically updated\n\n  // Ignore external links.\n  if (\n    el.protocol !== window.location.protocol ||\n    el.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore anchors on the same page (keep native behavior)\n  if (\n    el.hash &&\n    el.href.replace(el.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (el.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"click\", function(event) {\n    linkAction.call(that, el, event);\n  });\n\n  on(\n    el,\n    \"keyup\",\n    function(event) {\n      if (event.keyCode === 13) {\n        linkAction.call(that, el, event);\n      }\n    }.bind(this)\n  );\n};\n","site":{"data":{}},"length":1725,"excerpt":"","more":"var on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar linkAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  var attrValue = checkIfShouldAbort(el, event);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  // don’t do \"nothing\" if user try to reload the page by clicking the same link twice\n  if (\n    this.options.currentUrlFullReload &&\n    el.href === window.location.href.split(\"#\")[0]\n  ) {\n    el.setAttribute(attrState, \"reload\");\n    this.reload();\n    return;\n  }\n\n  el.setAttribute(attrState, \"load\");\n\n  options.triggerElement = el;\n  this.loadUrl(el.href, options);\n};\n\nfunction checkIfShouldAbort(el, event) {\n  // Don’t break browser special behavior on links (like page in new window)\n  if (\n    event.which > 1 ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey\n  ) {\n    return \"modifier\";\n  }\n\n  // we do test on href now to prevent unexpected behavior if for some reason\n  // user have href that can be dynamically updated\n\n  // Ignore external links.\n  if (\n    el.protocol !== window.location.protocol ||\n    el.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore anchors on the same page (keep native behavior)\n  if (\n    el.hash &&\n    el.href.replace(el.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (el.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"click\", function(event) {\n    linkAction.call(that, el, event);\n  });\n\n  on(\n    el,\n    \"keyup\",\n    function(event) {\n      if (event.keyCode === 13) {\n        linkAction.call(that, el, event);\n      }\n    }.bind(this)\n  );\n};\n"},{"_content":"module.exports = function() {\n  if (this.options.debug && console) {\n    if (typeof console.log === \"function\") {\n      console.log.apply(console, arguments);\n    }\n    // IE is weird\n    else if (console.log) {\n      console.log(arguments);\n    }\n  }\n};\n","source":"lib/pjax/lib/proto/log.js","raw":"module.exports = function() {\n  if (this.options.debug && console) {\n    if (typeof console.log === \"function\") {\n      console.log.apply(console, arguments);\n    }\n    // IE is weird\n    else if (console.log) {\n      console.log(arguments);\n    }\n  }\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/proto/log.js","layout":"false","title":"","comments":1,"_id":"clixi466p000t37jxdi4g4ff2","content":"module.exports = function() {\n  if (this.options.debug && console) {\n    if (typeof console.log === \"function\") {\n      console.log.apply(console, arguments);\n    }\n    // IE is weird\n    else if (console.log) {\n      console.log(arguments);\n    }\n  }\n};\n","site":{"data":{}},"length":189,"excerpt":"","more":"module.exports = function() {\n  if (this.options.debug && console) {\n    if (typeof console.log === \"function\") {\n      console.log.apply(console, arguments);\n    }\n    // IE is weird\n    else if (console.log) {\n      console.log(arguments);\n    }\n  }\n};\n"},{"_content":"var clone = require(\"../util/clone\");\nvar newUid = require(\"../uniqueid\");\nvar trigger = require(\"../events/trigger\");\n\nmodule.exports = function(responseText, request, href, options) {\n  options = clone(options || this.options);\n  options.request = request;\n\n  // Fail if unable to load HTML via AJAX\n  if (responseText === false) {\n    trigger(document, \"pjax:complete pjax:error\", options);\n\n    return;\n  }\n\n  // push scroll position to history\n  var currentState = window.history.state || {};\n  window.history.replaceState(\n    {\n      url: currentState.url || window.location.href,\n      title: currentState.title || document.title,\n      uid: currentState.uid || newUid(),\n      scrollPos: [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop\n      ]\n    },\n    document.title,\n    window.location.href\n  );\n\n  // Check for redirects\n  var oldHref = href;\n  if (request.responseURL) {\n    if (href !== request.responseURL) {\n      href = request.responseURL;\n    }\n  } else if (request.getResponseHeader(\"X-PJAX-URL\")) {\n    href = request.getResponseHeader(\"X-PJAX-URL\");\n  } else if (request.getResponseHeader(\"X-XHR-Redirected-To\")) {\n    href = request.getResponseHeader(\"X-XHR-Redirected-To\");\n  }\n\n  // Add back the hash if it was removed\n  var a = document.createElement(\"a\");\n  a.href = oldHref;\n  var oldHash = a.hash;\n  a.href = href;\n  if (oldHash && !a.hash) {\n    a.hash = oldHash;\n    href = a.href;\n  }\n\n  this.state.href = href;\n  this.state.options = options;\n\n  try {\n    this.loadContent(responseText, options);\n  } catch (e) {\n    trigger(document, \"pjax:error\", options);\n\n    if (!this.options.debug) {\n      if (console && console.error) {\n        console.error(\"Pjax switch fail: \", e);\n      }\n      return this.latestChance(href);\n    } else {\n      throw e;\n    }\n  }\n};\n","source":"lib/pjax/lib/proto/handle-response.js","raw":"var clone = require(\"../util/clone\");\nvar newUid = require(\"../uniqueid\");\nvar trigger = require(\"../events/trigger\");\n\nmodule.exports = function(responseText, request, href, options) {\n  options = clone(options || this.options);\n  options.request = request;\n\n  // Fail if unable to load HTML via AJAX\n  if (responseText === false) {\n    trigger(document, \"pjax:complete pjax:error\", options);\n\n    return;\n  }\n\n  // push scroll position to history\n  var currentState = window.history.state || {};\n  window.history.replaceState(\n    {\n      url: currentState.url || window.location.href,\n      title: currentState.title || document.title,\n      uid: currentState.uid || newUid(),\n      scrollPos: [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop\n      ]\n    },\n    document.title,\n    window.location.href\n  );\n\n  // Check for redirects\n  var oldHref = href;\n  if (request.responseURL) {\n    if (href !== request.responseURL) {\n      href = request.responseURL;\n    }\n  } else if (request.getResponseHeader(\"X-PJAX-URL\")) {\n    href = request.getResponseHeader(\"X-PJAX-URL\");\n  } else if (request.getResponseHeader(\"X-XHR-Redirected-To\")) {\n    href = request.getResponseHeader(\"X-XHR-Redirected-To\");\n  }\n\n  // Add back the hash if it was removed\n  var a = document.createElement(\"a\");\n  a.href = oldHref;\n  var oldHash = a.hash;\n  a.href = href;\n  if (oldHash && !a.hash) {\n    a.hash = oldHash;\n    href = a.href;\n  }\n\n  this.state.href = href;\n  this.state.options = options;\n\n  try {\n    this.loadContent(responseText, options);\n  } catch (e) {\n    trigger(document, \"pjax:error\", options);\n\n    if (!this.options.debug) {\n      if (console && console.error) {\n        console.error(\"Pjax switch fail: \", e);\n      }\n      return this.latestChance(href);\n    } else {\n      throw e;\n    }\n  }\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/proto/handle-response.js","layout":"false","title":"","comments":1,"_id":"clixi466t000u37jx8s7sg6le","content":"var clone = require(\"../util/clone\");\nvar newUid = require(\"../uniqueid\");\nvar trigger = require(\"../events/trigger\");\n\nmodule.exports = function(responseText, request, href, options) {\n  options = clone(options || this.options);\n  options.request = request;\n\n  // Fail if unable to load HTML via AJAX\n  if (responseText === false) {\n    trigger(document, \"pjax:complete pjax:error\", options);\n\n    return;\n  }\n\n  // push scroll position to history\n  var currentState = window.history.state || {};\n  window.history.replaceState(\n    {\n      url: currentState.url || window.location.href,\n      title: currentState.title || document.title,\n      uid: currentState.uid || newUid(),\n      scrollPos: [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop\n      ]\n    },\n    document.title,\n    window.location.href\n  );\n\n  // Check for redirects\n  var oldHref = href;\n  if (request.responseURL) {\n    if (href !== request.responseURL) {\n      href = request.responseURL;\n    }\n  } else if (request.getResponseHeader(\"X-PJAX-URL\")) {\n    href = request.getResponseHeader(\"X-PJAX-URL\");\n  } else if (request.getResponseHeader(\"X-XHR-Redirected-To\")) {\n    href = request.getResponseHeader(\"X-XHR-Redirected-To\");\n  }\n\n  // Add back the hash if it was removed\n  var a = document.createElement(\"a\");\n  a.href = oldHref;\n  var oldHash = a.hash;\n  a.href = href;\n  if (oldHash && !a.hash) {\n    a.hash = oldHash;\n    href = a.href;\n  }\n\n  this.state.href = href;\n  this.state.options = options;\n\n  try {\n    this.loadContent(responseText, options);\n  } catch (e) {\n    trigger(document, \"pjax:error\", options);\n\n    if (!this.options.debug) {\n      if (console && console.error) {\n        console.error(\"Pjax switch fail: \", e);\n      }\n      return this.latestChance(href);\n    } else {\n      throw e;\n    }\n  }\n};\n","site":{"data":{}},"length":1483,"excerpt":"","more":"var clone = require(\"../util/clone\");\nvar newUid = require(\"../uniqueid\");\nvar trigger = require(\"../events/trigger\");\n\nmodule.exports = function(responseText, request, href, options) {\n  options = clone(options || this.options);\n  options.request = request;\n\n  // Fail if unable to load HTML via AJAX\n  if (responseText === false) {\n    trigger(document, \"pjax:complete pjax:error\", options);\n\n    return;\n  }\n\n  // push scroll position to history\n  var currentState = window.history.state || {};\n  window.history.replaceState(\n    {\n      url: currentState.url || window.location.href,\n      title: currentState.title || document.title,\n      uid: currentState.uid || newUid(),\n      scrollPos: [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop\n      ]\n    },\n    document.title,\n    window.location.href\n  );\n\n  // Check for redirects\n  var oldHref = href;\n  if (request.responseURL) {\n    if (href !== request.responseURL) {\n      href = request.responseURL;\n    }\n  } else if (request.getResponseHeader(\"X-PJAX-URL\")) {\n    href = request.getResponseHeader(\"X-PJAX-URL\");\n  } else if (request.getResponseHeader(\"X-XHR-Redirected-To\")) {\n    href = request.getResponseHeader(\"X-XHR-Redirected-To\");\n  }\n\n  // Add back the hash if it was removed\n  var a = document.createElement(\"a\");\n  a.href = oldHref;\n  var oldHash = a.hash;\n  a.href = href;\n  if (oldHash && !a.hash) {\n    a.hash = oldHash;\n    href = a.href;\n  }\n\n  this.state.href = href;\n  this.state.options = options;\n\n  try {\n    this.loadContent(responseText, options);\n  } catch (e) {\n    trigger(document, \"pjax:error\", options);\n\n    if (!this.options.debug) {\n      if (console && console.error) {\n        console.error(\"Pjax switch fail: \", e);\n      }\n      return this.latestChance(href);\n    } else {\n      throw e;\n    }\n  }\n};\n"},{"_content":"var attrState = \"data-pjax-state\";\n\nmodule.exports = function(el) {\n  switch (el.tagName.toLowerCase()) {\n    case \"a\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachLink(el);\n      }\n      break;\n\n    case \"form\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachForm(el);\n      }\n      break;\n\n    default:\n      throw \"Pjax can only be applied on <a> or <form> submit\";\n  }\n};\n","source":"lib/pjax/lib/proto/parse-element.js","raw":"var attrState = \"data-pjax-state\";\n\nmodule.exports = function(el) {\n  switch (el.tagName.toLowerCase()) {\n    case \"a\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachLink(el);\n      }\n      break;\n\n    case \"form\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachForm(el);\n      }\n      break;\n\n    default:\n      throw \"Pjax can only be applied on <a> or <form> submit\";\n  }\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/proto/parse-element.js","layout":"false","title":"","comments":1,"_id":"clixi466t000v37jx299icmac","content":"var attrState = \"data-pjax-state\";\n\nmodule.exports = function(el) {\n  switch (el.tagName.toLowerCase()) {\n    case \"a\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachLink(el);\n      }\n      break;\n\n    case \"form\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachForm(el);\n      }\n      break;\n\n    default:\n      throw \"Pjax can only be applied on <a> or <form> submit\";\n  }\n};\n","site":{"data":{}},"length":378,"excerpt":"","more":"var attrState = \"data-pjax-state\";\n\nmodule.exports = function(el) {\n  switch (el.tagName.toLowerCase()) {\n    case \"a\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachLink(el);\n      }\n      break;\n\n    case \"form\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachForm(el);\n      }\n      break;\n\n    default:\n      throw \"Pjax can only be applied on <a> or <form> submit\";\n  }\n};\n"},{"_content":"module.exports = function(obj) {\n  /* istanbul ignore if */\n  if (null === obj || \"object\" !== typeof obj) {\n    return obj;\n  }\n  var copy = obj.constructor();\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) {\n      copy[attr] = obj[attr];\n    }\n  }\n  return copy;\n};\n","source":"lib/pjax/lib/util/clone.js","raw":"module.exports = function(obj) {\n  /* istanbul ignore if */\n  if (null === obj || \"object\" !== typeof obj) {\n    return obj;\n  }\n  var copy = obj.constructor();\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) {\n      copy[attr] = obj[attr];\n    }\n  }\n  return copy;\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/util/clone.js","layout":"false","title":"","comments":1,"_id":"clixi466u000w37jxhsvrav36","content":"module.exports = function(obj) {\n  /* istanbul ignore if */\n  if (null === obj || \"object\" !== typeof obj) {\n    return obj;\n  }\n  var copy = obj.constructor();\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) {\n      copy[attr] = obj[attr];\n    }\n  }\n  return copy;\n};\n","site":{"data":{}},"length":206,"excerpt":"","more":"module.exports = function(obj) {\n  /* istanbul ignore if */\n  if (null === obj || \"object\" !== typeof obj) {\n    return obj;\n  }\n  var copy = obj.constructor();\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) {\n      copy[attr] = obj[attr];\n    }\n  }\n  return copy;\n};\n"},{"_content":"module.exports = function contains(doc, selectors, el) {\n  for (var i = 0; i < selectors.length; i++) {\n    var selectedEls = doc.querySelectorAll(selectors[i]);\n    for (var j = 0; j < selectedEls.length; j++) {\n      if (selectedEls[j].contains(el)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","source":"lib/pjax/lib/util/contains.js","raw":"module.exports = function contains(doc, selectors, el) {\n  for (var i = 0; i < selectors.length; i++) {\n    var selectedEls = doc.querySelectorAll(selectors[i]);\n    for (var j = 0; j < selectedEls.length; j++) {\n      if (selectedEls[j].contains(el)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/util/contains.js","layout":"false","title":"","comments":1,"_id":"clixi466v000x37jx41qo6a5f","content":"module.exports = function contains(doc, selectors, el) {\n  for (var i = 0; i < selectors.length; i++) {\n    var selectedEls = doc.querySelectorAll(selectors[i]);\n    for (var j = 0; j < selectedEls.length; j++) {\n      if (selectedEls[j].contains(el)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","site":{"data":{}},"length":232,"excerpt":"","more":"module.exports = function contains(doc, selectors, el) {\n  for (var i = 0; i < selectors.length; i++) {\n    var selectedEls = doc.querySelectorAll(selectors[i]);\n    for (var j = 0; j < selectedEls.length; j++) {\n      if (selectedEls[j].contains(el)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n"},{"_content":"module.exports = function(target) {\n  if (target == null) {\n    return null;\n  }\n\n  var to = Object(target);\n\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    if (source != null) {\n      for (var key in source) {\n        // Avoid bugs when hasOwnProperty is shadowed\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          to[key] = source[key];\n        }\n      }\n    }\n  }\n  return to;\n};\n","source":"lib/pjax/lib/util/extend.js","raw":"module.exports = function(target) {\n  if (target == null) {\n    return null;\n  }\n\n  var to = Object(target);\n\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    if (source != null) {\n      for (var key in source) {\n        // Avoid bugs when hasOwnProperty is shadowed\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          to[key] = source[key];\n        }\n      }\n    }\n  }\n  return to;\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/util/extend.js","layout":"false","title":"","comments":1,"_id":"clixi466v000y37jx0pjyhzeb","content":"module.exports = function(target) {\n  if (target == null) {\n    return null;\n  }\n\n  var to = Object(target);\n\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    if (source != null) {\n      for (var key in source) {\n        // Avoid bugs when hasOwnProperty is shadowed\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          to[key] = source[key];\n        }\n      }\n    }\n  }\n  return to;\n};\n","site":{"data":{}},"length":304,"excerpt":"","more":"module.exports = function(target) {\n  if (target == null) {\n    return null;\n  }\n\n  var to = Object(target);\n\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    if (source != null) {\n      for (var key in source) {\n        // Avoid bugs when hasOwnProperty is shadowed\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          to[key] = source[key];\n        }\n      }\n    }\n  }\n  return to;\n};\n"},{"_content":"module.exports = function() {};\n","source":"lib/pjax/lib/util/noop.js","raw":"module.exports = function() {};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/util/noop.js","layout":"false","title":"","comments":1,"_id":"clixi466w000z37jxbrjxe2vv","content":"module.exports = function() {};\n","site":{"data":{}},"length":28,"excerpt":"","more":"module.exports = function() {};\n"},{"_content":"module.exports = function(uri, key, value) {\n  var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n  var separator = uri.indexOf(\"?\") !== -1 ? \"&\" : \"?\";\n  if (uri.match(re)) {\n    return uri.replace(re, \"$1\" + key + \"=\" + value + \"$2\");\n  } else {\n    return uri + separator + key + \"=\" + value;\n  }\n};\n","source":"lib/pjax/lib/util/update-query-string.js","raw":"module.exports = function(uri, key, value) {\n  var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n  var separator = uri.indexOf(\"?\") !== -1 ? \"&\" : \"?\";\n  if (uri.match(re)) {\n    return uri.replace(re, \"$1\" + key + \"=\" + value + \"$2\");\n  } else {\n    return uri + separator + key + \"=\" + value;\n  }\n};\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/lib/util/update-query-string.js","layout":"false","title":"","comments":1,"_id":"clixi466w001037jx33t59uqk","content":"module.exports = function(uri, key, value) {\n  var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n  var separator = uri.indexOf(\"?\") !== -1 ? \"&\" : \"?\";\n  if (uri.match(re)) {\n    return uri.replace(re, \"$1\" + key + \"=\" + value + \"$2\");\n  } else {\n    return uri + separator + key + \"=\" + value;\n  }\n};\n","site":{"data":{}},"length":235,"excerpt":"","more":"module.exports = function(uri, key, value) {\n  var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n  var separator = uri.indexOf(\"?\") !== -1 ? \"&\" : \"?\";\n  if (uri.match(re)) {\n    return uri.replace(re, \"$1\" + key + \"=\" + value + \"$2\");\n  } else {\n    return uri + separator + key + \"=\" + value;\n  }\n};\n"},{"_content":"var tape = require(\"tape\");\n\nvar abortRequest = require(\"../../lib/abort-request.js\");\nvar sendRequest = require(\"../../lib/send-request.js\");\n\n// Polyfill responseURL property into XMLHttpRequest if it doesn't exist,\n// just for the purposes of this test\n// This polyfill is not complete; it won't show the updated location if a\n// redirection occurred, but it's fine for our purposes.\nif (!(\"responseURL\" in XMLHttpRequest.prototype)) {\n  var nativeOpen = XMLHttpRequest.prototype.open;\n  XMLHttpRequest.prototype.open = function(method, url) {\n    this.responseURL = url;\n    return nativeOpen.apply(this, arguments);\n  };\n}\n\ntape(\"test aborting xhr request\", function(t) {\n  var requestCacheBust = sendRequest.bind({\n    options: {\n      cacheBust: true\n    }\n  });\n\n  t.test(\"- pending request is aborted\", function(t) {\n    var r = requestCacheBust(\"https://httpbin.org/delay/10\", {}, function() {\n      t.fail(\"xhr was not aborted\");\n    });\n    t.equal(r.readyState, 1, \"xhr readyState is '1' (SENT)\");\n    abortRequest(r);\n    t.equal(r.readyState, 0, \"xhr readyState is '0' (ABORTED)\");\n    t.equal(r.status, 0, \"xhr HTTP status is '0' (ABORTED)\");\n    t.equal(r.responseText, \"\", \"xhr response is empty\");\n    t.end();\n  });\n  t.test(\"- request is not aborted if it has already completed\", function(t) {\n    var r = requestCacheBust(\"https://httpbin.org/get\", {}, function() {\n      abortRequest(r);\n      t.equal(r.readyState, 4, \"xhr readyState is '4' (DONE)\");\n      t.equal(r.status, 200, \"xhr HTTP status is '200' (OK)\");\n      t.end();\n    });\n  });\n  t.test(\"- request is not aborted if it is undefined\", function(t) {\n    var r;\n    try {\n      abortRequest(r);\n    } catch (e) {\n      t.fail(\"aborting an undefined request threw an error\");\n    }\n    t.equal(typeof r, \"undefined\", \"undefined xhr was ignored\");\n    t.end();\n  });\n  t.end();\n});\n","source":"lib/pjax/tests/lib/abort-request.js","raw":"var tape = require(\"tape\");\n\nvar abortRequest = require(\"../../lib/abort-request.js\");\nvar sendRequest = require(\"../../lib/send-request.js\");\n\n// Polyfill responseURL property into XMLHttpRequest if it doesn't exist,\n// just for the purposes of this test\n// This polyfill is not complete; it won't show the updated location if a\n// redirection occurred, but it's fine for our purposes.\nif (!(\"responseURL\" in XMLHttpRequest.prototype)) {\n  var nativeOpen = XMLHttpRequest.prototype.open;\n  XMLHttpRequest.prototype.open = function(method, url) {\n    this.responseURL = url;\n    return nativeOpen.apply(this, arguments);\n  };\n}\n\ntape(\"test aborting xhr request\", function(t) {\n  var requestCacheBust = sendRequest.bind({\n    options: {\n      cacheBust: true\n    }\n  });\n\n  t.test(\"- pending request is aborted\", function(t) {\n    var r = requestCacheBust(\"https://httpbin.org/delay/10\", {}, function() {\n      t.fail(\"xhr was not aborted\");\n    });\n    t.equal(r.readyState, 1, \"xhr readyState is '1' (SENT)\");\n    abortRequest(r);\n    t.equal(r.readyState, 0, \"xhr readyState is '0' (ABORTED)\");\n    t.equal(r.status, 0, \"xhr HTTP status is '0' (ABORTED)\");\n    t.equal(r.responseText, \"\", \"xhr response is empty\");\n    t.end();\n  });\n  t.test(\"- request is not aborted if it has already completed\", function(t) {\n    var r = requestCacheBust(\"https://httpbin.org/get\", {}, function() {\n      abortRequest(r);\n      t.equal(r.readyState, 4, \"xhr readyState is '4' (DONE)\");\n      t.equal(r.status, 200, \"xhr HTTP status is '200' (OK)\");\n      t.end();\n    });\n  });\n  t.test(\"- request is not aborted if it is undefined\", function(t) {\n    var r;\n    try {\n      abortRequest(r);\n    } catch (e) {\n      t.fail(\"aborting an undefined request threw an error\");\n    }\n    t.equal(typeof r, \"undefined\", \"undefined xhr was ignored\");\n    t.end();\n  });\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/abort-request.js","layout":"false","title":"","comments":1,"_id":"clixi466x001137jxgjembxve","content":"var tape = require(\"tape\");\n\nvar abortRequest = require(\"../../lib/abort-request.js\");\nvar sendRequest = require(\"../../lib/send-request.js\");\n\n// Polyfill responseURL property into XMLHttpRequest if it doesn't exist,\n// just for the purposes of this test\n// This polyfill is not complete; it won't show the updated location if a\n// redirection occurred, but it's fine for our purposes.\nif (!(\"responseURL\" in XMLHttpRequest.prototype)) {\n  var nativeOpen = XMLHttpRequest.prototype.open;\n  XMLHttpRequest.prototype.open = function(method, url) {\n    this.responseURL = url;\n    return nativeOpen.apply(this, arguments);\n  };\n}\n\ntape(\"test aborting xhr request\", function(t) {\n  var requestCacheBust = sendRequest.bind({\n    options: {\n      cacheBust: true\n    }\n  });\n\n  t.test(\"- pending request is aborted\", function(t) {\n    var r = requestCacheBust(\"https://httpbin.org/delay/10\", {}, function() {\n      t.fail(\"xhr was not aborted\");\n    });\n    t.equal(r.readyState, 1, \"xhr readyState is '1' (SENT)\");\n    abortRequest(r);\n    t.equal(r.readyState, 0, \"xhr readyState is '0' (ABORTED)\");\n    t.equal(r.status, 0, \"xhr HTTP status is '0' (ABORTED)\");\n    t.equal(r.responseText, \"\", \"xhr response is empty\");\n    t.end();\n  });\n  t.test(\"- request is not aborted if it has already completed\", function(t) {\n    var r = requestCacheBust(\"https://httpbin.org/get\", {}, function() {\n      abortRequest(r);\n      t.equal(r.readyState, 4, \"xhr readyState is '4' (DONE)\");\n      t.equal(r.status, 200, \"xhr HTTP status is '200' (OK)\");\n      t.end();\n    });\n  });\n  t.test(\"- request is not aborted if it is undefined\", function(t) {\n    var r;\n    try {\n      abortRequest(r);\n    } catch (e) {\n      t.fail(\"aborting an undefined request threw an error\");\n    }\n    t.equal(typeof r, \"undefined\", \"undefined xhr was ignored\");\n    t.end();\n  });\n  t.end();\n});\n","site":{"data":{}},"length":1492,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar abortRequest = require(\"../../lib/abort-request.js\");\nvar sendRequest = require(\"../../lib/send-request.js\");\n\n// Polyfill responseURL property into XMLHttpRequest if it doesn't exist,\n// just for the purposes of this test\n// This polyfill is not complete; it won't show the updated location if a\n// redirection occurred, but it's fine for our purposes.\nif (!(\"responseURL\" in XMLHttpRequest.prototype)) {\n  var nativeOpen = XMLHttpRequest.prototype.open;\n  XMLHttpRequest.prototype.open = function(method, url) {\n    this.responseURL = url;\n    return nativeOpen.apply(this, arguments);\n  };\n}\n\ntape(\"test aborting xhr request\", function(t) {\n  var requestCacheBust = sendRequest.bind({\n    options: {\n      cacheBust: true\n    }\n  });\n\n  t.test(\"- pending request is aborted\", function(t) {\n    var r = requestCacheBust(\"https://httpbin.org/delay/10\", {}, function() {\n      t.fail(\"xhr was not aborted\");\n    });\n    t.equal(r.readyState, 1, \"xhr readyState is '1' (SENT)\");\n    abortRequest(r);\n    t.equal(r.readyState, 0, \"xhr readyState is '0' (ABORTED)\");\n    t.equal(r.status, 0, \"xhr HTTP status is '0' (ABORTED)\");\n    t.equal(r.responseText, \"\", \"xhr response is empty\");\n    t.end();\n  });\n  t.test(\"- request is not aborted if it has already completed\", function(t) {\n    var r = requestCacheBust(\"https://httpbin.org/get\", {}, function() {\n      abortRequest(r);\n      t.equal(r.readyState, 4, \"xhr readyState is '4' (DONE)\");\n      t.equal(r.status, 200, \"xhr HTTP status is '200' (OK)\");\n      t.end();\n    });\n  });\n  t.test(\"- request is not aborted if it is undefined\", function(t) {\n    var r;\n    try {\n      abortRequest(r);\n    } catch (e) {\n      t.fail(\"aborting an undefined request threw an error\");\n    }\n    t.equal(typeof r, \"undefined\", \"undefined xhr was ignored\");\n    t.end();\n  });\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar evalScript = require(\"../../lib/eval-script\");\n\ntape(\"test evalScript method\", function(t) {\n  document.body.className = \"\";\n\n  var script = document.createElement(\"script\");\n  script.innerHTML = \"document.body.className = 'executed'\";\n\n  t.equal(document.body.className, \"\", \"script hasn't been executed yet\");\n\n  evalScript(script);\n  t.equal(\n    document.body.className,\n    \"executed\",\n    \"script has been properly executed\"\n  );\n\n  script.innerHTML = \"document.write('failure')\";\n  var bodyText = \"document.write hasn't been executed\";\n  document.body.text = bodyText;\n  evalScript(script);\n  t.equal(document.body.text, bodyText, \"document.write hasn't been executed\");\n\n  t.end();\n});\n\ntape(\n  \"evalScript should not throw an error if the script removed itself\",\n  function(t) {\n    var script = document.createElement(\"script\");\n    script.id = \"myScript\";\n    script.innerHTML =\n      \"const script = document.querySelector('#myScript');\" +\n      \"script.parentNode.removeChild(script);\";\n\n    try {\n      evalScript(script);\n\n      t.pass(\"Missing script tested successfully\");\n    } catch (e) {\n      console.error(e);\n      t.fail(\"Attempted to remove missing script\");\n    }\n\n    t.end();\n  }\n);\n","source":"lib/pjax/tests/lib/eval-scripts.js","raw":"var tape = require(\"tape\");\n\nvar evalScript = require(\"../../lib/eval-script\");\n\ntape(\"test evalScript method\", function(t) {\n  document.body.className = \"\";\n\n  var script = document.createElement(\"script\");\n  script.innerHTML = \"document.body.className = 'executed'\";\n\n  t.equal(document.body.className, \"\", \"script hasn't been executed yet\");\n\n  evalScript(script);\n  t.equal(\n    document.body.className,\n    \"executed\",\n    \"script has been properly executed\"\n  );\n\n  script.innerHTML = \"document.write('failure')\";\n  var bodyText = \"document.write hasn't been executed\";\n  document.body.text = bodyText;\n  evalScript(script);\n  t.equal(document.body.text, bodyText, \"document.write hasn't been executed\");\n\n  t.end();\n});\n\ntape(\n  \"evalScript should not throw an error if the script removed itself\",\n  function(t) {\n    var script = document.createElement(\"script\");\n    script.id = \"myScript\";\n    script.innerHTML =\n      \"const script = document.querySelector('#myScript');\" +\n      \"script.parentNode.removeChild(script);\";\n\n    try {\n      evalScript(script);\n\n      t.pass(\"Missing script tested successfully\");\n    } catch (e) {\n      console.error(e);\n      t.fail(\"Attempted to remove missing script\");\n    }\n\n    t.end();\n  }\n);\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/eval-scripts.js","layout":"false","title":"","comments":1,"_id":"clixi466x001237jx8xfs75t9","content":"var tape = require(\"tape\");\n\nvar evalScript = require(\"../../lib/eval-script\");\n\ntape(\"test evalScript method\", function(t) {\n  document.body.className = \"\";\n\n  var script = document.createElement(\"script\");\n  script.innerHTML = \"document.body.className = 'executed'\";\n\n  t.equal(document.body.className, \"\", \"script hasn't been executed yet\");\n\n  evalScript(script);\n  t.equal(\n    document.body.className,\n    \"executed\",\n    \"script has been properly executed\"\n  );\n\n  script.innerHTML = \"document.write('failure')\";\n  var bodyText = \"document.write hasn't been executed\";\n  document.body.text = bodyText;\n  evalScript(script);\n  t.equal(document.body.text, bodyText, \"document.write hasn't been executed\");\n\n  t.end();\n});\n\ntape(\n  \"evalScript should not throw an error if the script removed itself\",\n  function(t) {\n    var script = document.createElement(\"script\");\n    script.id = \"myScript\";\n    script.innerHTML =\n      \"const script = document.querySelector('#myScript');\" +\n      \"script.parentNode.removeChild(script);\";\n\n    try {\n      evalScript(script);\n\n      t.pass(\"Missing script tested successfully\");\n    } catch (e) {\n      console.error(e);\n      t.fail(\"Attempted to remove missing script\");\n    }\n\n    t.end();\n  }\n);\n","site":{"data":{}},"length":1011,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar evalScript = require(\"../../lib/eval-script\");\n\ntape(\"test evalScript method\", function(t) {\n  document.body.className = \"\";\n\n  var script = document.createElement(\"script\");\n  script.innerHTML = \"document.body.className = 'executed'\";\n\n  t.equal(document.body.className, \"\", \"script hasn't been executed yet\");\n\n  evalScript(script);\n  t.equal(\n    document.body.className,\n    \"executed\",\n    \"script has been properly executed\"\n  );\n\n  script.innerHTML = \"document.write('failure')\";\n  var bodyText = \"document.write hasn't been executed\";\n  document.body.text = bodyText;\n  evalScript(script);\n  t.equal(document.body.text, bodyText, \"document.write hasn't been executed\");\n\n  t.end();\n});\n\ntape(\n  \"evalScript should not throw an error if the script removed itself\",\n  function(t) {\n    var script = document.createElement(\"script\");\n    script.id = \"myScript\";\n    script.innerHTML =\n      \"const script = document.querySelector('#myScript');\" +\n      \"script.parentNode.removeChild(script);\";\n\n    try {\n      evalScript(script);\n\n      t.pass(\"Missing script tested successfully\");\n    } catch (e) {\n      console.error(e);\n      t.fail(\"Attempted to remove missing script\");\n    }\n\n    t.end();\n  }\n);\n"},{"_content":"var tape = require(\"tape\");\n\nvar on = require(\"../../lib/events/on\");\nvar off = require(\"../../lib/events/off\");\nvar trigger = require(\"../../lib/events/trigger\");\n\nvar el = document.createElement(\"div\");\nvar el2 = document.createElement(\"span\");\nvar els = [el, el2];\n\nvar classCb = function() {\n  this.className += \"on\";\n};\nvar attrCb = function() {\n  this.setAttribute(\"data-state\", this.getAttribute(\"data-state\") + \"ON\");\n};\n\ntape(\"test events on/off/trigger for one element, one event\", function(t) {\n  el.className = \"\";\n  on(el, \"click\", classCb);\n  trigger(el, \"click\");\n  t.equal(el.className, \"on\", \"attached callback has been fired properly\");\n\n  el.className = \"off\";\n  off(el, \"click\", classCb);\n  trigger(el, \"click\");\n  t.equal(el.className, \"off\", \"triggered event didn't fire detached callback\");\n\n  t.end();\n});\n\ntape(\"test events on/off/trigger for multiple elements, one event\", function(\n  t\n) {\n  el.className = \"\";\n  el2.className = \"\";\n\n  on(els, \"click\", classCb);\n  trigger(els, \"click\");\n  t.equal(\n    el.className,\n    \"on\",\n    \"attached callback has been fired properly on the first element\"\n  );\n  t.equal(\n    el2.className,\n    \"on\",\n    \"attached callback has been fired properly on the second element\"\n  );\n\n  el.className = \"off\";\n  el2.className = \"off\";\n  off(els, \"click\", classCb);\n  trigger(els, \"click\");\n  t.equal(\n    el.className,\n    \"off\",\n    \"triggered event didn't fire detached callback on the first element\"\n  );\n  t.equal(\n    el2.className,\n    \"off\",\n    \"triggered event didn't fire detached callback on the second element\"\n  );\n\n  t.end();\n});\n\ntape(\"test events on/off/trigger for one element, multiple events\", function(\n  t\n) {\n  el.className = \"\";\n  on(el, \"click mouseover\", classCb);\n  trigger(el, \"click mouseover\");\n  t.equal(el.className, \"onon\", \"attached callbacks have been fired properly\");\n\n  el.className = \"off\";\n  off(el, \"click mouseover\", classCb);\n  trigger(el, \"click mouseover\");\n  t.equal(\n    el.className,\n    \"off\",\n    \"triggered events didn't fire detached callback\"\n  );\n\n  t.end();\n});\n\ntape(\n  \"test events on/off/trigger for multiple elements, multiple events\",\n  function(t) {\n    el.className = \"\";\n    el2.className = \"\";\n    el.setAttribute(\"data-state\", \"\");\n    el2.setAttribute(\"data-state\", \"\");\n    on(els, \"click mouseover\", classCb);\n    on(els, \"resize scroll\", attrCb);\n    trigger(els, \"click mouseover resize scroll\");\n    t.equal(\n      el.className,\n      \"onon\",\n      \"attached callbacks has been fired properly on the first element\"\n    );\n    t.equal(\n      el.getAttribute(\"data-state\"),\n      \"ONON\",\n      \"attached callbacks has been fired properly on the first element\"\n    );\n    t.equal(\n      el2.className,\n      \"onon\",\n      \"attached callbacks has been fired properly on the second element\"\n    );\n    t.equal(\n      el2.getAttribute(\"data-state\"),\n      \"ONON\",\n      \"attached callbacks has been fired properly on the second element\"\n    );\n\n    el.className = \"off\";\n    el2.className = \"off\";\n    el.setAttribute(\"data-state\", \"off\");\n    el2.setAttribute(\"data-state\", \"off\");\n    off(els, \"click mouseover\", classCb);\n    off(els, \"resize scroll\", attrCb);\n    trigger(els, \"click mouseover resize scroll\");\n    t.equal(\n      el.className,\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n    t.equal(\n      el.getAttribute(\"data-state\"),\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n    t.equal(\n      el2.className,\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n    t.equal(\n      el2.getAttribute(\"data-state\"),\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n\n    t.end();\n  }\n);\n\ntape(\"test events on top level elements\", function(t) {\n  var el = document;\n\n  el.className = \"\";\n  on(el, \"click\", classCb);\n  trigger(el, \"click\");\n  t.equal(\n    el.className,\n    \"on\",\n    \"attached callback has been fired properly on document\"\n  );\n\n  el = window;\n\n  el.className = \"\";\n  // With jsdom, the default this is global, not window, so we need to explicitly bind to window.\n  on(el, \"click\", classCb.bind(window));\n  trigger(el, \"click\");\n  t.equal(\n    el.className,\n    \"on\",\n    \"attached callback has been fired properly on window\"\n  );\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/events.js","raw":"var tape = require(\"tape\");\n\nvar on = require(\"../../lib/events/on\");\nvar off = require(\"../../lib/events/off\");\nvar trigger = require(\"../../lib/events/trigger\");\n\nvar el = document.createElement(\"div\");\nvar el2 = document.createElement(\"span\");\nvar els = [el, el2];\n\nvar classCb = function() {\n  this.className += \"on\";\n};\nvar attrCb = function() {\n  this.setAttribute(\"data-state\", this.getAttribute(\"data-state\") + \"ON\");\n};\n\ntape(\"test events on/off/trigger for one element, one event\", function(t) {\n  el.className = \"\";\n  on(el, \"click\", classCb);\n  trigger(el, \"click\");\n  t.equal(el.className, \"on\", \"attached callback has been fired properly\");\n\n  el.className = \"off\";\n  off(el, \"click\", classCb);\n  trigger(el, \"click\");\n  t.equal(el.className, \"off\", \"triggered event didn't fire detached callback\");\n\n  t.end();\n});\n\ntape(\"test events on/off/trigger for multiple elements, one event\", function(\n  t\n) {\n  el.className = \"\";\n  el2.className = \"\";\n\n  on(els, \"click\", classCb);\n  trigger(els, \"click\");\n  t.equal(\n    el.className,\n    \"on\",\n    \"attached callback has been fired properly on the first element\"\n  );\n  t.equal(\n    el2.className,\n    \"on\",\n    \"attached callback has been fired properly on the second element\"\n  );\n\n  el.className = \"off\";\n  el2.className = \"off\";\n  off(els, \"click\", classCb);\n  trigger(els, \"click\");\n  t.equal(\n    el.className,\n    \"off\",\n    \"triggered event didn't fire detached callback on the first element\"\n  );\n  t.equal(\n    el2.className,\n    \"off\",\n    \"triggered event didn't fire detached callback on the second element\"\n  );\n\n  t.end();\n});\n\ntape(\"test events on/off/trigger for one element, multiple events\", function(\n  t\n) {\n  el.className = \"\";\n  on(el, \"click mouseover\", classCb);\n  trigger(el, \"click mouseover\");\n  t.equal(el.className, \"onon\", \"attached callbacks have been fired properly\");\n\n  el.className = \"off\";\n  off(el, \"click mouseover\", classCb);\n  trigger(el, \"click mouseover\");\n  t.equal(\n    el.className,\n    \"off\",\n    \"triggered events didn't fire detached callback\"\n  );\n\n  t.end();\n});\n\ntape(\n  \"test events on/off/trigger for multiple elements, multiple events\",\n  function(t) {\n    el.className = \"\";\n    el2.className = \"\";\n    el.setAttribute(\"data-state\", \"\");\n    el2.setAttribute(\"data-state\", \"\");\n    on(els, \"click mouseover\", classCb);\n    on(els, \"resize scroll\", attrCb);\n    trigger(els, \"click mouseover resize scroll\");\n    t.equal(\n      el.className,\n      \"onon\",\n      \"attached callbacks has been fired properly on the first element\"\n    );\n    t.equal(\n      el.getAttribute(\"data-state\"),\n      \"ONON\",\n      \"attached callbacks has been fired properly on the first element\"\n    );\n    t.equal(\n      el2.className,\n      \"onon\",\n      \"attached callbacks has been fired properly on the second element\"\n    );\n    t.equal(\n      el2.getAttribute(\"data-state\"),\n      \"ONON\",\n      \"attached callbacks has been fired properly on the second element\"\n    );\n\n    el.className = \"off\";\n    el2.className = \"off\";\n    el.setAttribute(\"data-state\", \"off\");\n    el2.setAttribute(\"data-state\", \"off\");\n    off(els, \"click mouseover\", classCb);\n    off(els, \"resize scroll\", attrCb);\n    trigger(els, \"click mouseover resize scroll\");\n    t.equal(\n      el.className,\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n    t.equal(\n      el.getAttribute(\"data-state\"),\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n    t.equal(\n      el2.className,\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n    t.equal(\n      el2.getAttribute(\"data-state\"),\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n\n    t.end();\n  }\n);\n\ntape(\"test events on top level elements\", function(t) {\n  var el = document;\n\n  el.className = \"\";\n  on(el, \"click\", classCb);\n  trigger(el, \"click\");\n  t.equal(\n    el.className,\n    \"on\",\n    \"attached callback has been fired properly on document\"\n  );\n\n  el = window;\n\n  el.className = \"\";\n  // With jsdom, the default this is global, not window, so we need to explicitly bind to window.\n  on(el, \"click\", classCb.bind(window));\n  trigger(el, \"click\");\n  t.equal(\n    el.className,\n    \"on\",\n    \"attached callback has been fired properly on window\"\n  );\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/events.js","layout":"false","title":"","comments":1,"_id":"clixi466y001337jxb28w5k0y","content":"var tape = require(\"tape\");\n\nvar on = require(\"../../lib/events/on\");\nvar off = require(\"../../lib/events/off\");\nvar trigger = require(\"../../lib/events/trigger\");\n\nvar el = document.createElement(\"div\");\nvar el2 = document.createElement(\"span\");\nvar els = [el, el2];\n\nvar classCb = function() {\n  this.className += \"on\";\n};\nvar attrCb = function() {\n  this.setAttribute(\"data-state\", this.getAttribute(\"data-state\") + \"ON\");\n};\n\ntape(\"test events on/off/trigger for one element, one event\", function(t) {\n  el.className = \"\";\n  on(el, \"click\", classCb);\n  trigger(el, \"click\");\n  t.equal(el.className, \"on\", \"attached callback has been fired properly\");\n\n  el.className = \"off\";\n  off(el, \"click\", classCb);\n  trigger(el, \"click\");\n  t.equal(el.className, \"off\", \"triggered event didn't fire detached callback\");\n\n  t.end();\n});\n\ntape(\"test events on/off/trigger for multiple elements, one event\", function(\n  t\n) {\n  el.className = \"\";\n  el2.className = \"\";\n\n  on(els, \"click\", classCb);\n  trigger(els, \"click\");\n  t.equal(\n    el.className,\n    \"on\",\n    \"attached callback has been fired properly on the first element\"\n  );\n  t.equal(\n    el2.className,\n    \"on\",\n    \"attached callback has been fired properly on the second element\"\n  );\n\n  el.className = \"off\";\n  el2.className = \"off\";\n  off(els, \"click\", classCb);\n  trigger(els, \"click\");\n  t.equal(\n    el.className,\n    \"off\",\n    \"triggered event didn't fire detached callback on the first element\"\n  );\n  t.equal(\n    el2.className,\n    \"off\",\n    \"triggered event didn't fire detached callback on the second element\"\n  );\n\n  t.end();\n});\n\ntape(\"test events on/off/trigger for one element, multiple events\", function(\n  t\n) {\n  el.className = \"\";\n  on(el, \"click mouseover\", classCb);\n  trigger(el, \"click mouseover\");\n  t.equal(el.className, \"onon\", \"attached callbacks have been fired properly\");\n\n  el.className = \"off\";\n  off(el, \"click mouseover\", classCb);\n  trigger(el, \"click mouseover\");\n  t.equal(\n    el.className,\n    \"off\",\n    \"triggered events didn't fire detached callback\"\n  );\n\n  t.end();\n});\n\ntape(\n  \"test events on/off/trigger for multiple elements, multiple events\",\n  function(t) {\n    el.className = \"\";\n    el2.className = \"\";\n    el.setAttribute(\"data-state\", \"\");\n    el2.setAttribute(\"data-state\", \"\");\n    on(els, \"click mouseover\", classCb);\n    on(els, \"resize scroll\", attrCb);\n    trigger(els, \"click mouseover resize scroll\");\n    t.equal(\n      el.className,\n      \"onon\",\n      \"attached callbacks has been fired properly on the first element\"\n    );\n    t.equal(\n      el.getAttribute(\"data-state\"),\n      \"ONON\",\n      \"attached callbacks has been fired properly on the first element\"\n    );\n    t.equal(\n      el2.className,\n      \"onon\",\n      \"attached callbacks has been fired properly on the second element\"\n    );\n    t.equal(\n      el2.getAttribute(\"data-state\"),\n      \"ONON\",\n      \"attached callbacks has been fired properly on the second element\"\n    );\n\n    el.className = \"off\";\n    el2.className = \"off\";\n    el.setAttribute(\"data-state\", \"off\");\n    el2.setAttribute(\"data-state\", \"off\");\n    off(els, \"click mouseover\", classCb);\n    off(els, \"resize scroll\", attrCb);\n    trigger(els, \"click mouseover resize scroll\");\n    t.equal(\n      el.className,\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n    t.equal(\n      el.getAttribute(\"data-state\"),\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n    t.equal(\n      el2.className,\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n    t.equal(\n      el2.getAttribute(\"data-state\"),\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n\n    t.end();\n  }\n);\n\ntape(\"test events on top level elements\", function(t) {\n  var el = document;\n\n  el.className = \"\";\n  on(el, \"click\", classCb);\n  trigger(el, \"click\");\n  t.equal(\n    el.className,\n    \"on\",\n    \"attached callback has been fired properly on document\"\n  );\n\n  el = window;\n\n  el.className = \"\";\n  // With jsdom, the default this is global, not window, so we need to explicitly bind to window.\n  on(el, \"click\", classCb.bind(window));\n  trigger(el, \"click\");\n  t.equal(\n    el.className,\n    \"on\",\n    \"attached callback has been fired properly on window\"\n  );\n\n  t.end();\n});\n","site":{"data":{}},"length":3419,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar on = require(\"../../lib/events/on\");\nvar off = require(\"../../lib/events/off\");\nvar trigger = require(\"../../lib/events/trigger\");\n\nvar el = document.createElement(\"div\");\nvar el2 = document.createElement(\"span\");\nvar els = [el, el2];\n\nvar classCb = function() {\n  this.className += \"on\";\n};\nvar attrCb = function() {\n  this.setAttribute(\"data-state\", this.getAttribute(\"data-state\") + \"ON\");\n};\n\ntape(\"test events on/off/trigger for one element, one event\", function(t) {\n  el.className = \"\";\n  on(el, \"click\", classCb);\n  trigger(el, \"click\");\n  t.equal(el.className, \"on\", \"attached callback has been fired properly\");\n\n  el.className = \"off\";\n  off(el, \"click\", classCb);\n  trigger(el, \"click\");\n  t.equal(el.className, \"off\", \"triggered event didn't fire detached callback\");\n\n  t.end();\n});\n\ntape(\"test events on/off/trigger for multiple elements, one event\", function(\n  t\n) {\n  el.className = \"\";\n  el2.className = \"\";\n\n  on(els, \"click\", classCb);\n  trigger(els, \"click\");\n  t.equal(\n    el.className,\n    \"on\",\n    \"attached callback has been fired properly on the first element\"\n  );\n  t.equal(\n    el2.className,\n    \"on\",\n    \"attached callback has been fired properly on the second element\"\n  );\n\n  el.className = \"off\";\n  el2.className = \"off\";\n  off(els, \"click\", classCb);\n  trigger(els, \"click\");\n  t.equal(\n    el.className,\n    \"off\",\n    \"triggered event didn't fire detached callback on the first element\"\n  );\n  t.equal(\n    el2.className,\n    \"off\",\n    \"triggered event didn't fire detached callback on the second element\"\n  );\n\n  t.end();\n});\n\ntape(\"test events on/off/trigger for one element, multiple events\", function(\n  t\n) {\n  el.className = \"\";\n  on(el, \"click mouseover\", classCb);\n  trigger(el, \"click mouseover\");\n  t.equal(el.className, \"onon\", \"attached callbacks have been fired properly\");\n\n  el.className = \"off\";\n  off(el, \"click mouseover\", classCb);\n  trigger(el, \"click mouseover\");\n  t.equal(\n    el.className,\n    \"off\",\n    \"triggered events didn't fire detached callback\"\n  );\n\n  t.end();\n});\n\ntape(\n  \"test events on/off/trigger for multiple elements, multiple events\",\n  function(t) {\n    el.className = \"\";\n    el2.className = \"\";\n    el.setAttribute(\"data-state\", \"\");\n    el2.setAttribute(\"data-state\", \"\");\n    on(els, \"click mouseover\", classCb);\n    on(els, \"resize scroll\", attrCb);\n    trigger(els, \"click mouseover resize scroll\");\n    t.equal(\n      el.className,\n      \"onon\",\n      \"attached callbacks has been fired properly on the first element\"\n    );\n    t.equal(\n      el.getAttribute(\"data-state\"),\n      \"ONON\",\n      \"attached callbacks has been fired properly on the first element\"\n    );\n    t.equal(\n      el2.className,\n      \"onon\",\n      \"attached callbacks has been fired properly on the second element\"\n    );\n    t.equal(\n      el2.getAttribute(\"data-state\"),\n      \"ONON\",\n      \"attached callbacks has been fired properly on the second element\"\n    );\n\n    el.className = \"off\";\n    el2.className = \"off\";\n    el.setAttribute(\"data-state\", \"off\");\n    el2.setAttribute(\"data-state\", \"off\");\n    off(els, \"click mouseover\", classCb);\n    off(els, \"resize scroll\", attrCb);\n    trigger(els, \"click mouseover resize scroll\");\n    t.equal(\n      el.className,\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n    t.equal(\n      el.getAttribute(\"data-state\"),\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n    t.equal(\n      el2.className,\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n    t.equal(\n      el2.getAttribute(\"data-state\"),\n      \"off\",\n      \"triggered events didn't fire detached callbacks on the first element\"\n    );\n\n    t.end();\n  }\n);\n\ntape(\"test events on top level elements\", function(t) {\n  var el = document;\n\n  el.className = \"\";\n  on(el, \"click\", classCb);\n  trigger(el, \"click\");\n  t.equal(\n    el.className,\n    \"on\",\n    \"attached callback has been fired properly on document\"\n  );\n\n  el = window;\n\n  el.className = \"\";\n  // With jsdom, the default this is global, not window, so we need to explicitly bind to window.\n  on(el, \"click\", classCb.bind(window));\n  trigger(el, \"click\");\n  t.equal(\n    el.className,\n    \"on\",\n    \"attached callback has been fired properly on window\"\n  );\n\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar executeScripts = require(\"../../lib/execute-scripts\");\n\ntape(\n  \"test executeScripts method when the script tag is inside a container\",\n  function(t) {\n    document.body.className = \"\";\n\n    var container = document.createElement(\"div\");\n    container.innerHTML =\n      \"<\" +\n      \"script\" +\n      \">document.body.className = 'executed';</\" +\n      \"script\" +\n      \"><\" +\n      \"script\" +\n      \">document.body.className += ' correctly';</\" +\n      \"script\" +\n      \">\";\n\n    t.equal(document.body.className, \"\", \"script hasn't been executed yet\");\n    executeScripts(container);\n    t.equal(\n      document.body.className,\n      \"executed correctly\",\n      \"script has been properly executed\"\n    );\n\n    t.end();\n  }\n);\n\ntape(\"test executeScripts method with just a script tag\", function(t) {\n  document.body.className = \"\";\n\n  var script = document.createElement(\"script\");\n  script.innerHTML = \"document.body.className = 'executed correctly';\";\n\n  t.equal(document.body.className, \"\", \"script hasn't been executed yet\");\n  executeScripts(script);\n  t.equal(\n    document.body.className,\n    \"executed correctly\",\n    \"script has been properly executed\"\n  );\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/execute-scripts.js","raw":"var tape = require(\"tape\");\n\nvar executeScripts = require(\"../../lib/execute-scripts\");\n\ntape(\n  \"test executeScripts method when the script tag is inside a container\",\n  function(t) {\n    document.body.className = \"\";\n\n    var container = document.createElement(\"div\");\n    container.innerHTML =\n      \"<\" +\n      \"script\" +\n      \">document.body.className = 'executed';</\" +\n      \"script\" +\n      \"><\" +\n      \"script\" +\n      \">document.body.className += ' correctly';</\" +\n      \"script\" +\n      \">\";\n\n    t.equal(document.body.className, \"\", \"script hasn't been executed yet\");\n    executeScripts(container);\n    t.equal(\n      document.body.className,\n      \"executed correctly\",\n      \"script has been properly executed\"\n    );\n\n    t.end();\n  }\n);\n\ntape(\"test executeScripts method with just a script tag\", function(t) {\n  document.body.className = \"\";\n\n  var script = document.createElement(\"script\");\n  script.innerHTML = \"document.body.className = 'executed correctly';\";\n\n  t.equal(document.body.className, \"\", \"script hasn't been executed yet\");\n  executeScripts(script);\n  t.equal(\n    document.body.className,\n    \"executed correctly\",\n    \"script has been properly executed\"\n  );\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/execute-scripts.js","layout":"false","title":"","comments":1,"_id":"clixi466y001437jx5v60hkfi","content":"var tape = require(\"tape\");\n\nvar executeScripts = require(\"../../lib/execute-scripts\");\n\ntape(\n  \"test executeScripts method when the script tag is inside a container\",\n  function(t) {\n    document.body.className = \"\";\n\n    var container = document.createElement(\"div\");\n    container.innerHTML =\n      \"<\" +\n      \"script\" +\n      \">document.body.className = 'executed';</\" +\n      \"script\" +\n      \"><\" +\n      \"script\" +\n      \">document.body.className += ' correctly';</\" +\n      \"script\" +\n      \">\";\n\n    t.equal(document.body.className, \"\", \"script hasn't been executed yet\");\n    executeScripts(container);\n    t.equal(\n      document.body.className,\n      \"executed correctly\",\n      \"script has been properly executed\"\n    );\n\n    t.end();\n  }\n);\n\ntape(\"test executeScripts method with just a script tag\", function(t) {\n  document.body.className = \"\";\n\n  var script = document.createElement(\"script\");\n  script.innerHTML = \"document.body.className = 'executed correctly';\";\n\n  t.equal(document.body.className, \"\", \"script hasn't been executed yet\");\n  executeScripts(script);\n  t.equal(\n    document.body.className,\n    \"executed correctly\",\n    \"script has been properly executed\"\n  );\n\n  t.end();\n});\n","site":{"data":{}},"length":891,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar executeScripts = require(\"../../lib/execute-scripts\");\n\ntape(\n  \"test executeScripts method when the script tag is inside a container\",\n  function(t) {\n    document.body.className = \"\";\n\n    var container = document.createElement(\"div\");\n    container.innerHTML =\n      \"<\" +\n      \"script\" +\n      \">document.body.className = 'executed';</\" +\n      \"script\" +\n      \"><\" +\n      \"script\" +\n      \">document.body.className += ' correctly';</\" +\n      \"script\" +\n      \">\";\n\n    t.equal(document.body.className, \"\", \"script hasn't been executed yet\");\n    executeScripts(container);\n    t.equal(\n      document.body.className,\n      \"executed correctly\",\n      \"script has been properly executed\"\n    );\n\n    t.end();\n  }\n);\n\ntape(\"test executeScripts method with just a script tag\", function(t) {\n  document.body.className = \"\";\n\n  var script = document.createElement(\"script\");\n  script.innerHTML = \"document.body.className = 'executed correctly';\";\n\n  t.equal(document.body.className, \"\", \"script hasn't been executed yet\");\n  executeScripts(script);\n  t.equal(\n    document.body.className,\n    \"executed correctly\",\n    \"script has been properly executed\"\n  );\n\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar forEachEls = require(\"../../lib/foreach-els.js\");\n\nvar div = document.createElement(\"div\");\nvar span = document.createElement(\"span\");\nvar cb = function(el) {\n  el.innerHTML = \"boom\";\n};\n\ntape(\"test forEachEls on one element\", function(t) {\n  div.innerHTML = \"div tag\";\n  forEachEls(div, cb);\n\n  t.equal(div.innerHTML, \"boom\", \"works correctly on one element\");\n  t.end();\n});\n\ntape(\"test forEachEls on an array\", function(t) {\n  div.innerHTML = \"div tag\";\n  span.innerHTML = \"span tag\";\n\n  forEachEls([div, span], cb);\n\n  t.equal(\n    div.innerHTML,\n    \"boom\",\n    \"works correctly on the first element of the array\"\n  );\n  t.equal(\n    span.innerHTML,\n    \"boom\",\n    \"works correctly on the last element of the array\"\n  );\n\n  t.end();\n});\n\ntape(\"test forEachEls on a NodeList\", function(t) {\n  div.innerHTML = \"div tag\";\n  span.innerHTML = \"span tag\";\n\n  var frag = document.createDocumentFragment();\n  frag.appendChild(div);\n  frag.appendChild(span);\n  forEachEls(frag.childNodes, cb);\n\n  t.equal(\n    div.innerHTML,\n    \"boom\",\n    \"works correctly on the first element of the document fragment\"\n  );\n  t.equal(\n    span.innerHTML,\n    \"boom\",\n    \"works correctly on the last element of the document fragment\"\n  );\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/foreach-els.js","raw":"var tape = require(\"tape\");\n\nvar forEachEls = require(\"../../lib/foreach-els.js\");\n\nvar div = document.createElement(\"div\");\nvar span = document.createElement(\"span\");\nvar cb = function(el) {\n  el.innerHTML = \"boom\";\n};\n\ntape(\"test forEachEls on one element\", function(t) {\n  div.innerHTML = \"div tag\";\n  forEachEls(div, cb);\n\n  t.equal(div.innerHTML, \"boom\", \"works correctly on one element\");\n  t.end();\n});\n\ntape(\"test forEachEls on an array\", function(t) {\n  div.innerHTML = \"div tag\";\n  span.innerHTML = \"span tag\";\n\n  forEachEls([div, span], cb);\n\n  t.equal(\n    div.innerHTML,\n    \"boom\",\n    \"works correctly on the first element of the array\"\n  );\n  t.equal(\n    span.innerHTML,\n    \"boom\",\n    \"works correctly on the last element of the array\"\n  );\n\n  t.end();\n});\n\ntape(\"test forEachEls on a NodeList\", function(t) {\n  div.innerHTML = \"div tag\";\n  span.innerHTML = \"span tag\";\n\n  var frag = document.createDocumentFragment();\n  frag.appendChild(div);\n  frag.appendChild(span);\n  forEachEls(frag.childNodes, cb);\n\n  t.equal(\n    div.innerHTML,\n    \"boom\",\n    \"works correctly on the first element of the document fragment\"\n  );\n  t.equal(\n    span.innerHTML,\n    \"boom\",\n    \"works correctly on the last element of the document fragment\"\n  );\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/foreach-els.js","layout":"false","title":"","comments":1,"_id":"clixi466z001537jxa6sq23m1","content":"var tape = require(\"tape\");\n\nvar forEachEls = require(\"../../lib/foreach-els.js\");\n\nvar div = document.createElement(\"div\");\nvar span = document.createElement(\"span\");\nvar cb = function(el) {\n  el.innerHTML = \"boom\";\n};\n\ntape(\"test forEachEls on one element\", function(t) {\n  div.innerHTML = \"div tag\";\n  forEachEls(div, cb);\n\n  t.equal(div.innerHTML, \"boom\", \"works correctly on one element\");\n  t.end();\n});\n\ntape(\"test forEachEls on an array\", function(t) {\n  div.innerHTML = \"div tag\";\n  span.innerHTML = \"span tag\";\n\n  forEachEls([div, span], cb);\n\n  t.equal(\n    div.innerHTML,\n    \"boom\",\n    \"works correctly on the first element of the array\"\n  );\n  t.equal(\n    span.innerHTML,\n    \"boom\",\n    \"works correctly on the last element of the array\"\n  );\n\n  t.end();\n});\n\ntape(\"test forEachEls on a NodeList\", function(t) {\n  div.innerHTML = \"div tag\";\n  span.innerHTML = \"span tag\";\n\n  var frag = document.createDocumentFragment();\n  frag.appendChild(div);\n  frag.appendChild(span);\n  forEachEls(frag.childNodes, cb);\n\n  t.equal(\n    div.innerHTML,\n    \"boom\",\n    \"works correctly on the first element of the document fragment\"\n  );\n  t.equal(\n    span.innerHTML,\n    \"boom\",\n    \"works correctly on the last element of the document fragment\"\n  );\n\n  t.end();\n});\n","site":{"data":{}},"length":1017,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar forEachEls = require(\"../../lib/foreach-els.js\");\n\nvar div = document.createElement(\"div\");\nvar span = document.createElement(\"span\");\nvar cb = function(el) {\n  el.innerHTML = \"boom\";\n};\n\ntape(\"test forEachEls on one element\", function(t) {\n  div.innerHTML = \"div tag\";\n  forEachEls(div, cb);\n\n  t.equal(div.innerHTML, \"boom\", \"works correctly on one element\");\n  t.end();\n});\n\ntape(\"test forEachEls on an array\", function(t) {\n  div.innerHTML = \"div tag\";\n  span.innerHTML = \"span tag\";\n\n  forEachEls([div, span], cb);\n\n  t.equal(\n    div.innerHTML,\n    \"boom\",\n    \"works correctly on the first element of the array\"\n  );\n  t.equal(\n    span.innerHTML,\n    \"boom\",\n    \"works correctly on the last element of the array\"\n  );\n\n  t.end();\n});\n\ntape(\"test forEachEls on a NodeList\", function(t) {\n  div.innerHTML = \"div tag\";\n  span.innerHTML = \"span tag\";\n\n  var frag = document.createDocumentFragment();\n  frag.appendChild(div);\n  frag.appendChild(span);\n  forEachEls(frag.childNodes, cb);\n\n  t.equal(\n    div.innerHTML,\n    \"boom\",\n    \"works correctly on the first element of the document fragment\"\n  );\n  t.equal(\n    span.innerHTML,\n    \"boom\",\n    \"works correctly on the last element of the document fragment\"\n  );\n\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar forEachEls = require(\"../../lib/foreach-selectors.js\");\n\nvar cb = function(el) {\n  el.className = \"modified\";\n};\n\ntape(\"test forEachSelector\", function(t) {\n  forEachEls([\"html\", \"body\"], cb);\n\n  t.equal(\n    document.documentElement.className,\n    \"modified\",\n    \"callback has been executed on first selector\"\n  );\n  t.equal(\n    document.body.className,\n    \"modified\",\n    \"callback has been executed on first selector\"\n  );\n\n  document.documentElement.className = \"\";\n  document.body.className = \"\";\n\n  forEachEls([\"html\", \"body\"], cb, null, document.documentElement);\n\n  t.equal(\n    document.documentElement.className,\n    \"\",\n    \"callback has not been executed on first selector when context is used\"\n  );\n  t.equal(\n    document.body.className,\n    \"modified\",\n    \"callback has been executed on first selector when context is used\"\n  );\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/foreach-selectors.js","raw":"var tape = require(\"tape\");\n\nvar forEachEls = require(\"../../lib/foreach-selectors.js\");\n\nvar cb = function(el) {\n  el.className = \"modified\";\n};\n\ntape(\"test forEachSelector\", function(t) {\n  forEachEls([\"html\", \"body\"], cb);\n\n  t.equal(\n    document.documentElement.className,\n    \"modified\",\n    \"callback has been executed on first selector\"\n  );\n  t.equal(\n    document.body.className,\n    \"modified\",\n    \"callback has been executed on first selector\"\n  );\n\n  document.documentElement.className = \"\";\n  document.body.className = \"\";\n\n  forEachEls([\"html\", \"body\"], cb, null, document.documentElement);\n\n  t.equal(\n    document.documentElement.className,\n    \"\",\n    \"callback has not been executed on first selector when context is used\"\n  );\n  t.equal(\n    document.body.className,\n    \"modified\",\n    \"callback has been executed on first selector when context is used\"\n  );\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/foreach-selectors.js","layout":"false","title":"","comments":1,"_id":"clixi466z001637jxae4o5sw7","content":"var tape = require(\"tape\");\n\nvar forEachEls = require(\"../../lib/foreach-selectors.js\");\n\nvar cb = function(el) {\n  el.className = \"modified\";\n};\n\ntape(\"test forEachSelector\", function(t) {\n  forEachEls([\"html\", \"body\"], cb);\n\n  t.equal(\n    document.documentElement.className,\n    \"modified\",\n    \"callback has been executed on first selector\"\n  );\n  t.equal(\n    document.body.className,\n    \"modified\",\n    \"callback has been executed on first selector\"\n  );\n\n  document.documentElement.className = \"\";\n  document.body.className = \"\";\n\n  forEachEls([\"html\", \"body\"], cb, null, document.documentElement);\n\n  t.equal(\n    document.documentElement.className,\n    \"\",\n    \"callback has not been executed on first selector when context is used\"\n  );\n  t.equal(\n    document.body.className,\n    \"modified\",\n    \"callback has been executed on first selector when context is used\"\n  );\n\n  t.end();\n});\n","site":{"data":{}},"length":723,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar forEachEls = require(\"../../lib/foreach-selectors.js\");\n\nvar cb = function(el) {\n  el.className = \"modified\";\n};\n\ntape(\"test forEachSelector\", function(t) {\n  forEachEls([\"html\", \"body\"], cb);\n\n  t.equal(\n    document.documentElement.className,\n    \"modified\",\n    \"callback has been executed on first selector\"\n  );\n  t.equal(\n    document.body.className,\n    \"modified\",\n    \"callback has been executed on first selector\"\n  );\n\n  document.documentElement.className = \"\";\n  document.body.className = \"\";\n\n  forEachEls([\"html\", \"body\"], cb, null, document.documentElement);\n\n  t.equal(\n    document.documentElement.className,\n    \"\",\n    \"callback has not been executed on first selector when context is used\"\n  );\n  t.equal(\n    document.body.className,\n    \"modified\",\n    \"callback has been executed on first selector when context is used\"\n  );\n\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar isSupported = require(\"../../lib/is-supported.js\");\n\ntape(\"test isSupported method\", function(t) {\n  t.true(\n    isSupported(),\n    \"well, we run test on supported browser, so it should be ok here\"\n  );\n  t.end();\n});\n","source":"lib/pjax/tests/lib/is-supported.js","raw":"var tape = require(\"tape\");\n\nvar isSupported = require(\"../../lib/is-supported.js\");\n\ntape(\"test isSupported method\", function(t) {\n  t.true(\n    isSupported(),\n    \"well, we run test on supported browser, so it should be ok here\"\n  );\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/is-supported.js","layout":"false","title":"","comments":1,"_id":"clixi4671001737jxejni7ldj","content":"var tape = require(\"tape\");\n\nvar isSupported = require(\"../../lib/is-supported.js\");\n\ntape(\"test isSupported method\", function(t) {\n  t.true(\n    isSupported(),\n    \"well, we run test on supported browser, so it should be ok here\"\n  );\n  t.end();\n});\n","site":{"data":{}},"length":204,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar isSupported = require(\"../../lib/is-supported.js\");\n\ntape(\"test isSupported method\", function(t) {\n  t.true(\n    isSupported(),\n    \"well, we run test on supported browser, so it should be ok here\"\n  );\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar parseOptions = require(\"../../lib/parse-options.js\");\n\ntape(\"test parse initalization options function\", function(t) {\n  t.test(\"- default options\", function(t) {\n    var pjax = {};\n    pjax.options = parseOptions({});\n\n    t.equal(pjax.options.elements, \"a[href], form[action]\");\n    t.equal(pjax.options.selectors.length, 2, \"selectors length\");\n    t.equal(pjax.options.selectors[0], \"title\");\n    t.equal(pjax.options.selectors[1], \".js-Pjax\");\n\n    t.equal(typeof pjax.options.switches, \"object\");\n    t.equal(Object.keys(pjax.options.switches).length, 2); // head and body\n\n    t.equal(typeof pjax.options.switchesOptions, \"object\");\n    t.equal(Object.keys(pjax.options.switchesOptions).length, 0);\n\n    t.equal(pjax.options.history, true);\n    t.equal(typeof pjax.options.analytics, \"function\");\n    t.equal(pjax.options.scrollTo, 0);\n    t.equal(pjax.options.scrollRestoration, true);\n    t.equal(pjax.options.cacheBust, true);\n    t.equal(pjax.options.debug, false);\n    t.equal(pjax.options.currentUrlFullReload, false);\n    t.end();\n  });\n\n  // verify analytics always ends up as a function even when passed not a function\n  t.test(\"- analytics is a function\", function(t) {\n    var pjax = {};\n    pjax.options = parseOptions({ analytics: \"some string\" });\n\n    t.deepEqual(typeof pjax.options.analytics, \"function\");\n    t.end();\n  });\n\n  // verify that the value false for scrollTo is not squashed\n  t.test(\"- scrollTo remains false\", function(t) {\n    var pjax = {};\n    pjax.options = parseOptions({ scrollTo: false });\n\n    t.deepEqual(pjax.options.scrollTo, false);\n    t.end();\n  });\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/parse-options.js","raw":"var tape = require(\"tape\");\n\nvar parseOptions = require(\"../../lib/parse-options.js\");\n\ntape(\"test parse initalization options function\", function(t) {\n  t.test(\"- default options\", function(t) {\n    var pjax = {};\n    pjax.options = parseOptions({});\n\n    t.equal(pjax.options.elements, \"a[href], form[action]\");\n    t.equal(pjax.options.selectors.length, 2, \"selectors length\");\n    t.equal(pjax.options.selectors[0], \"title\");\n    t.equal(pjax.options.selectors[1], \".js-Pjax\");\n\n    t.equal(typeof pjax.options.switches, \"object\");\n    t.equal(Object.keys(pjax.options.switches).length, 2); // head and body\n\n    t.equal(typeof pjax.options.switchesOptions, \"object\");\n    t.equal(Object.keys(pjax.options.switchesOptions).length, 0);\n\n    t.equal(pjax.options.history, true);\n    t.equal(typeof pjax.options.analytics, \"function\");\n    t.equal(pjax.options.scrollTo, 0);\n    t.equal(pjax.options.scrollRestoration, true);\n    t.equal(pjax.options.cacheBust, true);\n    t.equal(pjax.options.debug, false);\n    t.equal(pjax.options.currentUrlFullReload, false);\n    t.end();\n  });\n\n  // verify analytics always ends up as a function even when passed not a function\n  t.test(\"- analytics is a function\", function(t) {\n    var pjax = {};\n    pjax.options = parseOptions({ analytics: \"some string\" });\n\n    t.deepEqual(typeof pjax.options.analytics, \"function\");\n    t.end();\n  });\n\n  // verify that the value false for scrollTo is not squashed\n  t.test(\"- scrollTo remains false\", function(t) {\n    var pjax = {};\n    pjax.options = parseOptions({ scrollTo: false });\n\n    t.deepEqual(pjax.options.scrollTo, false);\n    t.end();\n  });\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/parse-options.js","layout":"false","title":"","comments":1,"_id":"clixi4671001837jx39le4avn","content":"var tape = require(\"tape\");\n\nvar parseOptions = require(\"../../lib/parse-options.js\");\n\ntape(\"test parse initalization options function\", function(t) {\n  t.test(\"- default options\", function(t) {\n    var pjax = {};\n    pjax.options = parseOptions({});\n\n    t.equal(pjax.options.elements, \"a[href], form[action]\");\n    t.equal(pjax.options.selectors.length, 2, \"selectors length\");\n    t.equal(pjax.options.selectors[0], \"title\");\n    t.equal(pjax.options.selectors[1], \".js-Pjax\");\n\n    t.equal(typeof pjax.options.switches, \"object\");\n    t.equal(Object.keys(pjax.options.switches).length, 2); // head and body\n\n    t.equal(typeof pjax.options.switchesOptions, \"object\");\n    t.equal(Object.keys(pjax.options.switchesOptions).length, 0);\n\n    t.equal(pjax.options.history, true);\n    t.equal(typeof pjax.options.analytics, \"function\");\n    t.equal(pjax.options.scrollTo, 0);\n    t.equal(pjax.options.scrollRestoration, true);\n    t.equal(pjax.options.cacheBust, true);\n    t.equal(pjax.options.debug, false);\n    t.equal(pjax.options.currentUrlFullReload, false);\n    t.end();\n  });\n\n  // verify analytics always ends up as a function even when passed not a function\n  t.test(\"- analytics is a function\", function(t) {\n    var pjax = {};\n    pjax.options = parseOptions({ analytics: \"some string\" });\n\n    t.deepEqual(typeof pjax.options.analytics, \"function\");\n    t.end();\n  });\n\n  // verify that the value false for scrollTo is not squashed\n  t.test(\"- scrollTo remains false\", function(t) {\n    var pjax = {};\n    pjax.options = parseOptions({ scrollTo: false });\n\n    t.deepEqual(pjax.options.scrollTo, false);\n    t.end();\n  });\n\n  t.end();\n});\n","site":{"data":{}},"length":1379,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar parseOptions = require(\"../../lib/parse-options.js\");\n\ntape(\"test parse initalization options function\", function(t) {\n  t.test(\"- default options\", function(t) {\n    var pjax = {};\n    pjax.options = parseOptions({});\n\n    t.equal(pjax.options.elements, \"a[href], form[action]\");\n    t.equal(pjax.options.selectors.length, 2, \"selectors length\");\n    t.equal(pjax.options.selectors[0], \"title\");\n    t.equal(pjax.options.selectors[1], \".js-Pjax\");\n\n    t.equal(typeof pjax.options.switches, \"object\");\n    t.equal(Object.keys(pjax.options.switches).length, 2); // head and body\n\n    t.equal(typeof pjax.options.switchesOptions, \"object\");\n    t.equal(Object.keys(pjax.options.switchesOptions).length, 0);\n\n    t.equal(pjax.options.history, true);\n    t.equal(typeof pjax.options.analytics, \"function\");\n    t.equal(pjax.options.scrollTo, 0);\n    t.equal(pjax.options.scrollRestoration, true);\n    t.equal(pjax.options.cacheBust, true);\n    t.equal(pjax.options.debug, false);\n    t.equal(pjax.options.currentUrlFullReload, false);\n    t.end();\n  });\n\n  // verify analytics always ends up as a function even when passed not a function\n  t.test(\"- analytics is a function\", function(t) {\n    var pjax = {};\n    pjax.options = parseOptions({ analytics: \"some string\" });\n\n    t.deepEqual(typeof pjax.options.analytics, \"function\");\n    t.end();\n  });\n\n  // verify that the value false for scrollTo is not squashed\n  t.test(\"- scrollTo remains false\", function(t) {\n    var pjax = {};\n    pjax.options = parseOptions({ scrollTo: false });\n\n    t.deepEqual(pjax.options.scrollTo, false);\n    t.end();\n  });\n\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar sendRequest = require(\"../../lib/send-request.js\");\n\n// Polyfill responseURL property into XMLHttpRequest if it doesn't exist,\n// just for the purposes of this test\n// This polyfill is not complete; it won't show the updated location if a\n// redirection occurred, but it's fine for our purposes.\nif (!(\"responseURL\" in XMLHttpRequest.prototype)) {\n  var nativeOpen = XMLHttpRequest.prototype.open;\n  XMLHttpRequest.prototype.open = function(method, url) {\n    this.responseURL = url;\n    return nativeOpen.apply(this, arguments);\n  };\n}\n\ntape(\"test xhr request\", function(t) {\n  var url = \"https://httpbin.org/get\";\n\n  t.test(\"- request is made, gets a result, and is cache-busted\", function(t) {\n    var r = sendRequest(url, { cacheBust: true }, function(result) {\n      t.equal(\n        r.responseURL.indexOf(\"?\"),\n        url.length,\n        \"XHR URL is cache-busted when configured to be\"\n      );\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        t.fail(\"xhr doesn't get a JSON response\");\n      }\n      t.same(typeof result, \"object\", \"xhr request get a result\");\n      t.end();\n    });\n  });\n  t.test(\"- request is not cache-busted when configured not to be\", function(\n    t\n  ) {\n    var r = sendRequest(url, {}, function() {\n      t.equal(r.responseURL, url, \"XHR URL is left untouched\");\n      t.end();\n    });\n  });\n  t.end();\n});\n\ntape(\"request headers are sent properly\", function(t) {\n  var url = \"https://httpbin.org/headers\";\n  var options = {\n    selectors: [\"div.pjax\", \"div.container\"]\n  };\n\n  sendRequest(url, options, function(responseText) {\n    var headers = JSON.parse(responseText).headers;\n\n    t.equals(\n      headers[\"X-Requested-With\"],\n      \"XMLHttpRequest\",\n      \"X-Requested-With header is set correctly\"\n    );\n    // Httpbin.org changes the case to 'X-Pjax'\n    t.equals(headers[\"X-Pjax\"], \"true\", \"X-PJAX header is set correctly\");\n    t.equals(\n      headers[\"X-Pjax-Selectors\"],\n      '[\"div.pjax\",\"div.container\"]',\n      \"X-PJAX-Selectors header is set correctly\"\n    );\n\n    t.end();\n  });\n});\n\ntape(\"HTTP status codes other than 200 are handled properly\", function(t) {\n  var url = \"https://httpbin.org/status/400\";\n\n  sendRequest(url, {}, function(responseText, request) {\n    t.equals(responseText, null, \"responseText is null\");\n    t.equals(request.status, 400, \"HTTP status code is correct\");\n\n    t.end();\n  });\n});\n\ntape.skip(\"XHR error is handled properly\", function(t) {\n  var url = \"https://encrypted.google.com/foobar\";\n\n  sendRequest(url, {}, function(responseText) {\n    t.equals(responseText, null, \"responseText is null\");\n\n    t.end();\n  });\n});\n\ntape(\"POST body data is sent properly\", function(t) {\n  var url = \"https://httpbin.org/post\";\n  var params = [\n    {\n      name: \"test\",\n      value: \"1\"\n    }\n  ];\n  var options = {\n    requestOptions: {\n      requestMethod: \"POST\",\n      requestParams: params\n    }\n  };\n\n  sendRequest(url, options, function(responseText) {\n    var response = JSON.parse(responseText);\n\n    t.same(\n      response.form[params[0].name],\n      params[0].value,\n      \"requestParams were sent properly\"\n    );\n    t.equals(\n      response.headers[\"Content-Type\"],\n      \"application/x-www-form-urlencoded\",\n      \"Content-Type header was set properly\"\n    );\n\n    t.end();\n  });\n});\n\ntape(\"GET query data is sent properly\", function(t) {\n  var url = \"https://httpbin.org/get\";\n  var params = [\n    {\n      name: \"test\",\n      value: \"1\"\n    }\n  ];\n  var options = {\n    requestOptions: {\n      requestParams: params\n    }\n  };\n\n  sendRequest(url, options, function(responseText) {\n    var response = JSON.parse(responseText);\n\n    t.same(\n      response.args[params[0].name],\n      params[0].value,\n      \"requestParams were sent properly\"\n    );\n\n    t.end();\n  });\n});\n\ntape(\"XHR timeout is handled properly\", function(t) {\n  var url = \"https://httpbin.org/delay/5\";\n  var options = {\n    timeout: 1000\n  };\n\n  sendRequest(url, options, function(responseText) {\n    t.equals(responseText, null, \"responseText is null\");\n\n    t.end();\n  });\n});\n","source":"lib/pjax/tests/lib/send-request.js","raw":"var tape = require(\"tape\");\n\nvar sendRequest = require(\"../../lib/send-request.js\");\n\n// Polyfill responseURL property into XMLHttpRequest if it doesn't exist,\n// just for the purposes of this test\n// This polyfill is not complete; it won't show the updated location if a\n// redirection occurred, but it's fine for our purposes.\nif (!(\"responseURL\" in XMLHttpRequest.prototype)) {\n  var nativeOpen = XMLHttpRequest.prototype.open;\n  XMLHttpRequest.prototype.open = function(method, url) {\n    this.responseURL = url;\n    return nativeOpen.apply(this, arguments);\n  };\n}\n\ntape(\"test xhr request\", function(t) {\n  var url = \"https://httpbin.org/get\";\n\n  t.test(\"- request is made, gets a result, and is cache-busted\", function(t) {\n    var r = sendRequest(url, { cacheBust: true }, function(result) {\n      t.equal(\n        r.responseURL.indexOf(\"?\"),\n        url.length,\n        \"XHR URL is cache-busted when configured to be\"\n      );\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        t.fail(\"xhr doesn't get a JSON response\");\n      }\n      t.same(typeof result, \"object\", \"xhr request get a result\");\n      t.end();\n    });\n  });\n  t.test(\"- request is not cache-busted when configured not to be\", function(\n    t\n  ) {\n    var r = sendRequest(url, {}, function() {\n      t.equal(r.responseURL, url, \"XHR URL is left untouched\");\n      t.end();\n    });\n  });\n  t.end();\n});\n\ntape(\"request headers are sent properly\", function(t) {\n  var url = \"https://httpbin.org/headers\";\n  var options = {\n    selectors: [\"div.pjax\", \"div.container\"]\n  };\n\n  sendRequest(url, options, function(responseText) {\n    var headers = JSON.parse(responseText).headers;\n\n    t.equals(\n      headers[\"X-Requested-With\"],\n      \"XMLHttpRequest\",\n      \"X-Requested-With header is set correctly\"\n    );\n    // Httpbin.org changes the case to 'X-Pjax'\n    t.equals(headers[\"X-Pjax\"], \"true\", \"X-PJAX header is set correctly\");\n    t.equals(\n      headers[\"X-Pjax-Selectors\"],\n      '[\"div.pjax\",\"div.container\"]',\n      \"X-PJAX-Selectors header is set correctly\"\n    );\n\n    t.end();\n  });\n});\n\ntape(\"HTTP status codes other than 200 are handled properly\", function(t) {\n  var url = \"https://httpbin.org/status/400\";\n\n  sendRequest(url, {}, function(responseText, request) {\n    t.equals(responseText, null, \"responseText is null\");\n    t.equals(request.status, 400, \"HTTP status code is correct\");\n\n    t.end();\n  });\n});\n\ntape.skip(\"XHR error is handled properly\", function(t) {\n  var url = \"https://encrypted.google.com/foobar\";\n\n  sendRequest(url, {}, function(responseText) {\n    t.equals(responseText, null, \"responseText is null\");\n\n    t.end();\n  });\n});\n\ntape(\"POST body data is sent properly\", function(t) {\n  var url = \"https://httpbin.org/post\";\n  var params = [\n    {\n      name: \"test\",\n      value: \"1\"\n    }\n  ];\n  var options = {\n    requestOptions: {\n      requestMethod: \"POST\",\n      requestParams: params\n    }\n  };\n\n  sendRequest(url, options, function(responseText) {\n    var response = JSON.parse(responseText);\n\n    t.same(\n      response.form[params[0].name],\n      params[0].value,\n      \"requestParams were sent properly\"\n    );\n    t.equals(\n      response.headers[\"Content-Type\"],\n      \"application/x-www-form-urlencoded\",\n      \"Content-Type header was set properly\"\n    );\n\n    t.end();\n  });\n});\n\ntape(\"GET query data is sent properly\", function(t) {\n  var url = \"https://httpbin.org/get\";\n  var params = [\n    {\n      name: \"test\",\n      value: \"1\"\n    }\n  ];\n  var options = {\n    requestOptions: {\n      requestParams: params\n    }\n  };\n\n  sendRequest(url, options, function(responseText) {\n    var response = JSON.parse(responseText);\n\n    t.same(\n      response.args[params[0].name],\n      params[0].value,\n      \"requestParams were sent properly\"\n    );\n\n    t.end();\n  });\n});\n\ntape(\"XHR timeout is handled properly\", function(t) {\n  var url = \"https://httpbin.org/delay/5\";\n  var options = {\n    timeout: 1000\n  };\n\n  sendRequest(url, options, function(responseText) {\n    t.equals(responseText, null, \"responseText is null\");\n\n    t.end();\n  });\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/send-request.js","layout":"false","title":"","comments":1,"_id":"clixi4672001937jx2m3gcttx","content":"var tape = require(\"tape\");\n\nvar sendRequest = require(\"../../lib/send-request.js\");\n\n// Polyfill responseURL property into XMLHttpRequest if it doesn't exist,\n// just for the purposes of this test\n// This polyfill is not complete; it won't show the updated location if a\n// redirection occurred, but it's fine for our purposes.\nif (!(\"responseURL\" in XMLHttpRequest.prototype)) {\n  var nativeOpen = XMLHttpRequest.prototype.open;\n  XMLHttpRequest.prototype.open = function(method, url) {\n    this.responseURL = url;\n    return nativeOpen.apply(this, arguments);\n  };\n}\n\ntape(\"test xhr request\", function(t) {\n  var url = \"https://httpbin.org/get\";\n\n  t.test(\"- request is made, gets a result, and is cache-busted\", function(t) {\n    var r = sendRequest(url, { cacheBust: true }, function(result) {\n      t.equal(\n        r.responseURL.indexOf(\"?\"),\n        url.length,\n        \"XHR URL is cache-busted when configured to be\"\n      );\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        t.fail(\"xhr doesn't get a JSON response\");\n      }\n      t.same(typeof result, \"object\", \"xhr request get a result\");\n      t.end();\n    });\n  });\n  t.test(\"- request is not cache-busted when configured not to be\", function(\n    t\n  ) {\n    var r = sendRequest(url, {}, function() {\n      t.equal(r.responseURL, url, \"XHR URL is left untouched\");\n      t.end();\n    });\n  });\n  t.end();\n});\n\ntape(\"request headers are sent properly\", function(t) {\n  var url = \"https://httpbin.org/headers\";\n  var options = {\n    selectors: [\"div.pjax\", \"div.container\"]\n  };\n\n  sendRequest(url, options, function(responseText) {\n    var headers = JSON.parse(responseText).headers;\n\n    t.equals(\n      headers[\"X-Requested-With\"],\n      \"XMLHttpRequest\",\n      \"X-Requested-With header is set correctly\"\n    );\n    // Httpbin.org changes the case to 'X-Pjax'\n    t.equals(headers[\"X-Pjax\"], \"true\", \"X-PJAX header is set correctly\");\n    t.equals(\n      headers[\"X-Pjax-Selectors\"],\n      '[\"div.pjax\",\"div.container\"]',\n      \"X-PJAX-Selectors header is set correctly\"\n    );\n\n    t.end();\n  });\n});\n\ntape(\"HTTP status codes other than 200 are handled properly\", function(t) {\n  var url = \"https://httpbin.org/status/400\";\n\n  sendRequest(url, {}, function(responseText, request) {\n    t.equals(responseText, null, \"responseText is null\");\n    t.equals(request.status, 400, \"HTTP status code is correct\");\n\n    t.end();\n  });\n});\n\ntape.skip(\"XHR error is handled properly\", function(t) {\n  var url = \"https://encrypted.google.com/foobar\";\n\n  sendRequest(url, {}, function(responseText) {\n    t.equals(responseText, null, \"responseText is null\");\n\n    t.end();\n  });\n});\n\ntape(\"POST body data is sent properly\", function(t) {\n  var url = \"https://httpbin.org/post\";\n  var params = [\n    {\n      name: \"test\",\n      value: \"1\"\n    }\n  ];\n  var options = {\n    requestOptions: {\n      requestMethod: \"POST\",\n      requestParams: params\n    }\n  };\n\n  sendRequest(url, options, function(responseText) {\n    var response = JSON.parse(responseText);\n\n    t.same(\n      response.form[params[0].name],\n      params[0].value,\n      \"requestParams were sent properly\"\n    );\n    t.equals(\n      response.headers[\"Content-Type\"],\n      \"application/x-www-form-urlencoded\",\n      \"Content-Type header was set properly\"\n    );\n\n    t.end();\n  });\n});\n\ntape(\"GET query data is sent properly\", function(t) {\n  var url = \"https://httpbin.org/get\";\n  var params = [\n    {\n      name: \"test\",\n      value: \"1\"\n    }\n  ];\n  var options = {\n    requestOptions: {\n      requestParams: params\n    }\n  };\n\n  sendRequest(url, options, function(responseText) {\n    var response = JSON.parse(responseText);\n\n    t.same(\n      response.args[params[0].name],\n      params[0].value,\n      \"requestParams were sent properly\"\n    );\n\n    t.end();\n  });\n});\n\ntape(\"XHR timeout is handled properly\", function(t) {\n  var url = \"https://httpbin.org/delay/5\";\n  var options = {\n    timeout: 1000\n  };\n\n  sendRequest(url, options, function(responseText) {\n    t.equals(responseText, null, \"responseText is null\");\n\n    t.end();\n  });\n});\n","site":{"data":{}},"length":3158,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar sendRequest = require(\"../../lib/send-request.js\");\n\n// Polyfill responseURL property into XMLHttpRequest if it doesn't exist,\n// just for the purposes of this test\n// This polyfill is not complete; it won't show the updated location if a\n// redirection occurred, but it's fine for our purposes.\nif (!(\"responseURL\" in XMLHttpRequest.prototype)) {\n  var nativeOpen = XMLHttpRequest.prototype.open;\n  XMLHttpRequest.prototype.open = function(method, url) {\n    this.responseURL = url;\n    return nativeOpen.apply(this, arguments);\n  };\n}\n\ntape(\"test xhr request\", function(t) {\n  var url = \"https://httpbin.org/get\";\n\n  t.test(\"- request is made, gets a result, and is cache-busted\", function(t) {\n    var r = sendRequest(url, { cacheBust: true }, function(result) {\n      t.equal(\n        r.responseURL.indexOf(\"?\"),\n        url.length,\n        \"XHR URL is cache-busted when configured to be\"\n      );\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        t.fail(\"xhr doesn't get a JSON response\");\n      }\n      t.same(typeof result, \"object\", \"xhr request get a result\");\n      t.end();\n    });\n  });\n  t.test(\"- request is not cache-busted when configured not to be\", function(\n    t\n  ) {\n    var r = sendRequest(url, {}, function() {\n      t.equal(r.responseURL, url, \"XHR URL is left untouched\");\n      t.end();\n    });\n  });\n  t.end();\n});\n\ntape(\"request headers are sent properly\", function(t) {\n  var url = \"https://httpbin.org/headers\";\n  var options = {\n    selectors: [\"div.pjax\", \"div.container\"]\n  };\n\n  sendRequest(url, options, function(responseText) {\n    var headers = JSON.parse(responseText).headers;\n\n    t.equals(\n      headers[\"X-Requested-With\"],\n      \"XMLHttpRequest\",\n      \"X-Requested-With header is set correctly\"\n    );\n    // Httpbin.org changes the case to 'X-Pjax'\n    t.equals(headers[\"X-Pjax\"], \"true\", \"X-PJAX header is set correctly\");\n    t.equals(\n      headers[\"X-Pjax-Selectors\"],\n      '[\"div.pjax\",\"div.container\"]',\n      \"X-PJAX-Selectors header is set correctly\"\n    );\n\n    t.end();\n  });\n});\n\ntape(\"HTTP status codes other than 200 are handled properly\", function(t) {\n  var url = \"https://httpbin.org/status/400\";\n\n  sendRequest(url, {}, function(responseText, request) {\n    t.equals(responseText, null, \"responseText is null\");\n    t.equals(request.status, 400, \"HTTP status code is correct\");\n\n    t.end();\n  });\n});\n\ntape.skip(\"XHR error is handled properly\", function(t) {\n  var url = \"https://encrypted.google.com/foobar\";\n\n  sendRequest(url, {}, function(responseText) {\n    t.equals(responseText, null, \"responseText is null\");\n\n    t.end();\n  });\n});\n\ntape(\"POST body data is sent properly\", function(t) {\n  var url = \"https://httpbin.org/post\";\n  var params = [\n    {\n      name: \"test\",\n      value: \"1\"\n    }\n  ];\n  var options = {\n    requestOptions: {\n      requestMethod: \"POST\",\n      requestParams: params\n    }\n  };\n\n  sendRequest(url, options, function(responseText) {\n    var response = JSON.parse(responseText);\n\n    t.same(\n      response.form[params[0].name],\n      params[0].value,\n      \"requestParams were sent properly\"\n    );\n    t.equals(\n      response.headers[\"Content-Type\"],\n      \"application/x-www-form-urlencoded\",\n      \"Content-Type header was set properly\"\n    );\n\n    t.end();\n  });\n});\n\ntape(\"GET query data is sent properly\", function(t) {\n  var url = \"https://httpbin.org/get\";\n  var params = [\n    {\n      name: \"test\",\n      value: \"1\"\n    }\n  ];\n  var options = {\n    requestOptions: {\n      requestParams: params\n    }\n  };\n\n  sendRequest(url, options, function(responseText) {\n    var response = JSON.parse(responseText);\n\n    t.same(\n      response.args[params[0].name],\n      params[0].value,\n      \"requestParams were sent properly\"\n    );\n\n    t.end();\n  });\n});\n\ntape(\"XHR timeout is handled properly\", function(t) {\n  var url = \"https://httpbin.org/delay/5\";\n  var options = {\n    timeout: 1000\n  };\n\n  sendRequest(url, options, function(responseText) {\n    t.equals(responseText, null, \"responseText is null\");\n\n    t.end();\n  });\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar switchesSelectors = require(\"../../lib/switches-selectors.js\");\nvar noop = require(\"../../lib/util/noop\");\n\nvar pjax = {\n  onSwitch: function() {\n    console.log(\"Switched\");\n  },\n  state: {},\n  log: noop\n};\n\n// @author darylteo\ntape(\"test switchesSelectors\", function(t) {\n  // switchesSelectors relies on a higher level function callback\n  // should really be passed in instead so I'll leave it here as a TODO:\n  var tmpEl = document.implementation.createHTMLDocument();\n\n  // a div container is used because swapping the containers\n  // will generate a new element, so things get weird\n  // using \"body\" generates a lot of testling cruft that I don't\n  // want so let's avoid that\n  var container = document.createElement(\"div\");\n  container.innerHTML = \"<p>Original Text</p><span>No Change</span>\";\n  document.body.appendChild(container);\n\n  var container2 = tmpEl.createElement(\"div\");\n  container2.innerHTML = \"<p>New Text</p><span>New Span</span>\";\n  tmpEl.body.appendChild(container2);\n\n  switchesSelectors.bind(pjax)(\n    {}, // switches\n    {}, // switchesOptions\n    [\"p\"], // selectors,\n    tmpEl, // fromEl\n    document, // toEl,\n    {} // options\n  );\n\n  t.equals(\n    container.innerHTML,\n    \"<p>New Text</p><span>No Change</span>\",\n    \"Elements correctly switched\"\n  );\n\n  t.end();\n});\n\ntape(\"test switchesSelectors when number of elements don't match\", function(t) {\n  var newTempDoc = document.implementation.createHTMLDocument();\n  var originalTempDoc = document.implementation.createHTMLDocument();\n\n  // a div container is used because swapping the containers\n  // will generate a new element, so things get weird\n  // using \"body\" generates a lot of testling cruft that I don't\n  // want so let's avoid that\n  var container = originalTempDoc.createElement(\"div\");\n  container.innerHTML = \"<p>Original text</p><span>No change</span>\";\n  originalTempDoc.body.appendChild(container);\n\n  var container2 = newTempDoc.createElement(\"div\");\n  container2.innerHTML =\n    \"<p>New text</p><p>More new text</p><span>New span</span>\";\n  newTempDoc.body.appendChild(container2);\n\n  var switchSelectorsFn = switchesSelectors.bind(\n    pjax,\n    {}, // switches\n    {}, // switchesOptions\n    [\"p\"], // selectors,\n    newTempDoc, // fromEl\n    originalTempDoc, // toEl,\n    {} // options\n  );\n\n  t.throws(\n    switchSelectorsFn,\n    null,\n    \"error was thrown properly since number of elements don't match\"\n  );\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/switch-selectors.js","raw":"var tape = require(\"tape\");\n\nvar switchesSelectors = require(\"../../lib/switches-selectors.js\");\nvar noop = require(\"../../lib/util/noop\");\n\nvar pjax = {\n  onSwitch: function() {\n    console.log(\"Switched\");\n  },\n  state: {},\n  log: noop\n};\n\n// @author darylteo\ntape(\"test switchesSelectors\", function(t) {\n  // switchesSelectors relies on a higher level function callback\n  // should really be passed in instead so I'll leave it here as a TODO:\n  var tmpEl = document.implementation.createHTMLDocument();\n\n  // a div container is used because swapping the containers\n  // will generate a new element, so things get weird\n  // using \"body\" generates a lot of testling cruft that I don't\n  // want so let's avoid that\n  var container = document.createElement(\"div\");\n  container.innerHTML = \"<p>Original Text</p><span>No Change</span>\";\n  document.body.appendChild(container);\n\n  var container2 = tmpEl.createElement(\"div\");\n  container2.innerHTML = \"<p>New Text</p><span>New Span</span>\";\n  tmpEl.body.appendChild(container2);\n\n  switchesSelectors.bind(pjax)(\n    {}, // switches\n    {}, // switchesOptions\n    [\"p\"], // selectors,\n    tmpEl, // fromEl\n    document, // toEl,\n    {} // options\n  );\n\n  t.equals(\n    container.innerHTML,\n    \"<p>New Text</p><span>No Change</span>\",\n    \"Elements correctly switched\"\n  );\n\n  t.end();\n});\n\ntape(\"test switchesSelectors when number of elements don't match\", function(t) {\n  var newTempDoc = document.implementation.createHTMLDocument();\n  var originalTempDoc = document.implementation.createHTMLDocument();\n\n  // a div container is used because swapping the containers\n  // will generate a new element, so things get weird\n  // using \"body\" generates a lot of testling cruft that I don't\n  // want so let's avoid that\n  var container = originalTempDoc.createElement(\"div\");\n  container.innerHTML = \"<p>Original text</p><span>No change</span>\";\n  originalTempDoc.body.appendChild(container);\n\n  var container2 = newTempDoc.createElement(\"div\");\n  container2.innerHTML =\n    \"<p>New text</p><p>More new text</p><span>New span</span>\";\n  newTempDoc.body.appendChild(container2);\n\n  var switchSelectorsFn = switchesSelectors.bind(\n    pjax,\n    {}, // switches\n    {}, // switchesOptions\n    [\"p\"], // selectors,\n    newTempDoc, // fromEl\n    originalTempDoc, // toEl,\n    {} // options\n  );\n\n  t.throws(\n    switchSelectorsFn,\n    null,\n    \"error was thrown properly since number of elements don't match\"\n  );\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/switch-selectors.js","layout":"false","title":"","comments":1,"_id":"clixi4672001a37jxfi7oh0ug","content":"var tape = require(\"tape\");\n\nvar switchesSelectors = require(\"../../lib/switches-selectors.js\");\nvar noop = require(\"../../lib/util/noop\");\n\nvar pjax = {\n  onSwitch: function() {\n    console.log(\"Switched\");\n  },\n  state: {},\n  log: noop\n};\n\n// @author darylteo\ntape(\"test switchesSelectors\", function(t) {\n  // switchesSelectors relies on a higher level function callback\n  // should really be passed in instead so I'll leave it here as a TODO:\n  var tmpEl = document.implementation.createHTMLDocument();\n\n  // a div container is used because swapping the containers\n  // will generate a new element, so things get weird\n  // using \"body\" generates a lot of testling cruft that I don't\n  // want so let's avoid that\n  var container = document.createElement(\"div\");\n  container.innerHTML = \"<p>Original Text</p><span>No Change</span>\";\n  document.body.appendChild(container);\n\n  var container2 = tmpEl.createElement(\"div\");\n  container2.innerHTML = \"<p>New Text</p><span>New Span</span>\";\n  tmpEl.body.appendChild(container2);\n\n  switchesSelectors.bind(pjax)(\n    {}, // switches\n    {}, // switchesOptions\n    [\"p\"], // selectors,\n    tmpEl, // fromEl\n    document, // toEl,\n    {} // options\n  );\n\n  t.equals(\n    container.innerHTML,\n    \"<p>New Text</p><span>No Change</span>\",\n    \"Elements correctly switched\"\n  );\n\n  t.end();\n});\n\ntape(\"test switchesSelectors when number of elements don't match\", function(t) {\n  var newTempDoc = document.implementation.createHTMLDocument();\n  var originalTempDoc = document.implementation.createHTMLDocument();\n\n  // a div container is used because swapping the containers\n  // will generate a new element, so things get weird\n  // using \"body\" generates a lot of testling cruft that I don't\n  // want so let's avoid that\n  var container = originalTempDoc.createElement(\"div\");\n  container.innerHTML = \"<p>Original text</p><span>No change</span>\";\n  originalTempDoc.body.appendChild(container);\n\n  var container2 = newTempDoc.createElement(\"div\");\n  container2.innerHTML =\n    \"<p>New text</p><p>More new text</p><span>New span</span>\";\n  newTempDoc.body.appendChild(container2);\n\n  var switchSelectorsFn = switchesSelectors.bind(\n    pjax,\n    {}, // switches\n    {}, // switchesOptions\n    [\"p\"], // selectors,\n    newTempDoc, // fromEl\n    originalTempDoc, // toEl,\n    {} // options\n  );\n\n  t.throws(\n    switchSelectorsFn,\n    null,\n    \"error was thrown properly since number of elements don't match\"\n  );\n\n  t.end();\n});\n","site":{"data":{}},"length":1920,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar switchesSelectors = require(\"../../lib/switches-selectors.js\");\nvar noop = require(\"../../lib/util/noop\");\n\nvar pjax = {\n  onSwitch: function() {\n    console.log(\"Switched\");\n  },\n  state: {},\n  log: noop\n};\n\n// @author darylteo\ntape(\"test switchesSelectors\", function(t) {\n  // switchesSelectors relies on a higher level function callback\n  // should really be passed in instead so I'll leave it here as a TODO:\n  var tmpEl = document.implementation.createHTMLDocument();\n\n  // a div container is used because swapping the containers\n  // will generate a new element, so things get weird\n  // using \"body\" generates a lot of testling cruft that I don't\n  // want so let's avoid that\n  var container = document.createElement(\"div\");\n  container.innerHTML = \"<p>Original Text</p><span>No Change</span>\";\n  document.body.appendChild(container);\n\n  var container2 = tmpEl.createElement(\"div\");\n  container2.innerHTML = \"<p>New Text</p><span>New Span</span>\";\n  tmpEl.body.appendChild(container2);\n\n  switchesSelectors.bind(pjax)(\n    {}, // switches\n    {}, // switchesOptions\n    [\"p\"], // selectors,\n    tmpEl, // fromEl\n    document, // toEl,\n    {} // options\n  );\n\n  t.equals(\n    container.innerHTML,\n    \"<p>New Text</p><span>No Change</span>\",\n    \"Elements correctly switched\"\n  );\n\n  t.end();\n});\n\ntape(\"test switchesSelectors when number of elements don't match\", function(t) {\n  var newTempDoc = document.implementation.createHTMLDocument();\n  var originalTempDoc = document.implementation.createHTMLDocument();\n\n  // a div container is used because swapping the containers\n  // will generate a new element, so things get weird\n  // using \"body\" generates a lot of testling cruft that I don't\n  // want so let's avoid that\n  var container = originalTempDoc.createElement(\"div\");\n  container.innerHTML = \"<p>Original text</p><span>No change</span>\";\n  originalTempDoc.body.appendChild(container);\n\n  var container2 = newTempDoc.createElement(\"div\");\n  container2.innerHTML =\n    \"<p>New text</p><p>More new text</p><span>New span</span>\";\n  newTempDoc.body.appendChild(container2);\n\n  var switchSelectorsFn = switchesSelectors.bind(\n    pjax,\n    {}, // switches\n    {}, // switchesOptions\n    [\"p\"], // selectors,\n    newTempDoc, // fromEl\n    originalTempDoc, // toEl,\n    {} // options\n  );\n\n  t.throws(\n    switchSelectorsFn,\n    null,\n    \"error was thrown properly since number of elements don't match\"\n  );\n\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\nvar switches = require(\"../../lib/switches\");\nvar noop = require(\"../../lib/util/noop\");\n\ntape(\"test outerHTML switch\", function(t) {\n  var outerHTML = switches.outerHTML;\n\n  var doc = document.implementation.createHTMLDocument();\n\n  var container = doc.createElement(\"div\");\n  container.innerHTML = \"<p id='p'>Original Text</p>\";\n  doc.body.appendChild(container);\n\n  var p = doc.createElement(\"p\");\n  p.innerHTML = \"New Text\";\n\n  outerHTML.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(\n    doc.querySelector(\"p\").innerHTML,\n    \"New Text\",\n    \"Elements correctly switched\"\n  );\n  t.notEquals(\n    doc.querySelector(\"p\").id,\n    \"p\",\n    \"other attributes overwritten correctly\"\n  );\n\n  t.end();\n});\n\ntape(\"test innerHTML switch\", function(t) {\n  var innerHTML = switches.innerHTML;\n\n  var doc = document.implementation.createHTMLDocument();\n\n  var container = doc.createElement(\"div\");\n  container.innerHTML = \"<p id='p'>Original Text</p>\";\n  doc.body.appendChild(container);\n\n  var p = doc.createElement(\"p\");\n  p.innerHTML = \"New Text\";\n  p.className = \"p\";\n\n  innerHTML.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(\n    doc.querySelector(\"p\").innerHTML,\n    \"New Text\",\n    \"Elements correctly switched\"\n  );\n  t.equals(doc.querySelector(\"p\").className, \"p\", \"classname set correctly\");\n  t.equals(doc.querySelector(\"p\").id, \"p\", \"other attributes set correctly\");\n\n  p.removeAttribute(\"class\");\n\n  innerHTML.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(doc.querySelector(\"p\").className, \"\", \"classname set correctly\");\n\n  t.end();\n});\n\ntape(\"test replaceNode switch\", function(t) {\n  var replaceNode = switches.replaceNode;\n\n  var doc = document.implementation.createHTMLDocument();\n\n  var container = doc.createElement(\"div\");\n  container.innerHTML = \"<p>Original Text</p>\";\n  doc.body.appendChild(container);\n\n  var p = doc.createElement(\"p\");\n  p.innerHTML = \"New Text\";\n\n  replaceNode.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(\n    doc.querySelector(\"div\").innerHTML,\n    \"<p>New Text</p>\",\n    \"Elements correctly switched\"\n  );\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/switches.js","raw":"var tape = require(\"tape\");\nvar switches = require(\"../../lib/switches\");\nvar noop = require(\"../../lib/util/noop\");\n\ntape(\"test outerHTML switch\", function(t) {\n  var outerHTML = switches.outerHTML;\n\n  var doc = document.implementation.createHTMLDocument();\n\n  var container = doc.createElement(\"div\");\n  container.innerHTML = \"<p id='p'>Original Text</p>\";\n  doc.body.appendChild(container);\n\n  var p = doc.createElement(\"p\");\n  p.innerHTML = \"New Text\";\n\n  outerHTML.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(\n    doc.querySelector(\"p\").innerHTML,\n    \"New Text\",\n    \"Elements correctly switched\"\n  );\n  t.notEquals(\n    doc.querySelector(\"p\").id,\n    \"p\",\n    \"other attributes overwritten correctly\"\n  );\n\n  t.end();\n});\n\ntape(\"test innerHTML switch\", function(t) {\n  var innerHTML = switches.innerHTML;\n\n  var doc = document.implementation.createHTMLDocument();\n\n  var container = doc.createElement(\"div\");\n  container.innerHTML = \"<p id='p'>Original Text</p>\";\n  doc.body.appendChild(container);\n\n  var p = doc.createElement(\"p\");\n  p.innerHTML = \"New Text\";\n  p.className = \"p\";\n\n  innerHTML.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(\n    doc.querySelector(\"p\").innerHTML,\n    \"New Text\",\n    \"Elements correctly switched\"\n  );\n  t.equals(doc.querySelector(\"p\").className, \"p\", \"classname set correctly\");\n  t.equals(doc.querySelector(\"p\").id, \"p\", \"other attributes set correctly\");\n\n  p.removeAttribute(\"class\");\n\n  innerHTML.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(doc.querySelector(\"p\").className, \"\", \"classname set correctly\");\n\n  t.end();\n});\n\ntape(\"test replaceNode switch\", function(t) {\n  var replaceNode = switches.replaceNode;\n\n  var doc = document.implementation.createHTMLDocument();\n\n  var container = doc.createElement(\"div\");\n  container.innerHTML = \"<p>Original Text</p>\";\n  doc.body.appendChild(container);\n\n  var p = doc.createElement(\"p\");\n  p.innerHTML = \"New Text\";\n\n  replaceNode.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(\n    doc.querySelector(\"div\").innerHTML,\n    \"<p>New Text</p>\",\n    \"Elements correctly switched\"\n  );\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/switches.js","layout":"false","title":"","comments":1,"_id":"clixi4673001b37jx9bgc4o95","content":"var tape = require(\"tape\");\nvar switches = require(\"../../lib/switches\");\nvar noop = require(\"../../lib/util/noop\");\n\ntape(\"test outerHTML switch\", function(t) {\n  var outerHTML = switches.outerHTML;\n\n  var doc = document.implementation.createHTMLDocument();\n\n  var container = doc.createElement(\"div\");\n  container.innerHTML = \"<p id='p'>Original Text</p>\";\n  doc.body.appendChild(container);\n\n  var p = doc.createElement(\"p\");\n  p.innerHTML = \"New Text\";\n\n  outerHTML.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(\n    doc.querySelector(\"p\").innerHTML,\n    \"New Text\",\n    \"Elements correctly switched\"\n  );\n  t.notEquals(\n    doc.querySelector(\"p\").id,\n    \"p\",\n    \"other attributes overwritten correctly\"\n  );\n\n  t.end();\n});\n\ntape(\"test innerHTML switch\", function(t) {\n  var innerHTML = switches.innerHTML;\n\n  var doc = document.implementation.createHTMLDocument();\n\n  var container = doc.createElement(\"div\");\n  container.innerHTML = \"<p id='p'>Original Text</p>\";\n  doc.body.appendChild(container);\n\n  var p = doc.createElement(\"p\");\n  p.innerHTML = \"New Text\";\n  p.className = \"p\";\n\n  innerHTML.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(\n    doc.querySelector(\"p\").innerHTML,\n    \"New Text\",\n    \"Elements correctly switched\"\n  );\n  t.equals(doc.querySelector(\"p\").className, \"p\", \"classname set correctly\");\n  t.equals(doc.querySelector(\"p\").id, \"p\", \"other attributes set correctly\");\n\n  p.removeAttribute(\"class\");\n\n  innerHTML.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(doc.querySelector(\"p\").className, \"\", \"classname set correctly\");\n\n  t.end();\n});\n\ntape(\"test replaceNode switch\", function(t) {\n  var replaceNode = switches.replaceNode;\n\n  var doc = document.implementation.createHTMLDocument();\n\n  var container = doc.createElement(\"div\");\n  container.innerHTML = \"<p>Original Text</p>\";\n  doc.body.appendChild(container);\n\n  var p = doc.createElement(\"p\");\n  p.innerHTML = \"New Text\";\n\n  replaceNode.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(\n    doc.querySelector(\"div\").innerHTML,\n    \"<p>New Text</p>\",\n    \"Elements correctly switched\"\n  );\n\n  t.end();\n});\n","site":{"data":{}},"length":1792,"excerpt":"","more":"var tape = require(\"tape\");\nvar switches = require(\"../../lib/switches\");\nvar noop = require(\"../../lib/util/noop\");\n\ntape(\"test outerHTML switch\", function(t) {\n  var outerHTML = switches.outerHTML;\n\n  var doc = document.implementation.createHTMLDocument();\n\n  var container = doc.createElement(\"div\");\n  container.innerHTML = \"<p id='p'>Original Text</p>\";\n  doc.body.appendChild(container);\n\n  var p = doc.createElement(\"p\");\n  p.innerHTML = \"New Text\";\n\n  outerHTML.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(\n    doc.querySelector(\"p\").innerHTML,\n    \"New Text\",\n    \"Elements correctly switched\"\n  );\n  t.notEquals(\n    doc.querySelector(\"p\").id,\n    \"p\",\n    \"other attributes overwritten correctly\"\n  );\n\n  t.end();\n});\n\ntape(\"test innerHTML switch\", function(t) {\n  var innerHTML = switches.innerHTML;\n\n  var doc = document.implementation.createHTMLDocument();\n\n  var container = doc.createElement(\"div\");\n  container.innerHTML = \"<p id='p'>Original Text</p>\";\n  doc.body.appendChild(container);\n\n  var p = doc.createElement(\"p\");\n  p.innerHTML = \"New Text\";\n  p.className = \"p\";\n\n  innerHTML.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(\n    doc.querySelector(\"p\").innerHTML,\n    \"New Text\",\n    \"Elements correctly switched\"\n  );\n  t.equals(doc.querySelector(\"p\").className, \"p\", \"classname set correctly\");\n  t.equals(doc.querySelector(\"p\").id, \"p\", \"other attributes set correctly\");\n\n  p.removeAttribute(\"class\");\n\n  innerHTML.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(doc.querySelector(\"p\").className, \"\", \"classname set correctly\");\n\n  t.end();\n});\n\ntape(\"test replaceNode switch\", function(t) {\n  var replaceNode = switches.replaceNode;\n\n  var doc = document.implementation.createHTMLDocument();\n\n  var container = doc.createElement(\"div\");\n  container.innerHTML = \"<p>Original Text</p>\";\n  doc.body.appendChild(container);\n\n  var p = doc.createElement(\"p\");\n  p.innerHTML = \"New Text\";\n\n  replaceNode.bind({\n    onSwitch: noop\n  })(doc.querySelector(\"p\"), p);\n\n  t.equals(\n    doc.querySelector(\"div\").innerHTML,\n    \"<p>New Text</p>\",\n    \"Elements correctly switched\"\n  );\n\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar uniqueid = require(\"../../lib/uniqueid.js\");\n\ntape(\"test uniqueid\", function(t) {\n  var a = uniqueid();\n  var b = uniqueid();\n\n  t.notEqual(a, b, \"Two calls to uniqueid produce different values\");\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/uniqueid.js","raw":"var tape = require(\"tape\");\n\nvar uniqueid = require(\"../../lib/uniqueid.js\");\n\ntape(\"test uniqueid\", function(t) {\n  var a = uniqueid();\n  var b = uniqueid();\n\n  t.notEqual(a, b, \"Two calls to uniqueid produce different values\");\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/uniqueid.js","layout":"false","title":"","comments":1,"_id":"clixi4673001c37jx7lj4hs1u","content":"var tape = require(\"tape\");\n\nvar uniqueid = require(\"../../lib/uniqueid.js\");\n\ntape(\"test uniqueid\", function(t) {\n  var a = uniqueid();\n  var b = uniqueid();\n\n  t.notEqual(a, b, \"Two calls to uniqueid produce different values\");\n\n  t.end();\n});\n","site":{"data":{}},"length":203,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar uniqueid = require(\"../../lib/uniqueid.js\");\n\ntape(\"test uniqueid\", function(t) {\n  var a = uniqueid();\n  var b = uniqueid();\n\n  t.notEqual(a, b, \"Two calls to uniqueid produce different values\");\n\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar on = require(\"../../../lib/events/on\");\nvar trigger = require(\"../../../lib/events/trigger\");\nvar attachForm = require(\"../../../lib/proto/attach-form\");\n\nvar attr = \"data-pjax-state\";\n\ntape(\"test attach form prototype method\", function(t) {\n  var form = document.createElement(\"form\");\n  var loadUrlCalled = false;\n\n  attachForm.call(\n    {\n      options: {\n        currentUrlFullReload: true\n      },\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    form\n  );\n\n  var internalUri =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n\n  form.action = \"http://external.com/\";\n  trigger(form, \"submit\");\n  t.equal(form.getAttribute(attr), \"external\", \"external url stop behavior\");\n\n  form.action = internalUri + \"#anchor\";\n  trigger(form, \"submit\");\n  t.equal(form.getAttribute(attr), \"anchor\", \"internal anchor stop behavior\");\n\n  window.location.hash = \"#anchor\";\n  form.action = internalUri + \"#another-anchor\";\n  trigger(form, \"submit\");\n  t.equal(form.getAttribute(attr), \"anchor\", \"different anchors stop behavior\");\n  window.location.hash = \"\";\n\n  form.action = internalUri + \"#\";\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"anchor-empty\",\n    \"empty anchor stop behavior\"\n  );\n\n  form.action = window.location.href;\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"reload\",\n    \"submitting when currentUrlFullReload is true will submit normally, without XHR\"\n  );\n  t.equal(loadUrlCalled, false, \"loadUrl() not called\");\n\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n  form.method = \"POST\";\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"submit\",\n    \"triggering a POST request to the next page\"\n  );\n  t.equal(loadUrlCalled, true, \"loadUrl() called correctly\");\n\n  loadUrlCalled = false;\n  form.setAttribute(attr, \"\");\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n  form.method = \"GET\";\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"submit\",\n    \"triggering a GET request to the next page\"\n  );\n  t.equal(loadUrlCalled, true, \"loadUrl() called correctly\");\n\n  t.end();\n});\n\ntape(\"test attach form preventDefaulted events\", function(t) {\n  var loadUrlCalled = false;\n  var form = document.createElement(\"form\");\n\n  // This needs to be before the call to attachForm()\n  on(form, \"submit\", function(event) {\n    event.preventDefault();\n  });\n\n  attachForm.call(\n    {\n      options: {},\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    form\n  );\n\n  form.action = \"#\";\n  trigger(form, \"submit\");\n  t.equal(\n    loadUrlCalled,\n    false,\n    \"events that are preventDefaulted should not fire callback\"\n  );\n\n  t.end();\n});\n\ntape(\"test options are not modified by attachForm\", function(t) {\n  var form = document.createElement(\"form\");\n  var options = { foo: \"bar\" };\n  var loadUrl = function() {};\n\n  attachForm.call({ options: options, loadUrl: loadUrl }, form);\n\n  form.action =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n  form.method = \"GET\";\n  trigger(form, \"submit\");\n\n  t.equal(\n    1,\n    Object.keys(options).length,\n    \"options object that is passed in should not be modified\"\n  );\n  t.equal(\n    \"bar\",\n    options.foo,\n    \"options object that is passed in should not be modified\"\n  );\n\n  t.end();\n});\n\ntape(\"test form elements parsed correctly\", function(t) {\n  t.plan(1);\n\n  var form = document.createElement(\"form\");\n  var input = document.createElement(\"input\");\n  input.name = \"input\";\n  input.value = \"value\";\n  form.appendChild(input);\n\n  var params = [\n    {\n      name: \"input\",\n      value: \"value\"\n    }\n  ];\n  var pjax = {\n    options: {},\n    loadUrl: function(href, options) {\n      t.same(\n        options.requestOptions.requestParams,\n        params,\n        \"form elements parsed correctly\"\n      );\n    }\n  };\n\n  attachForm.call(pjax, form);\n\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n\n  trigger(form, \"submit\");\n  // see loadUrl defined above\n\n  t.end();\n});\n\ntape('test form.enctype=\"multipart/form-data\"', function(t) {\n  t.plan(4);\n\n  var form = document.createElement(\"form\");\n  form.enctype = \"multipart/form-data\";\n  var input = document.createElement(\"input\");\n  input.name = \"input\";\n  input.value = \"value\";\n  form.appendChild(input);\n\n  var pjax = {\n    options: {},\n    loadUrl: function(href, options) {\n      t.equals(\n        options.requestOptions.requestParams,\n        undefined,\n        \"form elements not parsed manually\"\n      );\n      t.true(\n        options.requestOptions.formData instanceof FormData,\n        \"requestOptions.formData is a FormData\"\n      );\n      t.equals(\n        Array.from(options.requestOptions.formData.entries()).length,\n        1,\n        \"correct number of FormData elements\"\n      );\n      t.equals(\n        options.requestOptions.formData.get(\"input\"),\n        \"value\",\n        \"FormData element value set correctly\"\n      );\n    }\n  };\n\n  attachForm.call(pjax, form);\n\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n\n  trigger(form, \"submit\");\n  // see loadUrl defined above\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/proto/attach-form.js","raw":"var tape = require(\"tape\");\n\nvar on = require(\"../../../lib/events/on\");\nvar trigger = require(\"../../../lib/events/trigger\");\nvar attachForm = require(\"../../../lib/proto/attach-form\");\n\nvar attr = \"data-pjax-state\";\n\ntape(\"test attach form prototype method\", function(t) {\n  var form = document.createElement(\"form\");\n  var loadUrlCalled = false;\n\n  attachForm.call(\n    {\n      options: {\n        currentUrlFullReload: true\n      },\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    form\n  );\n\n  var internalUri =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n\n  form.action = \"http://external.com/\";\n  trigger(form, \"submit\");\n  t.equal(form.getAttribute(attr), \"external\", \"external url stop behavior\");\n\n  form.action = internalUri + \"#anchor\";\n  trigger(form, \"submit\");\n  t.equal(form.getAttribute(attr), \"anchor\", \"internal anchor stop behavior\");\n\n  window.location.hash = \"#anchor\";\n  form.action = internalUri + \"#another-anchor\";\n  trigger(form, \"submit\");\n  t.equal(form.getAttribute(attr), \"anchor\", \"different anchors stop behavior\");\n  window.location.hash = \"\";\n\n  form.action = internalUri + \"#\";\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"anchor-empty\",\n    \"empty anchor stop behavior\"\n  );\n\n  form.action = window.location.href;\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"reload\",\n    \"submitting when currentUrlFullReload is true will submit normally, without XHR\"\n  );\n  t.equal(loadUrlCalled, false, \"loadUrl() not called\");\n\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n  form.method = \"POST\";\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"submit\",\n    \"triggering a POST request to the next page\"\n  );\n  t.equal(loadUrlCalled, true, \"loadUrl() called correctly\");\n\n  loadUrlCalled = false;\n  form.setAttribute(attr, \"\");\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n  form.method = \"GET\";\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"submit\",\n    \"triggering a GET request to the next page\"\n  );\n  t.equal(loadUrlCalled, true, \"loadUrl() called correctly\");\n\n  t.end();\n});\n\ntape(\"test attach form preventDefaulted events\", function(t) {\n  var loadUrlCalled = false;\n  var form = document.createElement(\"form\");\n\n  // This needs to be before the call to attachForm()\n  on(form, \"submit\", function(event) {\n    event.preventDefault();\n  });\n\n  attachForm.call(\n    {\n      options: {},\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    form\n  );\n\n  form.action = \"#\";\n  trigger(form, \"submit\");\n  t.equal(\n    loadUrlCalled,\n    false,\n    \"events that are preventDefaulted should not fire callback\"\n  );\n\n  t.end();\n});\n\ntape(\"test options are not modified by attachForm\", function(t) {\n  var form = document.createElement(\"form\");\n  var options = { foo: \"bar\" };\n  var loadUrl = function() {};\n\n  attachForm.call({ options: options, loadUrl: loadUrl }, form);\n\n  form.action =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n  form.method = \"GET\";\n  trigger(form, \"submit\");\n\n  t.equal(\n    1,\n    Object.keys(options).length,\n    \"options object that is passed in should not be modified\"\n  );\n  t.equal(\n    \"bar\",\n    options.foo,\n    \"options object that is passed in should not be modified\"\n  );\n\n  t.end();\n});\n\ntape(\"test form elements parsed correctly\", function(t) {\n  t.plan(1);\n\n  var form = document.createElement(\"form\");\n  var input = document.createElement(\"input\");\n  input.name = \"input\";\n  input.value = \"value\";\n  form.appendChild(input);\n\n  var params = [\n    {\n      name: \"input\",\n      value: \"value\"\n    }\n  ];\n  var pjax = {\n    options: {},\n    loadUrl: function(href, options) {\n      t.same(\n        options.requestOptions.requestParams,\n        params,\n        \"form elements parsed correctly\"\n      );\n    }\n  };\n\n  attachForm.call(pjax, form);\n\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n\n  trigger(form, \"submit\");\n  // see loadUrl defined above\n\n  t.end();\n});\n\ntape('test form.enctype=\"multipart/form-data\"', function(t) {\n  t.plan(4);\n\n  var form = document.createElement(\"form\");\n  form.enctype = \"multipart/form-data\";\n  var input = document.createElement(\"input\");\n  input.name = \"input\";\n  input.value = \"value\";\n  form.appendChild(input);\n\n  var pjax = {\n    options: {},\n    loadUrl: function(href, options) {\n      t.equals(\n        options.requestOptions.requestParams,\n        undefined,\n        \"form elements not parsed manually\"\n      );\n      t.true(\n        options.requestOptions.formData instanceof FormData,\n        \"requestOptions.formData is a FormData\"\n      );\n      t.equals(\n        Array.from(options.requestOptions.formData.entries()).length,\n        1,\n        \"correct number of FormData elements\"\n      );\n      t.equals(\n        options.requestOptions.formData.get(\"input\"),\n        \"value\",\n        \"FormData element value set correctly\"\n      );\n    }\n  };\n\n  attachForm.call(pjax, form);\n\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n\n  trigger(form, \"submit\");\n  // see loadUrl defined above\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/proto/attach-form.js","layout":"false","title":"","comments":1,"_id":"clixi4674001d37jx5ij6h68t","content":"var tape = require(\"tape\");\n\nvar on = require(\"../../../lib/events/on\");\nvar trigger = require(\"../../../lib/events/trigger\");\nvar attachForm = require(\"../../../lib/proto/attach-form\");\n\nvar attr = \"data-pjax-state\";\n\ntape(\"test attach form prototype method\", function(t) {\n  var form = document.createElement(\"form\");\n  var loadUrlCalled = false;\n\n  attachForm.call(\n    {\n      options: {\n        currentUrlFullReload: true\n      },\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    form\n  );\n\n  var internalUri =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n\n  form.action = \"http://external.com/\";\n  trigger(form, \"submit\");\n  t.equal(form.getAttribute(attr), \"external\", \"external url stop behavior\");\n\n  form.action = internalUri + \"#anchor\";\n  trigger(form, \"submit\");\n  t.equal(form.getAttribute(attr), \"anchor\", \"internal anchor stop behavior\");\n\n  window.location.hash = \"#anchor\";\n  form.action = internalUri + \"#another-anchor\";\n  trigger(form, \"submit\");\n  t.equal(form.getAttribute(attr), \"anchor\", \"different anchors stop behavior\");\n  window.location.hash = \"\";\n\n  form.action = internalUri + \"#\";\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"anchor-empty\",\n    \"empty anchor stop behavior\"\n  );\n\n  form.action = window.location.href;\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"reload\",\n    \"submitting when currentUrlFullReload is true will submit normally, without XHR\"\n  );\n  t.equal(loadUrlCalled, false, \"loadUrl() not called\");\n\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n  form.method = \"POST\";\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"submit\",\n    \"triggering a POST request to the next page\"\n  );\n  t.equal(loadUrlCalled, true, \"loadUrl() called correctly\");\n\n  loadUrlCalled = false;\n  form.setAttribute(attr, \"\");\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n  form.method = \"GET\";\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"submit\",\n    \"triggering a GET request to the next page\"\n  );\n  t.equal(loadUrlCalled, true, \"loadUrl() called correctly\");\n\n  t.end();\n});\n\ntape(\"test attach form preventDefaulted events\", function(t) {\n  var loadUrlCalled = false;\n  var form = document.createElement(\"form\");\n\n  // This needs to be before the call to attachForm()\n  on(form, \"submit\", function(event) {\n    event.preventDefault();\n  });\n\n  attachForm.call(\n    {\n      options: {},\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    form\n  );\n\n  form.action = \"#\";\n  trigger(form, \"submit\");\n  t.equal(\n    loadUrlCalled,\n    false,\n    \"events that are preventDefaulted should not fire callback\"\n  );\n\n  t.end();\n});\n\ntape(\"test options are not modified by attachForm\", function(t) {\n  var form = document.createElement(\"form\");\n  var options = { foo: \"bar\" };\n  var loadUrl = function() {};\n\n  attachForm.call({ options: options, loadUrl: loadUrl }, form);\n\n  form.action =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n  form.method = \"GET\";\n  trigger(form, \"submit\");\n\n  t.equal(\n    1,\n    Object.keys(options).length,\n    \"options object that is passed in should not be modified\"\n  );\n  t.equal(\n    \"bar\",\n    options.foo,\n    \"options object that is passed in should not be modified\"\n  );\n\n  t.end();\n});\n\ntape(\"test form elements parsed correctly\", function(t) {\n  t.plan(1);\n\n  var form = document.createElement(\"form\");\n  var input = document.createElement(\"input\");\n  input.name = \"input\";\n  input.value = \"value\";\n  form.appendChild(input);\n\n  var params = [\n    {\n      name: \"input\",\n      value: \"value\"\n    }\n  ];\n  var pjax = {\n    options: {},\n    loadUrl: function(href, options) {\n      t.same(\n        options.requestOptions.requestParams,\n        params,\n        \"form elements parsed correctly\"\n      );\n    }\n  };\n\n  attachForm.call(pjax, form);\n\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n\n  trigger(form, \"submit\");\n  // see loadUrl defined above\n\n  t.end();\n});\n\ntape('test form.enctype=\"multipart/form-data\"', function(t) {\n  t.plan(4);\n\n  var form = document.createElement(\"form\");\n  form.enctype = \"multipart/form-data\";\n  var input = document.createElement(\"input\");\n  input.name = \"input\";\n  input.value = \"value\";\n  form.appendChild(input);\n\n  var pjax = {\n    options: {},\n    loadUrl: function(href, options) {\n      t.equals(\n        options.requestOptions.requestParams,\n        undefined,\n        \"form elements not parsed manually\"\n      );\n      t.true(\n        options.requestOptions.formData instanceof FormData,\n        \"requestOptions.formData is a FormData\"\n      );\n      t.equals(\n        Array.from(options.requestOptions.formData.entries()).length,\n        1,\n        \"correct number of FormData elements\"\n      );\n      t.equals(\n        options.requestOptions.formData.get(\"input\"),\n        \"value\",\n        \"FormData element value set correctly\"\n      );\n    }\n  };\n\n  attachForm.call(pjax, form);\n\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n\n  trigger(form, \"submit\");\n  // see loadUrl defined above\n\n  t.end();\n});\n","site":{"data":{}},"length":4217,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar on = require(\"../../../lib/events/on\");\nvar trigger = require(\"../../../lib/events/trigger\");\nvar attachForm = require(\"../../../lib/proto/attach-form\");\n\nvar attr = \"data-pjax-state\";\n\ntape(\"test attach form prototype method\", function(t) {\n  var form = document.createElement(\"form\");\n  var loadUrlCalled = false;\n\n  attachForm.call(\n    {\n      options: {\n        currentUrlFullReload: true\n      },\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    form\n  );\n\n  var internalUri =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n\n  form.action = \"http://external.com/\";\n  trigger(form, \"submit\");\n  t.equal(form.getAttribute(attr), \"external\", \"external url stop behavior\");\n\n  form.action = internalUri + \"#anchor\";\n  trigger(form, \"submit\");\n  t.equal(form.getAttribute(attr), \"anchor\", \"internal anchor stop behavior\");\n\n  window.location.hash = \"#anchor\";\n  form.action = internalUri + \"#another-anchor\";\n  trigger(form, \"submit\");\n  t.equal(form.getAttribute(attr), \"anchor\", \"different anchors stop behavior\");\n  window.location.hash = \"\";\n\n  form.action = internalUri + \"#\";\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"anchor-empty\",\n    \"empty anchor stop behavior\"\n  );\n\n  form.action = window.location.href;\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"reload\",\n    \"submitting when currentUrlFullReload is true will submit normally, without XHR\"\n  );\n  t.equal(loadUrlCalled, false, \"loadUrl() not called\");\n\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n  form.method = \"POST\";\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"submit\",\n    \"triggering a POST request to the next page\"\n  );\n  t.equal(loadUrlCalled, true, \"loadUrl() called correctly\");\n\n  loadUrlCalled = false;\n  form.setAttribute(attr, \"\");\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n  form.method = \"GET\";\n  trigger(form, \"submit\");\n  t.equal(\n    form.getAttribute(attr),\n    \"submit\",\n    \"triggering a GET request to the next page\"\n  );\n  t.equal(loadUrlCalled, true, \"loadUrl() called correctly\");\n\n  t.end();\n});\n\ntape(\"test attach form preventDefaulted events\", function(t) {\n  var loadUrlCalled = false;\n  var form = document.createElement(\"form\");\n\n  // This needs to be before the call to attachForm()\n  on(form, \"submit\", function(event) {\n    event.preventDefault();\n  });\n\n  attachForm.call(\n    {\n      options: {},\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    form\n  );\n\n  form.action = \"#\";\n  trigger(form, \"submit\");\n  t.equal(\n    loadUrlCalled,\n    false,\n    \"events that are preventDefaulted should not fire callback\"\n  );\n\n  t.end();\n});\n\ntape(\"test options are not modified by attachForm\", function(t) {\n  var form = document.createElement(\"form\");\n  var options = { foo: \"bar\" };\n  var loadUrl = function() {};\n\n  attachForm.call({ options: options, loadUrl: loadUrl }, form);\n\n  form.action =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n  form.method = \"GET\";\n  trigger(form, \"submit\");\n\n  t.equal(\n    1,\n    Object.keys(options).length,\n    \"options object that is passed in should not be modified\"\n  );\n  t.equal(\n    \"bar\",\n    options.foo,\n    \"options object that is passed in should not be modified\"\n  );\n\n  t.end();\n});\n\ntape(\"test form elements parsed correctly\", function(t) {\n  t.plan(1);\n\n  var form = document.createElement(\"form\");\n  var input = document.createElement(\"input\");\n  input.name = \"input\";\n  input.value = \"value\";\n  form.appendChild(input);\n\n  var params = [\n    {\n      name: \"input\",\n      value: \"value\"\n    }\n  ];\n  var pjax = {\n    options: {},\n    loadUrl: function(href, options) {\n      t.same(\n        options.requestOptions.requestParams,\n        params,\n        \"form elements parsed correctly\"\n      );\n    }\n  };\n\n  attachForm.call(pjax, form);\n\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n\n  trigger(form, \"submit\");\n  // see loadUrl defined above\n\n  t.end();\n});\n\ntape('test form.enctype=\"multipart/form-data\"', function(t) {\n  t.plan(4);\n\n  var form = document.createElement(\"form\");\n  form.enctype = \"multipart/form-data\";\n  var input = document.createElement(\"input\");\n  input.name = \"input\";\n  input.value = \"value\";\n  form.appendChild(input);\n\n  var pjax = {\n    options: {},\n    loadUrl: function(href, options) {\n      t.equals(\n        options.requestOptions.requestParams,\n        undefined,\n        \"form elements not parsed manually\"\n      );\n      t.true(\n        options.requestOptions.formData instanceof FormData,\n        \"requestOptions.formData is a FormData\"\n      );\n      t.equals(\n        Array.from(options.requestOptions.formData.entries()).length,\n        1,\n        \"correct number of FormData elements\"\n      );\n      t.equals(\n        options.requestOptions.formData.get(\"input\"),\n        \"value\",\n        \"FormData element value set correctly\"\n      );\n    }\n  };\n\n  attachForm.call(pjax, form);\n\n  form.action =\n    window.location.protocol + \"//\" + window.location.host + \"/internal\";\n\n  trigger(form, \"submit\");\n  // see loadUrl defined above\n\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar on = require(\"../../../lib/events/on\");\nvar trigger = require(\"../../../lib/events/trigger\");\nvar attachLink = require(\"../../../lib/proto/attach-link\");\n\nvar attr = \"data-pjax-state\";\n\ntape(\"test attach link prototype method\", function(t) {\n  var a = document.createElement(\"a\");\n  var loadUrlCalled = false;\n\n  attachLink.call(\n    {\n      options: {},\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    a\n  );\n\n  var internalUri =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n\n  a.href = internalUri;\n  trigger(a, \"click\", { metaKey: true });\n  t.equal(a.getAttribute(attr), \"modifier\", \"event key modifier stop behavior\");\n\n  a.href = \"http://external.com/\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"external\", \"external url stop behavior\");\n\n  window.location.hash = \"#anchor\";\n  a.href = internalUri + \"#anchor\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"anchor\", \"internal anchor stop behavior\");\n\n  a.href = internalUri + \"#another-anchor\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"anchor\", \"different anchors stop behavior\");\n  window.location.hash = \"\";\n\n  a.href = internalUri + \"#\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"anchor-empty\", \"empty anchor stop behavior\");\n\n  a.href = window.location.protocol + \"//\" + window.location.host + \"/internal\";\n  trigger(a, \"click\");\n  t.equals(\n    a.getAttribute(attr),\n    \"load\",\n    \"triggering an internal link sets the state attribute to 'load'\"\n  );\n  t.equals(\n    loadUrlCalled,\n    true,\n    \"triggering an internal link actually loads the page\"\n  );\n\n  t.end();\n});\n\ntape(\"test attach link preventDefaulted events\", function(t) {\n  var loadUrlCalled = false;\n  var a = document.createElement(\"a\");\n\n  // This needs to be before the call to attachLink()\n  on(a, \"click\", function(event) {\n    event.preventDefault();\n  });\n\n  attachLink.call(\n    {\n      options: {},\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    a\n  );\n\n  a.href = \"#\";\n  trigger(a, \"click\");\n  t.equal(\n    loadUrlCalled,\n    false,\n    \"events that are preventDefaulted should not fire callback\"\n  );\n\n  t.end();\n});\n\ntape(\"test options are not modified by attachLink\", function(t) {\n  var a = document.createElement(\"a\");\n  var options = { foo: \"bar\" };\n  var loadUrl = function() {};\n\n  attachLink.call({ options: options, loadUrl: loadUrl }, a);\n\n  a.href =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n\n  trigger(a, \"click\");\n\n  t.equal(\n    1,\n    Object.keys(options).length,\n    \"options object that is passed in should not be modified\"\n  );\n  t.equal(\n    \"bar\",\n    options.foo,\n    \"options object that is passed in should not be modified\"\n  );\n\n  t.end();\n});\n\ntape(\"test link triggered by keyboard\", function(t) {\n  var a = document.createElement(\"a\");\n  var pjax = {\n    options: {},\n    loadUrl: function() {\n      t.equal(\n        a.getAttribute(attr),\n        \"load\",\n        \"triggering a internal link actually loads the page\"\n      );\n    }\n  };\n\n  t.plan(3);\n\n  attachLink.call(pjax, a);\n\n  a.href = window.location.protocol + \"//\" + window.location.host + \"/internal\";\n\n  trigger(a, \"keyup\", { keyCode: 14 });\n  t.equal(\n    a.getAttribute(attr),\n    \"\",\n    \"keycode other than 13 doesn't trigger anything\"\n  );\n\n  trigger(a, \"keyup\", { keyCode: 13, metaKey: true });\n  t.equal(a.getAttribute(attr), \"modifier\", \"event key modifier stop behavior\");\n\n  trigger(a, \"keyup\", { keyCode: 13 });\n  // see loadUrl defined above\n\n  t.end();\n});\n\ntape(\n  \"test link with the same URL as the current one, when currentUrlFullReload set to true\",\n  function(t) {\n    var a = document.createElement(\"a\");\n    var pjax = {\n      options: {\n        currentUrlFullReload: true\n      },\n      reload: function() {\n        t.pass(\"this.reload() was called correctly\");\n      },\n      loadUrl: function() {\n        t.fail(\"loadUrl() was called wrongly\");\n      }\n    };\n\n    t.plan(2);\n\n    attachLink.call(pjax, a);\n\n    a.href = window.location.href;\n\n    trigger(a, \"click\");\n    t.equal(a.getAttribute(attr), \"reload\", \"reload stop behavior\");\n\n    t.end();\n  }\n);\n","source":"lib/pjax/tests/lib/proto/attach-link.js","raw":"var tape = require(\"tape\");\n\nvar on = require(\"../../../lib/events/on\");\nvar trigger = require(\"../../../lib/events/trigger\");\nvar attachLink = require(\"../../../lib/proto/attach-link\");\n\nvar attr = \"data-pjax-state\";\n\ntape(\"test attach link prototype method\", function(t) {\n  var a = document.createElement(\"a\");\n  var loadUrlCalled = false;\n\n  attachLink.call(\n    {\n      options: {},\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    a\n  );\n\n  var internalUri =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n\n  a.href = internalUri;\n  trigger(a, \"click\", { metaKey: true });\n  t.equal(a.getAttribute(attr), \"modifier\", \"event key modifier stop behavior\");\n\n  a.href = \"http://external.com/\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"external\", \"external url stop behavior\");\n\n  window.location.hash = \"#anchor\";\n  a.href = internalUri + \"#anchor\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"anchor\", \"internal anchor stop behavior\");\n\n  a.href = internalUri + \"#another-anchor\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"anchor\", \"different anchors stop behavior\");\n  window.location.hash = \"\";\n\n  a.href = internalUri + \"#\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"anchor-empty\", \"empty anchor stop behavior\");\n\n  a.href = window.location.protocol + \"//\" + window.location.host + \"/internal\";\n  trigger(a, \"click\");\n  t.equals(\n    a.getAttribute(attr),\n    \"load\",\n    \"triggering an internal link sets the state attribute to 'load'\"\n  );\n  t.equals(\n    loadUrlCalled,\n    true,\n    \"triggering an internal link actually loads the page\"\n  );\n\n  t.end();\n});\n\ntape(\"test attach link preventDefaulted events\", function(t) {\n  var loadUrlCalled = false;\n  var a = document.createElement(\"a\");\n\n  // This needs to be before the call to attachLink()\n  on(a, \"click\", function(event) {\n    event.preventDefault();\n  });\n\n  attachLink.call(\n    {\n      options: {},\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    a\n  );\n\n  a.href = \"#\";\n  trigger(a, \"click\");\n  t.equal(\n    loadUrlCalled,\n    false,\n    \"events that are preventDefaulted should not fire callback\"\n  );\n\n  t.end();\n});\n\ntape(\"test options are not modified by attachLink\", function(t) {\n  var a = document.createElement(\"a\");\n  var options = { foo: \"bar\" };\n  var loadUrl = function() {};\n\n  attachLink.call({ options: options, loadUrl: loadUrl }, a);\n\n  a.href =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n\n  trigger(a, \"click\");\n\n  t.equal(\n    1,\n    Object.keys(options).length,\n    \"options object that is passed in should not be modified\"\n  );\n  t.equal(\n    \"bar\",\n    options.foo,\n    \"options object that is passed in should not be modified\"\n  );\n\n  t.end();\n});\n\ntape(\"test link triggered by keyboard\", function(t) {\n  var a = document.createElement(\"a\");\n  var pjax = {\n    options: {},\n    loadUrl: function() {\n      t.equal(\n        a.getAttribute(attr),\n        \"load\",\n        \"triggering a internal link actually loads the page\"\n      );\n    }\n  };\n\n  t.plan(3);\n\n  attachLink.call(pjax, a);\n\n  a.href = window.location.protocol + \"//\" + window.location.host + \"/internal\";\n\n  trigger(a, \"keyup\", { keyCode: 14 });\n  t.equal(\n    a.getAttribute(attr),\n    \"\",\n    \"keycode other than 13 doesn't trigger anything\"\n  );\n\n  trigger(a, \"keyup\", { keyCode: 13, metaKey: true });\n  t.equal(a.getAttribute(attr), \"modifier\", \"event key modifier stop behavior\");\n\n  trigger(a, \"keyup\", { keyCode: 13 });\n  // see loadUrl defined above\n\n  t.end();\n});\n\ntape(\n  \"test link with the same URL as the current one, when currentUrlFullReload set to true\",\n  function(t) {\n    var a = document.createElement(\"a\");\n    var pjax = {\n      options: {\n        currentUrlFullReload: true\n      },\n      reload: function() {\n        t.pass(\"this.reload() was called correctly\");\n      },\n      loadUrl: function() {\n        t.fail(\"loadUrl() was called wrongly\");\n      }\n    };\n\n    t.plan(2);\n\n    attachLink.call(pjax, a);\n\n    a.href = window.location.href;\n\n    trigger(a, \"click\");\n    t.equal(a.getAttribute(attr), \"reload\", \"reload stop behavior\");\n\n    t.end();\n  }\n);\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/proto/attach-link.js","layout":"false","title":"","comments":1,"_id":"clixi4674001e37jx22qnecth","content":"var tape = require(\"tape\");\n\nvar on = require(\"../../../lib/events/on\");\nvar trigger = require(\"../../../lib/events/trigger\");\nvar attachLink = require(\"../../../lib/proto/attach-link\");\n\nvar attr = \"data-pjax-state\";\n\ntape(\"test attach link prototype method\", function(t) {\n  var a = document.createElement(\"a\");\n  var loadUrlCalled = false;\n\n  attachLink.call(\n    {\n      options: {},\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    a\n  );\n\n  var internalUri =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n\n  a.href = internalUri;\n  trigger(a, \"click\", { metaKey: true });\n  t.equal(a.getAttribute(attr), \"modifier\", \"event key modifier stop behavior\");\n\n  a.href = \"http://external.com/\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"external\", \"external url stop behavior\");\n\n  window.location.hash = \"#anchor\";\n  a.href = internalUri + \"#anchor\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"anchor\", \"internal anchor stop behavior\");\n\n  a.href = internalUri + \"#another-anchor\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"anchor\", \"different anchors stop behavior\");\n  window.location.hash = \"\";\n\n  a.href = internalUri + \"#\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"anchor-empty\", \"empty anchor stop behavior\");\n\n  a.href = window.location.protocol + \"//\" + window.location.host + \"/internal\";\n  trigger(a, \"click\");\n  t.equals(\n    a.getAttribute(attr),\n    \"load\",\n    \"triggering an internal link sets the state attribute to 'load'\"\n  );\n  t.equals(\n    loadUrlCalled,\n    true,\n    \"triggering an internal link actually loads the page\"\n  );\n\n  t.end();\n});\n\ntape(\"test attach link preventDefaulted events\", function(t) {\n  var loadUrlCalled = false;\n  var a = document.createElement(\"a\");\n\n  // This needs to be before the call to attachLink()\n  on(a, \"click\", function(event) {\n    event.preventDefault();\n  });\n\n  attachLink.call(\n    {\n      options: {},\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    a\n  );\n\n  a.href = \"#\";\n  trigger(a, \"click\");\n  t.equal(\n    loadUrlCalled,\n    false,\n    \"events that are preventDefaulted should not fire callback\"\n  );\n\n  t.end();\n});\n\ntape(\"test options are not modified by attachLink\", function(t) {\n  var a = document.createElement(\"a\");\n  var options = { foo: \"bar\" };\n  var loadUrl = function() {};\n\n  attachLink.call({ options: options, loadUrl: loadUrl }, a);\n\n  a.href =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n\n  trigger(a, \"click\");\n\n  t.equal(\n    1,\n    Object.keys(options).length,\n    \"options object that is passed in should not be modified\"\n  );\n  t.equal(\n    \"bar\",\n    options.foo,\n    \"options object that is passed in should not be modified\"\n  );\n\n  t.end();\n});\n\ntape(\"test link triggered by keyboard\", function(t) {\n  var a = document.createElement(\"a\");\n  var pjax = {\n    options: {},\n    loadUrl: function() {\n      t.equal(\n        a.getAttribute(attr),\n        \"load\",\n        \"triggering a internal link actually loads the page\"\n      );\n    }\n  };\n\n  t.plan(3);\n\n  attachLink.call(pjax, a);\n\n  a.href = window.location.protocol + \"//\" + window.location.host + \"/internal\";\n\n  trigger(a, \"keyup\", { keyCode: 14 });\n  t.equal(\n    a.getAttribute(attr),\n    \"\",\n    \"keycode other than 13 doesn't trigger anything\"\n  );\n\n  trigger(a, \"keyup\", { keyCode: 13, metaKey: true });\n  t.equal(a.getAttribute(attr), \"modifier\", \"event key modifier stop behavior\");\n\n  trigger(a, \"keyup\", { keyCode: 13 });\n  // see loadUrl defined above\n\n  t.end();\n});\n\ntape(\n  \"test link with the same URL as the current one, when currentUrlFullReload set to true\",\n  function(t) {\n    var a = document.createElement(\"a\");\n    var pjax = {\n      options: {\n        currentUrlFullReload: true\n      },\n      reload: function() {\n        t.pass(\"this.reload() was called correctly\");\n      },\n      loadUrl: function() {\n        t.fail(\"loadUrl() was called wrongly\");\n      }\n    };\n\n    t.plan(2);\n\n    attachLink.call(pjax, a);\n\n    a.href = window.location.href;\n\n    trigger(a, \"click\");\n    t.equal(a.getAttribute(attr), \"reload\", \"reload stop behavior\");\n\n    t.end();\n  }\n);\n","site":{"data":{}},"length":3344,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar on = require(\"../../../lib/events/on\");\nvar trigger = require(\"../../../lib/events/trigger\");\nvar attachLink = require(\"../../../lib/proto/attach-link\");\n\nvar attr = \"data-pjax-state\";\n\ntape(\"test attach link prototype method\", function(t) {\n  var a = document.createElement(\"a\");\n  var loadUrlCalled = false;\n\n  attachLink.call(\n    {\n      options: {},\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    a\n  );\n\n  var internalUri =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n\n  a.href = internalUri;\n  trigger(a, \"click\", { metaKey: true });\n  t.equal(a.getAttribute(attr), \"modifier\", \"event key modifier stop behavior\");\n\n  a.href = \"http://external.com/\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"external\", \"external url stop behavior\");\n\n  window.location.hash = \"#anchor\";\n  a.href = internalUri + \"#anchor\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"anchor\", \"internal anchor stop behavior\");\n\n  a.href = internalUri + \"#another-anchor\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"anchor\", \"different anchors stop behavior\");\n  window.location.hash = \"\";\n\n  a.href = internalUri + \"#\";\n  trigger(a, \"click\");\n  t.equal(a.getAttribute(attr), \"anchor-empty\", \"empty anchor stop behavior\");\n\n  a.href = window.location.protocol + \"//\" + window.location.host + \"/internal\";\n  trigger(a, \"click\");\n  t.equals(\n    a.getAttribute(attr),\n    \"load\",\n    \"triggering an internal link sets the state attribute to 'load'\"\n  );\n  t.equals(\n    loadUrlCalled,\n    true,\n    \"triggering an internal link actually loads the page\"\n  );\n\n  t.end();\n});\n\ntape(\"test attach link preventDefaulted events\", function(t) {\n  var loadUrlCalled = false;\n  var a = document.createElement(\"a\");\n\n  // This needs to be before the call to attachLink()\n  on(a, \"click\", function(event) {\n    event.preventDefault();\n  });\n\n  attachLink.call(\n    {\n      options: {},\n      loadUrl: function() {\n        loadUrlCalled = true;\n      }\n    },\n    a\n  );\n\n  a.href = \"#\";\n  trigger(a, \"click\");\n  t.equal(\n    loadUrlCalled,\n    false,\n    \"events that are preventDefaulted should not fire callback\"\n  );\n\n  t.end();\n});\n\ntape(\"test options are not modified by attachLink\", function(t) {\n  var a = document.createElement(\"a\");\n  var options = { foo: \"bar\" };\n  var loadUrl = function() {};\n\n  attachLink.call({ options: options, loadUrl: loadUrl }, a);\n\n  a.href =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    window.location.search;\n\n  trigger(a, \"click\");\n\n  t.equal(\n    1,\n    Object.keys(options).length,\n    \"options object that is passed in should not be modified\"\n  );\n  t.equal(\n    \"bar\",\n    options.foo,\n    \"options object that is passed in should not be modified\"\n  );\n\n  t.end();\n});\n\ntape(\"test link triggered by keyboard\", function(t) {\n  var a = document.createElement(\"a\");\n  var pjax = {\n    options: {},\n    loadUrl: function() {\n      t.equal(\n        a.getAttribute(attr),\n        \"load\",\n        \"triggering a internal link actually loads the page\"\n      );\n    }\n  };\n\n  t.plan(3);\n\n  attachLink.call(pjax, a);\n\n  a.href = window.location.protocol + \"//\" + window.location.host + \"/internal\";\n\n  trigger(a, \"keyup\", { keyCode: 14 });\n  t.equal(\n    a.getAttribute(attr),\n    \"\",\n    \"keycode other than 13 doesn't trigger anything\"\n  );\n\n  trigger(a, \"keyup\", { keyCode: 13, metaKey: true });\n  t.equal(a.getAttribute(attr), \"modifier\", \"event key modifier stop behavior\");\n\n  trigger(a, \"keyup\", { keyCode: 13 });\n  // see loadUrl defined above\n\n  t.end();\n});\n\ntape(\n  \"test link with the same URL as the current one, when currentUrlFullReload set to true\",\n  function(t) {\n    var a = document.createElement(\"a\");\n    var pjax = {\n      options: {\n        currentUrlFullReload: true\n      },\n      reload: function() {\n        t.pass(\"this.reload() was called correctly\");\n      },\n      loadUrl: function() {\n        t.fail(\"loadUrl() was called wrongly\");\n      }\n    };\n\n    t.plan(2);\n\n    attachLink.call(pjax, a);\n\n    a.href = window.location.href;\n\n    trigger(a, \"click\");\n    t.equal(a.getAttribute(attr), \"reload\", \"reload stop behavior\");\n\n    t.end();\n  }\n);\n"},{"_content":"var tape = require(\"tape\");\n\nvar handleResponse = require(\"../../../lib/proto/handle-response\");\nvar noop = require(\"../../../lib/util/noop\");\nvar loadContent = require(\"../../../index\").prototype.loadContent;\n\nvar href = \"https://example.org/\";\n\nvar storeEventHandler;\nvar pjaxErrorEventTriggerTest;\n\ntape(\"test events triggered when handleResponse(false) is called\", function(t) {\n  t.plan(3);\n\n  var pjax = {\n    options: {\n      test: 1\n    }\n  };\n\n  var events = [];\n\n  storeEventHandler = function(e) {\n    events.push(e.type);\n\n    t.equal(e.test, 1);\n  };\n\n  document.addEventListener(\"pjax:complete\", storeEventHandler);\n  document.addEventListener(\"pjax:error\", storeEventHandler);\n\n  handleResponse.bind(pjax)(false, null);\n\n  t.same(\n    events,\n    [\"pjax:complete\", \"pjax:error\"],\n    \"calling handleResponse(false) triggers 'pjax:complete' and 'pjax:error'\"\n  );\n\n  document.removeEventListener(\"pjax:complete\", storeEventHandler);\n  document.removeEventListener(\"pjax:error\", storeEventHandler);\n\n  t.end();\n});\n\ntape(\"test when handleResponse() is called normally\", function(t) {\n  var pjax = {\n    options: {\n      test: 1\n    },\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: noop\n  };\n\n  handleResponse.bind(pjax)(\"\", request, \"href\");\n\n  delete window.history.state.uid;\n  t.same(\n    window.history.state,\n    {\n      url: href,\n      title: \"\",\n      scrollPos: [0, 0]\n    },\n    \"window.history.state is set correctly\"\n  );\n  t.equals(pjax.state.href, \"href\", \"this.state.href is set correctly\");\n  t.equals(\n    Object.keys(pjax.state.options).length,\n    2,\n    \"this.state.options is set correctly\"\n  );\n  t.same(\n    pjax.state.options.request,\n    request,\n    \"this.state.options is set correctly\"\n  );\n  t.equals(pjax.state.options.test, 1, \"this.state.options is set correctly\");\n\n  t.end();\n});\n\ntape(\n  \"test when handleResponse() is called normally with request.responseURL\",\n  function(t) {\n    var pjax = {\n      options: {},\n      loadContent: noop,\n      state: {}\n    };\n\n    var request = {\n      responseURL: href + \"1\",\n      getResponseHeader: noop\n    };\n\n    handleResponse.bind(pjax)(\"\", request, \"\");\n\n    t.equals(\n      pjax.state.href,\n      request.responseURL,\n      \"this.state.href is set correctly\"\n    );\n\n    t.end();\n  }\n);\n\ntape(\"test when handleResponse() is called normally with X-PJAX-URL\", function(\n  t\n) {\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: function(header) {\n      if (header === \"X-PJAX-URL\") {\n        return href + \"2\";\n      }\n    }\n  };\n\n  handleResponse.bind(pjax)(\"\", request, \"\");\n\n  t.equals(pjax.state.href, href + \"2\", \"this.state.href is set correctly\");\n\n  t.end();\n});\n\ntape(\n  \"test when handleResponse() is called normally with X-XHR-Redirected-To\",\n  function(t) {\n    var pjax = {\n      options: {},\n      loadContent: noop,\n      state: {}\n    };\n\n    var request = {\n      getResponseHeader: function(header) {\n        if (header === \"X-XHR-Redirected-To\") {\n          return href + \"3\";\n        }\n      }\n    };\n\n    handleResponse.bind(pjax)(\"\", request, \"\");\n\n    t.equals(pjax.state.href, href + \"3\", \"this.state.href is set correctly\");\n\n    t.end();\n  }\n);\n\ntape(\"test when handleResponse() is called normally with a hash\", function(t) {\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    responseURL: href + \"2\",\n    getResponseHeader: noop\n  };\n\n  handleResponse.bind(pjax)(\"\", request, href + \"1#test\");\n\n  t.equals(\n    pjax.state.href,\n    href + \"2#test\",\n    \"this.state.href is set correctly\"\n  );\n\n  t.end();\n});\n\ntape(\"test try...catch for loadContent() when options.debug is true\", function(\n  t\n) {\n  t.plan(2);\n\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: noop\n  };\n\n  pjax.loadContent = function() {\n    throw new Error();\n  };\n  pjax.options.debug = true;\n\n  document.removeEventListener(\"pjax:error\", storeEventHandler);\n  pjaxErrorEventTriggerTest = function() {\n    t.pass(\"pjax:error event triggered\");\n  };\n  document.addEventListener(\"pjax:error\", pjaxErrorEventTriggerTest);\n\n  t.throws(\n    function() {\n      handleResponse.bind(pjax)(\"\", request, \"\");\n    },\n    Error,\n    \"error is rethrown\"\n  );\n\n  t.end();\n});\n\ntape(\"test try...catch for loadContent()\", function(t) {\n  t.plan(2);\n\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: noop\n  };\n\n  pjax.loadContent = function() {\n    throw new Error();\n  };\n  pjax.latestChance = function() {\n    return true;\n  };\n  pjax.options.debug = false;\n\n  document.removeEventListener(\"pjax:error\", pjaxErrorEventTriggerTest);\n\n  t.doesNotThrow(\n    function() {\n      t.equals(\n        handleResponse.bind(pjax)(\"\", request, \"\"),\n        true,\n        \"this.latestChance() is called\"\n      );\n    },\n    Error,\n    \"error is not thrown\"\n  );\n\n  t.end();\n});\n\ntape(\n  \"test events triggered when loadContent() is called with a non-string html argument\",\n  function(t) {\n    t.plan(3);\n\n    var options = {\n      test: 1\n    };\n\n    var events = [];\n\n    storeEventHandler = function(e) {\n      events.push(e.type);\n\n      t.equal(e.test, 1);\n    };\n\n    document.addEventListener(\"pjax:complete\", storeEventHandler);\n    document.addEventListener(\"pjax:error\", storeEventHandler);\n\n    loadContent(null, options);\n\n    t.same(\n      events,\n      [\"pjax:complete\", \"pjax:error\"],\n      \"calling loadContent() with a non-string html argument triggers 'pjax:complete' and 'pjax:error'\"\n    );\n\n    document.removeEventListener(\"pjax:complete\", storeEventHandler);\n    document.removeEventListener(\"pjax:error\", storeEventHandler);\n\n    t.end();\n  }\n);\n","source":"lib/pjax/tests/lib/proto/handle-response.js","raw":"var tape = require(\"tape\");\n\nvar handleResponse = require(\"../../../lib/proto/handle-response\");\nvar noop = require(\"../../../lib/util/noop\");\nvar loadContent = require(\"../../../index\").prototype.loadContent;\n\nvar href = \"https://example.org/\";\n\nvar storeEventHandler;\nvar pjaxErrorEventTriggerTest;\n\ntape(\"test events triggered when handleResponse(false) is called\", function(t) {\n  t.plan(3);\n\n  var pjax = {\n    options: {\n      test: 1\n    }\n  };\n\n  var events = [];\n\n  storeEventHandler = function(e) {\n    events.push(e.type);\n\n    t.equal(e.test, 1);\n  };\n\n  document.addEventListener(\"pjax:complete\", storeEventHandler);\n  document.addEventListener(\"pjax:error\", storeEventHandler);\n\n  handleResponse.bind(pjax)(false, null);\n\n  t.same(\n    events,\n    [\"pjax:complete\", \"pjax:error\"],\n    \"calling handleResponse(false) triggers 'pjax:complete' and 'pjax:error'\"\n  );\n\n  document.removeEventListener(\"pjax:complete\", storeEventHandler);\n  document.removeEventListener(\"pjax:error\", storeEventHandler);\n\n  t.end();\n});\n\ntape(\"test when handleResponse() is called normally\", function(t) {\n  var pjax = {\n    options: {\n      test: 1\n    },\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: noop\n  };\n\n  handleResponse.bind(pjax)(\"\", request, \"href\");\n\n  delete window.history.state.uid;\n  t.same(\n    window.history.state,\n    {\n      url: href,\n      title: \"\",\n      scrollPos: [0, 0]\n    },\n    \"window.history.state is set correctly\"\n  );\n  t.equals(pjax.state.href, \"href\", \"this.state.href is set correctly\");\n  t.equals(\n    Object.keys(pjax.state.options).length,\n    2,\n    \"this.state.options is set correctly\"\n  );\n  t.same(\n    pjax.state.options.request,\n    request,\n    \"this.state.options is set correctly\"\n  );\n  t.equals(pjax.state.options.test, 1, \"this.state.options is set correctly\");\n\n  t.end();\n});\n\ntape(\n  \"test when handleResponse() is called normally with request.responseURL\",\n  function(t) {\n    var pjax = {\n      options: {},\n      loadContent: noop,\n      state: {}\n    };\n\n    var request = {\n      responseURL: href + \"1\",\n      getResponseHeader: noop\n    };\n\n    handleResponse.bind(pjax)(\"\", request, \"\");\n\n    t.equals(\n      pjax.state.href,\n      request.responseURL,\n      \"this.state.href is set correctly\"\n    );\n\n    t.end();\n  }\n);\n\ntape(\"test when handleResponse() is called normally with X-PJAX-URL\", function(\n  t\n) {\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: function(header) {\n      if (header === \"X-PJAX-URL\") {\n        return href + \"2\";\n      }\n    }\n  };\n\n  handleResponse.bind(pjax)(\"\", request, \"\");\n\n  t.equals(pjax.state.href, href + \"2\", \"this.state.href is set correctly\");\n\n  t.end();\n});\n\ntape(\n  \"test when handleResponse() is called normally with X-XHR-Redirected-To\",\n  function(t) {\n    var pjax = {\n      options: {},\n      loadContent: noop,\n      state: {}\n    };\n\n    var request = {\n      getResponseHeader: function(header) {\n        if (header === \"X-XHR-Redirected-To\") {\n          return href + \"3\";\n        }\n      }\n    };\n\n    handleResponse.bind(pjax)(\"\", request, \"\");\n\n    t.equals(pjax.state.href, href + \"3\", \"this.state.href is set correctly\");\n\n    t.end();\n  }\n);\n\ntape(\"test when handleResponse() is called normally with a hash\", function(t) {\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    responseURL: href + \"2\",\n    getResponseHeader: noop\n  };\n\n  handleResponse.bind(pjax)(\"\", request, href + \"1#test\");\n\n  t.equals(\n    pjax.state.href,\n    href + \"2#test\",\n    \"this.state.href is set correctly\"\n  );\n\n  t.end();\n});\n\ntape(\"test try...catch for loadContent() when options.debug is true\", function(\n  t\n) {\n  t.plan(2);\n\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: noop\n  };\n\n  pjax.loadContent = function() {\n    throw new Error();\n  };\n  pjax.options.debug = true;\n\n  document.removeEventListener(\"pjax:error\", storeEventHandler);\n  pjaxErrorEventTriggerTest = function() {\n    t.pass(\"pjax:error event triggered\");\n  };\n  document.addEventListener(\"pjax:error\", pjaxErrorEventTriggerTest);\n\n  t.throws(\n    function() {\n      handleResponse.bind(pjax)(\"\", request, \"\");\n    },\n    Error,\n    \"error is rethrown\"\n  );\n\n  t.end();\n});\n\ntape(\"test try...catch for loadContent()\", function(t) {\n  t.plan(2);\n\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: noop\n  };\n\n  pjax.loadContent = function() {\n    throw new Error();\n  };\n  pjax.latestChance = function() {\n    return true;\n  };\n  pjax.options.debug = false;\n\n  document.removeEventListener(\"pjax:error\", pjaxErrorEventTriggerTest);\n\n  t.doesNotThrow(\n    function() {\n      t.equals(\n        handleResponse.bind(pjax)(\"\", request, \"\"),\n        true,\n        \"this.latestChance() is called\"\n      );\n    },\n    Error,\n    \"error is not thrown\"\n  );\n\n  t.end();\n});\n\ntape(\n  \"test events triggered when loadContent() is called with a non-string html argument\",\n  function(t) {\n    t.plan(3);\n\n    var options = {\n      test: 1\n    };\n\n    var events = [];\n\n    storeEventHandler = function(e) {\n      events.push(e.type);\n\n      t.equal(e.test, 1);\n    };\n\n    document.addEventListener(\"pjax:complete\", storeEventHandler);\n    document.addEventListener(\"pjax:error\", storeEventHandler);\n\n    loadContent(null, options);\n\n    t.same(\n      events,\n      [\"pjax:complete\", \"pjax:error\"],\n      \"calling loadContent() with a non-string html argument triggers 'pjax:complete' and 'pjax:error'\"\n    );\n\n    document.removeEventListener(\"pjax:complete\", storeEventHandler);\n    document.removeEventListener(\"pjax:error\", storeEventHandler);\n\n    t.end();\n  }\n);\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/proto/handle-response.js","layout":"false","title":"","comments":1,"_id":"clixi4675001f37jxhbmw0vsp","content":"var tape = require(\"tape\");\n\nvar handleResponse = require(\"../../../lib/proto/handle-response\");\nvar noop = require(\"../../../lib/util/noop\");\nvar loadContent = require(\"../../../index\").prototype.loadContent;\n\nvar href = \"https://example.org/\";\n\nvar storeEventHandler;\nvar pjaxErrorEventTriggerTest;\n\ntape(\"test events triggered when handleResponse(false) is called\", function(t) {\n  t.plan(3);\n\n  var pjax = {\n    options: {\n      test: 1\n    }\n  };\n\n  var events = [];\n\n  storeEventHandler = function(e) {\n    events.push(e.type);\n\n    t.equal(e.test, 1);\n  };\n\n  document.addEventListener(\"pjax:complete\", storeEventHandler);\n  document.addEventListener(\"pjax:error\", storeEventHandler);\n\n  handleResponse.bind(pjax)(false, null);\n\n  t.same(\n    events,\n    [\"pjax:complete\", \"pjax:error\"],\n    \"calling handleResponse(false) triggers 'pjax:complete' and 'pjax:error'\"\n  );\n\n  document.removeEventListener(\"pjax:complete\", storeEventHandler);\n  document.removeEventListener(\"pjax:error\", storeEventHandler);\n\n  t.end();\n});\n\ntape(\"test when handleResponse() is called normally\", function(t) {\n  var pjax = {\n    options: {\n      test: 1\n    },\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: noop\n  };\n\n  handleResponse.bind(pjax)(\"\", request, \"href\");\n\n  delete window.history.state.uid;\n  t.same(\n    window.history.state,\n    {\n      url: href,\n      title: \"\",\n      scrollPos: [0, 0]\n    },\n    \"window.history.state is set correctly\"\n  );\n  t.equals(pjax.state.href, \"href\", \"this.state.href is set correctly\");\n  t.equals(\n    Object.keys(pjax.state.options).length,\n    2,\n    \"this.state.options is set correctly\"\n  );\n  t.same(\n    pjax.state.options.request,\n    request,\n    \"this.state.options is set correctly\"\n  );\n  t.equals(pjax.state.options.test, 1, \"this.state.options is set correctly\");\n\n  t.end();\n});\n\ntape(\n  \"test when handleResponse() is called normally with request.responseURL\",\n  function(t) {\n    var pjax = {\n      options: {},\n      loadContent: noop,\n      state: {}\n    };\n\n    var request = {\n      responseURL: href + \"1\",\n      getResponseHeader: noop\n    };\n\n    handleResponse.bind(pjax)(\"\", request, \"\");\n\n    t.equals(\n      pjax.state.href,\n      request.responseURL,\n      \"this.state.href is set correctly\"\n    );\n\n    t.end();\n  }\n);\n\ntape(\"test when handleResponse() is called normally with X-PJAX-URL\", function(\n  t\n) {\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: function(header) {\n      if (header === \"X-PJAX-URL\") {\n        return href + \"2\";\n      }\n    }\n  };\n\n  handleResponse.bind(pjax)(\"\", request, \"\");\n\n  t.equals(pjax.state.href, href + \"2\", \"this.state.href is set correctly\");\n\n  t.end();\n});\n\ntape(\n  \"test when handleResponse() is called normally with X-XHR-Redirected-To\",\n  function(t) {\n    var pjax = {\n      options: {},\n      loadContent: noop,\n      state: {}\n    };\n\n    var request = {\n      getResponseHeader: function(header) {\n        if (header === \"X-XHR-Redirected-To\") {\n          return href + \"3\";\n        }\n      }\n    };\n\n    handleResponse.bind(pjax)(\"\", request, \"\");\n\n    t.equals(pjax.state.href, href + \"3\", \"this.state.href is set correctly\");\n\n    t.end();\n  }\n);\n\ntape(\"test when handleResponse() is called normally with a hash\", function(t) {\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    responseURL: href + \"2\",\n    getResponseHeader: noop\n  };\n\n  handleResponse.bind(pjax)(\"\", request, href + \"1#test\");\n\n  t.equals(\n    pjax.state.href,\n    href + \"2#test\",\n    \"this.state.href is set correctly\"\n  );\n\n  t.end();\n});\n\ntape(\"test try...catch for loadContent() when options.debug is true\", function(\n  t\n) {\n  t.plan(2);\n\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: noop\n  };\n\n  pjax.loadContent = function() {\n    throw new Error();\n  };\n  pjax.options.debug = true;\n\n  document.removeEventListener(\"pjax:error\", storeEventHandler);\n  pjaxErrorEventTriggerTest = function() {\n    t.pass(\"pjax:error event triggered\");\n  };\n  document.addEventListener(\"pjax:error\", pjaxErrorEventTriggerTest);\n\n  t.throws(\n    function() {\n      handleResponse.bind(pjax)(\"\", request, \"\");\n    },\n    Error,\n    \"error is rethrown\"\n  );\n\n  t.end();\n});\n\ntape(\"test try...catch for loadContent()\", function(t) {\n  t.plan(2);\n\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: noop\n  };\n\n  pjax.loadContent = function() {\n    throw new Error();\n  };\n  pjax.latestChance = function() {\n    return true;\n  };\n  pjax.options.debug = false;\n\n  document.removeEventListener(\"pjax:error\", pjaxErrorEventTriggerTest);\n\n  t.doesNotThrow(\n    function() {\n      t.equals(\n        handleResponse.bind(pjax)(\"\", request, \"\"),\n        true,\n        \"this.latestChance() is called\"\n      );\n    },\n    Error,\n    \"error is not thrown\"\n  );\n\n  t.end();\n});\n\ntape(\n  \"test events triggered when loadContent() is called with a non-string html argument\",\n  function(t) {\n    t.plan(3);\n\n    var options = {\n      test: 1\n    };\n\n    var events = [];\n\n    storeEventHandler = function(e) {\n      events.push(e.type);\n\n      t.equal(e.test, 1);\n    };\n\n    document.addEventListener(\"pjax:complete\", storeEventHandler);\n    document.addEventListener(\"pjax:error\", storeEventHandler);\n\n    loadContent(null, options);\n\n    t.same(\n      events,\n      [\"pjax:complete\", \"pjax:error\"],\n      \"calling loadContent() with a non-string html argument triggers 'pjax:complete' and 'pjax:error'\"\n    );\n\n    document.removeEventListener(\"pjax:complete\", storeEventHandler);\n    document.removeEventListener(\"pjax:error\", storeEventHandler);\n\n    t.end();\n  }\n);\n","site":{"data":{}},"length":4452,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar handleResponse = require(\"../../../lib/proto/handle-response\");\nvar noop = require(\"../../../lib/util/noop\");\nvar loadContent = require(\"../../../index\").prototype.loadContent;\n\nvar href = \"https://example.org/\";\n\nvar storeEventHandler;\nvar pjaxErrorEventTriggerTest;\n\ntape(\"test events triggered when handleResponse(false) is called\", function(t) {\n  t.plan(3);\n\n  var pjax = {\n    options: {\n      test: 1\n    }\n  };\n\n  var events = [];\n\n  storeEventHandler = function(e) {\n    events.push(e.type);\n\n    t.equal(e.test, 1);\n  };\n\n  document.addEventListener(\"pjax:complete\", storeEventHandler);\n  document.addEventListener(\"pjax:error\", storeEventHandler);\n\n  handleResponse.bind(pjax)(false, null);\n\n  t.same(\n    events,\n    [\"pjax:complete\", \"pjax:error\"],\n    \"calling handleResponse(false) triggers 'pjax:complete' and 'pjax:error'\"\n  );\n\n  document.removeEventListener(\"pjax:complete\", storeEventHandler);\n  document.removeEventListener(\"pjax:error\", storeEventHandler);\n\n  t.end();\n});\n\ntape(\"test when handleResponse() is called normally\", function(t) {\n  var pjax = {\n    options: {\n      test: 1\n    },\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: noop\n  };\n\n  handleResponse.bind(pjax)(\"\", request, \"href\");\n\n  delete window.history.state.uid;\n  t.same(\n    window.history.state,\n    {\n      url: href,\n      title: \"\",\n      scrollPos: [0, 0]\n    },\n    \"window.history.state is set correctly\"\n  );\n  t.equals(pjax.state.href, \"href\", \"this.state.href is set correctly\");\n  t.equals(\n    Object.keys(pjax.state.options).length,\n    2,\n    \"this.state.options is set correctly\"\n  );\n  t.same(\n    pjax.state.options.request,\n    request,\n    \"this.state.options is set correctly\"\n  );\n  t.equals(pjax.state.options.test, 1, \"this.state.options is set correctly\");\n\n  t.end();\n});\n\ntape(\n  \"test when handleResponse() is called normally with request.responseURL\",\n  function(t) {\n    var pjax = {\n      options: {},\n      loadContent: noop,\n      state: {}\n    };\n\n    var request = {\n      responseURL: href + \"1\",\n      getResponseHeader: noop\n    };\n\n    handleResponse.bind(pjax)(\"\", request, \"\");\n\n    t.equals(\n      pjax.state.href,\n      request.responseURL,\n      \"this.state.href is set correctly\"\n    );\n\n    t.end();\n  }\n);\n\ntape(\"test when handleResponse() is called normally with X-PJAX-URL\", function(\n  t\n) {\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: function(header) {\n      if (header === \"X-PJAX-URL\") {\n        return href + \"2\";\n      }\n    }\n  };\n\n  handleResponse.bind(pjax)(\"\", request, \"\");\n\n  t.equals(pjax.state.href, href + \"2\", \"this.state.href is set correctly\");\n\n  t.end();\n});\n\ntape(\n  \"test when handleResponse() is called normally with X-XHR-Redirected-To\",\n  function(t) {\n    var pjax = {\n      options: {},\n      loadContent: noop,\n      state: {}\n    };\n\n    var request = {\n      getResponseHeader: function(header) {\n        if (header === \"X-XHR-Redirected-To\") {\n          return href + \"3\";\n        }\n      }\n    };\n\n    handleResponse.bind(pjax)(\"\", request, \"\");\n\n    t.equals(pjax.state.href, href + \"3\", \"this.state.href is set correctly\");\n\n    t.end();\n  }\n);\n\ntape(\"test when handleResponse() is called normally with a hash\", function(t) {\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    responseURL: href + \"2\",\n    getResponseHeader: noop\n  };\n\n  handleResponse.bind(pjax)(\"\", request, href + \"1#test\");\n\n  t.equals(\n    pjax.state.href,\n    href + \"2#test\",\n    \"this.state.href is set correctly\"\n  );\n\n  t.end();\n});\n\ntape(\"test try...catch for loadContent() when options.debug is true\", function(\n  t\n) {\n  t.plan(2);\n\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: noop\n  };\n\n  pjax.loadContent = function() {\n    throw new Error();\n  };\n  pjax.options.debug = true;\n\n  document.removeEventListener(\"pjax:error\", storeEventHandler);\n  pjaxErrorEventTriggerTest = function() {\n    t.pass(\"pjax:error event triggered\");\n  };\n  document.addEventListener(\"pjax:error\", pjaxErrorEventTriggerTest);\n\n  t.throws(\n    function() {\n      handleResponse.bind(pjax)(\"\", request, \"\");\n    },\n    Error,\n    \"error is rethrown\"\n  );\n\n  t.end();\n});\n\ntape(\"test try...catch for loadContent()\", function(t) {\n  t.plan(2);\n\n  var pjax = {\n    options: {},\n    loadContent: noop,\n    state: {}\n  };\n\n  var request = {\n    getResponseHeader: noop\n  };\n\n  pjax.loadContent = function() {\n    throw new Error();\n  };\n  pjax.latestChance = function() {\n    return true;\n  };\n  pjax.options.debug = false;\n\n  document.removeEventListener(\"pjax:error\", pjaxErrorEventTriggerTest);\n\n  t.doesNotThrow(\n    function() {\n      t.equals(\n        handleResponse.bind(pjax)(\"\", request, \"\"),\n        true,\n        \"this.latestChance() is called\"\n      );\n    },\n    Error,\n    \"error is not thrown\"\n  );\n\n  t.end();\n});\n\ntape(\n  \"test events triggered when loadContent() is called with a non-string html argument\",\n  function(t) {\n    t.plan(3);\n\n    var options = {\n      test: 1\n    };\n\n    var events = [];\n\n    storeEventHandler = function(e) {\n      events.push(e.type);\n\n      t.equal(e.test, 1);\n    };\n\n    document.addEventListener(\"pjax:complete\", storeEventHandler);\n    document.addEventListener(\"pjax:error\", storeEventHandler);\n\n    loadContent(null, options);\n\n    t.same(\n      events,\n      [\"pjax:complete\", \"pjax:error\"],\n      \"calling loadContent() with a non-string html argument triggers 'pjax:complete' and 'pjax:error'\"\n    );\n\n    document.removeEventListener(\"pjax:complete\", storeEventHandler);\n    document.removeEventListener(\"pjax:error\", storeEventHandler);\n\n    t.end();\n  }\n);\n"},{"_content":"var tape = require(\"tape\");\n\nvar parseElement = require(\"../../../lib/proto/parse-element\");\n\nvar pjax = {\n  attachLink: function() {\n    return true;\n  },\n  attachForm: function() {\n    return true;\n  }\n};\n\ntape(\"test parse element prototype method\", function(t) {\n  t.doesNotThrow(function() {\n    var a = document.createElement(\"a\");\n    parseElement.call(pjax, a);\n  }, \"<a> element can be parsed\");\n\n  t.doesNotThrow(function() {\n    var form = document.createElement(\"form\");\n    parseElement.call(pjax, form);\n  }, \"<form> element can be parsed\");\n\n  t.throws(function() {\n    var el = document.createElement(\"div\");\n    parseElement.call(pjax, el);\n  }, \"<div> element cannot be parsed\");\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/proto/parse-element.js","raw":"var tape = require(\"tape\");\n\nvar parseElement = require(\"../../../lib/proto/parse-element\");\n\nvar pjax = {\n  attachLink: function() {\n    return true;\n  },\n  attachForm: function() {\n    return true;\n  }\n};\n\ntape(\"test parse element prototype method\", function(t) {\n  t.doesNotThrow(function() {\n    var a = document.createElement(\"a\");\n    parseElement.call(pjax, a);\n  }, \"<a> element can be parsed\");\n\n  t.doesNotThrow(function() {\n    var form = document.createElement(\"form\");\n    parseElement.call(pjax, form);\n  }, \"<form> element can be parsed\");\n\n  t.throws(function() {\n    var el = document.createElement(\"div\");\n    parseElement.call(pjax, el);\n  }, \"<div> element cannot be parsed\");\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/proto/parse-element.js","layout":"false","title":"","comments":1,"_id":"clixi4675001g37jx4innf9py","content":"var tape = require(\"tape\");\n\nvar parseElement = require(\"../../../lib/proto/parse-element\");\n\nvar pjax = {\n  attachLink: function() {\n    return true;\n  },\n  attachForm: function() {\n    return true;\n  }\n};\n\ntape(\"test parse element prototype method\", function(t) {\n  t.doesNotThrow(function() {\n    var a = document.createElement(\"a\");\n    parseElement.call(pjax, a);\n  }, \"<a> element can be parsed\");\n\n  t.doesNotThrow(function() {\n    var form = document.createElement(\"form\");\n    parseElement.call(pjax, form);\n  }, \"<form> element can be parsed\");\n\n  t.throws(function() {\n    var el = document.createElement(\"div\");\n    parseElement.call(pjax, el);\n  }, \"<div> element cannot be parsed\");\n\n  t.end();\n});\n","site":{"data":{}},"length":563,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar parseElement = require(\"../../../lib/proto/parse-element\");\n\nvar pjax = {\n  attachLink: function() {\n    return true;\n  },\n  attachForm: function() {\n    return true;\n  }\n};\n\ntape(\"test parse element prototype method\", function(t) {\n  t.doesNotThrow(function() {\n    var a = document.createElement(\"a\");\n    parseElement.call(pjax, a);\n  }, \"<a> element can be parsed\");\n\n  t.doesNotThrow(function() {\n    var form = document.createElement(\"form\");\n    parseElement.call(pjax, form);\n  }, \"<form> element can be parsed\");\n\n  t.throws(function() {\n    var el = document.createElement(\"div\");\n    parseElement.call(pjax, el);\n  }, \"<div> element cannot be parsed\");\n\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar clone = require(\"../../../lib/util/clone\");\n\ntape(\"test clone method\", function(t) {\n  var obj = { one: 1, two: 2 };\n  var cloned = clone(obj);\n\n  t.notEqual(obj, cloned, \"cloned object isn't the original object\");\n\n  t.same(obj, cloned, \"cloned object has the same values as original object\");\n\n  cloned.three = 3;\n  t.notSame(\n    obj,\n    cloned,\n    \"modified cloned object doesn't have the same values as original object\"\n  );\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/util/clone.js","raw":"var tape = require(\"tape\");\n\nvar clone = require(\"../../../lib/util/clone\");\n\ntape(\"test clone method\", function(t) {\n  var obj = { one: 1, two: 2 };\n  var cloned = clone(obj);\n\n  t.notEqual(obj, cloned, \"cloned object isn't the original object\");\n\n  t.same(obj, cloned, \"cloned object has the same values as original object\");\n\n  cloned.three = 3;\n  t.notSame(\n    obj,\n    cloned,\n    \"modified cloned object doesn't have the same values as original object\"\n  );\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/util/clone.js","layout":"false","title":"","comments":1,"_id":"clixi4676001h37jxgg1l38xy","content":"var tape = require(\"tape\");\n\nvar clone = require(\"../../../lib/util/clone\");\n\ntape(\"test clone method\", function(t) {\n  var obj = { one: 1, two: 2 };\n  var cloned = clone(obj);\n\n  t.notEqual(obj, cloned, \"cloned object isn't the original object\");\n\n  t.same(obj, cloned, \"cloned object has the same values as original object\");\n\n  cloned.three = 3;\n  t.notSame(\n    obj,\n    cloned,\n    \"modified cloned object doesn't have the same values as original object\"\n  );\n\n  t.end();\n});\n","site":{"data":{}},"length":382,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar clone = require(\"../../../lib/util/clone\");\n\ntape(\"test clone method\", function(t) {\n  var obj = { one: 1, two: 2 };\n  var cloned = clone(obj);\n\n  t.notEqual(obj, cloned, \"cloned object isn't the original object\");\n\n  t.same(obj, cloned, \"cloned object has the same values as original object\");\n\n  cloned.three = 3;\n  t.notSame(\n    obj,\n    cloned,\n    \"modified cloned object doesn't have the same values as original object\"\n  );\n\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar contains = require(\"../../../lib/util/contains.js\");\n\ntape(\"test contains function\", function(t) {\n  var tempDoc = document.implementation.createHTMLDocument();\n  tempDoc.body.innerHTML =\n    \"<div><p id='el' class='js-Pjax'></p></div><span></span>\";\n  var selectors = [\"div\"];\n  var el = tempDoc.body.querySelector(\"#el\");\n  t.equal(\n    contains(tempDoc, selectors, el),\n    true,\n    \"contains() returns true when a selector contains the element\"\n  );\n\n  selectors = [\"span\"];\n  t.equal(\n    contains(tempDoc, selectors, el),\n    false,\n    \"contains() returns false when the selectors do not contain the element\"\n  );\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/util/contains.js","raw":"var tape = require(\"tape\");\n\nvar contains = require(\"../../../lib/util/contains.js\");\n\ntape(\"test contains function\", function(t) {\n  var tempDoc = document.implementation.createHTMLDocument();\n  tempDoc.body.innerHTML =\n    \"<div><p id='el' class='js-Pjax'></p></div><span></span>\";\n  var selectors = [\"div\"];\n  var el = tempDoc.body.querySelector(\"#el\");\n  t.equal(\n    contains(tempDoc, selectors, el),\n    true,\n    \"contains() returns true when a selector contains the element\"\n  );\n\n  selectors = [\"span\"];\n  t.equal(\n    contains(tempDoc, selectors, el),\n    false,\n    \"contains() returns false when the selectors do not contain the element\"\n  );\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/util/contains.js","layout":"false","title":"","comments":1,"_id":"clixi4676001i37jx21ksb4hq","content":"var tape = require(\"tape\");\n\nvar contains = require(\"../../../lib/util/contains.js\");\n\ntape(\"test contains function\", function(t) {\n  var tempDoc = document.implementation.createHTMLDocument();\n  tempDoc.body.innerHTML =\n    \"<div><p id='el' class='js-Pjax'></p></div><span></span>\";\n  var selectors = [\"div\"];\n  var el = tempDoc.body.querySelector(\"#el\");\n  t.equal(\n    contains(tempDoc, selectors, el),\n    true,\n    \"contains() returns true when a selector contains the element\"\n  );\n\n  selectors = [\"span\"];\n  t.equal(\n    contains(tempDoc, selectors, el),\n    false,\n    \"contains() returns false when the selectors do not contain the element\"\n  );\n\n  t.end();\n});\n","site":{"data":{}},"length":499,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar contains = require(\"../../../lib/util/contains.js\");\n\ntape(\"test contains function\", function(t) {\n  var tempDoc = document.implementation.createHTMLDocument();\n  tempDoc.body.innerHTML =\n    \"<div><p id='el' class='js-Pjax'></p></div><span></span>\";\n  var selectors = [\"div\"];\n  var el = tempDoc.body.querySelector(\"#el\");\n  t.equal(\n    contains(tempDoc, selectors, el),\n    true,\n    \"contains() returns true when a selector contains the element\"\n  );\n\n  selectors = [\"span\"];\n  t.equal(\n    contains(tempDoc, selectors, el),\n    false,\n    \"contains() returns false when the selectors do not contain the element\"\n  );\n\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar extend = require(\"../../../lib/util/extend\");\n\ntape(\"test extend method\", function(t) {\n  var obj = { one: 1, two: 2 };\n\n  var extended = extend({}, obj, { two: \"two\", three: 3 });\n  t.notEqual(obj, extended, \"extended object isn't the original object\");\n  t.notSame(\n    obj,\n    extended,\n    \"extended object doesn't have the same values as original object\"\n  );\n  t.notSame(\n    obj.two,\n    extended.two,\n    \"extended object value overwrites value from original object\"\n  );\n\n  extended = extend(null);\n  t.equals(extended, null, \"passing null returns null\");\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/util/extend.js","raw":"var tape = require(\"tape\");\n\nvar extend = require(\"../../../lib/util/extend\");\n\ntape(\"test extend method\", function(t) {\n  var obj = { one: 1, two: 2 };\n\n  var extended = extend({}, obj, { two: \"two\", three: 3 });\n  t.notEqual(obj, extended, \"extended object isn't the original object\");\n  t.notSame(\n    obj,\n    extended,\n    \"extended object doesn't have the same values as original object\"\n  );\n  t.notSame(\n    obj.two,\n    extended.two,\n    \"extended object value overwrites value from original object\"\n  );\n\n  extended = extend(null);\n  t.equals(extended, null, \"passing null returns null\");\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/util/extend.js","layout":"false","title":"","comments":1,"_id":"clixi4677001j37jx7kznhi0n","content":"var tape = require(\"tape\");\n\nvar extend = require(\"../../../lib/util/extend\");\n\ntape(\"test extend method\", function(t) {\n  var obj = { one: 1, two: 2 };\n\n  var extended = extend({}, obj, { two: \"two\", three: 3 });\n  t.notEqual(obj, extended, \"extended object isn't the original object\");\n  t.notSame(\n    obj,\n    extended,\n    \"extended object doesn't have the same values as original object\"\n  );\n  t.notSame(\n    obj.two,\n    extended.two,\n    \"extended object value overwrites value from original object\"\n  );\n\n  extended = extend(null);\n  t.equals(extended, null, \"passing null returns null\");\n\n  t.end();\n});\n","site":{"data":{}},"length":488,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar extend = require(\"../../../lib/util/extend\");\n\ntape(\"test extend method\", function(t) {\n  var obj = { one: 1, two: 2 };\n\n  var extended = extend({}, obj, { two: \"two\", three: 3 });\n  t.notEqual(obj, extended, \"extended object isn't the original object\");\n  t.notSame(\n    obj,\n    extended,\n    \"extended object doesn't have the same values as original object\"\n  );\n  t.notSame(\n    obj.two,\n    extended.two,\n    \"extended object value overwrites value from original object\"\n  );\n\n  extended = extend(null);\n  t.equals(extended, null, \"passing null returns null\");\n\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar noop = require(\"../../../lib/util/noop\");\n\ntape(\"test noop function\", function(t) {\n  t.equal(typeof noop, \"function\", \"noop is a function\");\n  t.equal(noop(), undefined, \"noop() returns nothing\");\n  t.end();\n});\n","source":"lib/pjax/tests/lib/util/noop.js","raw":"var tape = require(\"tape\");\n\nvar noop = require(\"../../../lib/util/noop\");\n\ntape(\"test noop function\", function(t) {\n  t.equal(typeof noop, \"function\", \"noop is a function\");\n  t.equal(noop(), undefined, \"noop() returns nothing\");\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/util/noop.js","layout":"false","title":"","comments":1,"_id":"clixi467c001k37jx22hdc7pc","content":"var tape = require(\"tape\");\n\nvar noop = require(\"../../../lib/util/noop\");\n\ntape(\"test noop function\", function(t) {\n  t.equal(typeof noop, \"function\", \"noop is a function\");\n  t.equal(noop(), undefined, \"noop() returns nothing\");\n  t.end();\n});\n","site":{"data":{}},"length":211,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar noop = require(\"../../../lib/util/noop\");\n\ntape(\"test noop function\", function(t) {\n  t.equal(typeof noop, \"function\", \"noop is a function\");\n  t.equal(noop(), undefined, \"noop() returns nothing\");\n  t.end();\n});\n"},{"_content":"var tape = require(\"tape\");\n\nvar updateQueryString = require(\"../../../lib/util/update-query-string\");\n\ntape(\"test update query string method\", function(t) {\n  var url = \"http://example.com\";\n  var updatedUrl = updateQueryString(url, \"foo\", \"bar\");\n\n  t.notEqual(url, updatedUrl, \"update query string modifies URL\");\n  t.equal(\n    updatedUrl,\n    url + \"?foo=bar\",\n    \"update query string creates new query string when no query string params are set\"\n  );\n\n  updatedUrl = updateQueryString(updatedUrl, \"foo\", \"baz\");\n\n  t.equal(\n    updatedUrl,\n    url + \"?foo=baz\",\n    \"update query string updates existing query string param\"\n  );\n\n  updatedUrl = updateQueryString(updatedUrl, \"bar\", \"\");\n\n  t.equal(\n    updatedUrl,\n    url + \"?foo=baz&bar=\",\n    \"update query string appends to existing query string\"\n  );\n\n  t.end();\n});\n","source":"lib/pjax/tests/lib/util/update-query-string.js","raw":"var tape = require(\"tape\");\n\nvar updateQueryString = require(\"../../../lib/util/update-query-string\");\n\ntape(\"test update query string method\", function(t) {\n  var url = \"http://example.com\";\n  var updatedUrl = updateQueryString(url, \"foo\", \"bar\");\n\n  t.notEqual(url, updatedUrl, \"update query string modifies URL\");\n  t.equal(\n    updatedUrl,\n    url + \"?foo=bar\",\n    \"update query string creates new query string when no query string params are set\"\n  );\n\n  updatedUrl = updateQueryString(updatedUrl, \"foo\", \"baz\");\n\n  t.equal(\n    updatedUrl,\n    url + \"?foo=baz\",\n    \"update query string updates existing query string param\"\n  );\n\n  updatedUrl = updateQueryString(updatedUrl, \"bar\", \"\");\n\n  t.equal(\n    updatedUrl,\n    url + \"?foo=baz&bar=\",\n    \"update query string appends to existing query string\"\n  );\n\n  t.end();\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/tests/lib/util/update-query-string.js","layout":"false","title":"","comments":1,"_id":"clixi467i001m37jxhjnnbapf","content":"var tape = require(\"tape\");\n\nvar updateQueryString = require(\"../../../lib/util/update-query-string\");\n\ntape(\"test update query string method\", function(t) {\n  var url = \"http://example.com\";\n  var updatedUrl = updateQueryString(url, \"foo\", \"bar\");\n\n  t.notEqual(url, updatedUrl, \"update query string modifies URL\");\n  t.equal(\n    updatedUrl,\n    url + \"?foo=bar\",\n    \"update query string creates new query string when no query string params are set\"\n  );\n\n  updatedUrl = updateQueryString(updatedUrl, \"foo\", \"baz\");\n\n  t.equal(\n    updatedUrl,\n    url + \"?foo=baz\",\n    \"update query string updates existing query string param\"\n  );\n\n  updatedUrl = updateQueryString(updatedUrl, \"bar\", \"\");\n\n  t.equal(\n    updatedUrl,\n    url + \"?foo=baz&bar=\",\n    \"update query string appends to existing query string\"\n  );\n\n  t.end();\n});\n","site":{"data":{}},"length":669,"excerpt":"","more":"var tape = require(\"tape\");\n\nvar updateQueryString = require(\"../../../lib/util/update-query-string\");\n\ntape(\"test update query string method\", function(t) {\n  var url = \"http://example.com\";\n  var updatedUrl = updateQueryString(url, \"foo\", \"bar\");\n\n  t.notEqual(url, updatedUrl, \"update query string modifies URL\");\n  t.equal(\n    updatedUrl,\n    url + \"?foo=bar\",\n    \"update query string creates new query string when no query string params are set\"\n  );\n\n  updatedUrl = updateQueryString(updatedUrl, \"foo\", \"baz\");\n\n  t.equal(\n    updatedUrl,\n    url + \"?foo=baz\",\n    \"update query string updates existing query string param\"\n  );\n\n  updatedUrl = updateQueryString(updatedUrl, \"bar\", \"\");\n\n  t.equal(\n    updatedUrl,\n    url + \"?foo=baz&bar=\",\n    \"update query string appends to existing query string\"\n  );\n\n  t.end();\n});\n"},{"_content":"(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pjax=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){var forEachEls=require(\"./lib/foreach-els\");var parseOptions=require(\"./lib/parse-options\");var switches=require(\"./lib/switches\");var newUid=require(\"./lib/uniqueid\");var on=require(\"./lib/events/on\");var trigger=require(\"./lib/events/trigger\");var clone=require(\"./lib/util/clone\");var contains=require(\"./lib/util/contains\");var extend=require(\"./lib/util/extend\");var noop=require(\"./lib/util/noop\");var Pjax=function(options){this.state={numPendingSwitches:0,href:null,options:null};this.options=parseOptions(options);this.log(\"Pjax options\",this.options);if(this.options.scrollRestoration&&\"scrollRestoration\"in history){history.scrollRestoration=\"manual\"}this.maxUid=this.lastUid=newUid();this.parseDOM(document);on(window,\"popstate\",function(st){if(st.state){var opt=clone(this.options);opt.url=st.state.url;opt.title=st.state.title;opt.history=false;opt.scrollPos=st.state.scrollPos;if(st.state.uid<this.lastUid){opt.backward=true}else{opt.forward=true}this.lastUid=st.state.uid;this.loadUrl(st.state.url,opt)}}.bind(this))};Pjax.switches=switches;Pjax.prototype={log:require(\"./lib/proto/log\"),getElements:function(el){return el.querySelectorAll(this.options.elements)},parseDOM:function(el){var parseElement=require(\"./lib/proto/parse-element\");forEachEls(this.getElements(el),parseElement,this)},refresh:function(el){this.parseDOM(el||document)},reload:function(){window.location.reload()},attachLink:require(\"./lib/proto/attach-link\"),attachForm:require(\"./lib/proto/attach-form\"),forEachSelectors:function(cb,context,DOMcontext){return require(\"./lib/foreach-selectors\").bind(this)(this.options.selectors,cb,context,DOMcontext)},switchSelectors:function(selectors,fromEl,toEl,options){return require(\"./lib/switches-selectors\").bind(this)(this.options.switches,this.options.switchesOptions,selectors,fromEl,toEl,options)},latestChance:function(href){window.location=href},onSwitch:function(){trigger(window,\"resize scroll\");this.state.numPendingSwitches--;if(this.state.numPendingSwitches===0){this.afterAllSwitches()}},loadContent:function(html,options){if(typeof html!==\"string\"){trigger(document,\"pjax:complete pjax:error\",options);return}var tmpEl=document.implementation.createHTMLDocument(\"pjax\");var htmlRegex=/<html[^>]+>/gi;var htmlAttribsRegex=/\\s?[a-z:]+(?:=['\"][^'\">]+['\"])*/gi;var matches=html.match(htmlRegex);if(matches&&matches.length){matches=matches[0].match(htmlAttribsRegex);if(matches.length){matches.shift();matches.forEach(function(htmlAttrib){var attr=htmlAttrib.trim().split(\"=\");if(attr.length===1){tmpEl.documentElement.setAttribute(attr[0],true)}else{tmpEl.documentElement.setAttribute(attr[0],attr[1].slice(1,-1))}})}}tmpEl.documentElement.innerHTML=html;this.log(\"load content\",tmpEl.documentElement.attributes,tmpEl.documentElement.innerHTML.length);if(document.activeElement&&contains(document,this.options.selectors,document.activeElement)){try{document.activeElement.blur()}catch(e){}}this.switchSelectors(this.options.selectors,tmpEl,document,options)},abortRequest:require(\"./lib/abort-request\"),doRequest:require(\"./lib/send-request\"),handleResponse:require(\"./lib/proto/handle-response\"),loadUrl:function(href,options){options=typeof options===\"object\"?extend({},this.options,options):clone(this.options);this.log(\"load href\",href,options);this.abortRequest(this.request);trigger(document,\"pjax:send\",options);this.request=this.doRequest(href,options,this.handleResponse.bind(this))},afterAllSwitches:function(){var autofocusEl=Array.prototype.slice.call(document.querySelectorAll(\"[autofocus]\")).pop();if(autofocusEl&&document.activeElement!==autofocusEl){autofocusEl.focus()}this.options.selectors.forEach(function(selector){forEachEls(document.querySelectorAll(selector),function(el){if(el===0);})});var state=this.state;if(state.options.history){if(!window.history.state){this.lastUid=this.maxUid=newUid();window.history.replaceState({url:window.location.href,title:document.title,uid:this.maxUid,scrollPos:[0,0]},document.title)}this.lastUid=this.maxUid=newUid();window.history.pushState({url:state.href,title:state.options.title,uid:this.maxUid,scrollPos:[0,0]},state.options.title,state.href)}this.forEachSelectors(function(el){this.parseDOM(el)},this);trigger(document,\"pjax:complete pjax:success\",state.options);if(typeof state.options.analytics===\"function\"){state.options.analytics()}if(state.options.history){var a=document.createElement(\"a\");a.href=this.state.href;if(a.hash){var name=a.hash.slice(1);name=decodeURIComponent(name);var curtop=0;var target=document.getElementById(name)||document.getElementsByName(name)[0];if(target){if(target.offsetParent){do{curtop+=target.offsetTop;target=target.offsetParent}while(target)}}window.scrollTo(0,curtop)}else if(state.options.scrollTo!==false){if(state.options.scrollTo.length>1){window.scrollTo(state.options.scrollTo[0],state.options.scrollTo[1])}else{window.scrollTo(0,state.options.scrollTo)}}}else if(state.options.scrollRestoration&&state.options.scrollPos){window.scrollTo(state.options.scrollPos[0],state.options.scrollPos[1])}this.state={numPendingSwitches:0,href:null,options:null}}};Pjax.isSupported=require(\"./lib/is-supported\");if(Pjax.isSupported()){module.exports=Pjax}else{var stupidPjax=noop;for(var key in Pjax.prototype){if(Pjax.prototype.hasOwnProperty(key)&&typeof Pjax.prototype[key]===\"function\"){stupidPjax[key]=noop}}module.exports=stupidPjax}},{\"./lib/abort-request\":2,\"./lib/events/on\":3,\"./lib/events/trigger\":4,\"./lib/foreach-els\":5,\"./lib/foreach-selectors\":6,\"./lib/is-supported\":7,\"./lib/parse-options\":8,\"./lib/proto/attach-form\":9,\"./lib/proto/attach-link\":10,\"./lib/proto/handle-response\":11,\"./lib/proto/log\":12,\"./lib/proto/parse-element\":13,\"./lib/send-request\":14,\"./lib/switches\":16,\"./lib/switches-selectors\":15,\"./lib/uniqueid\":17,\"./lib/util/clone\":18,\"./lib/util/contains\":19,\"./lib/util/extend\":20,\"./lib/util/noop\":21}],2:[function(require,module,exports){var noop=require(\"./util/noop\");module.exports=function(request){if(request&&request.readyState<4){request.onreadystatechange=noop;request.abort()}}},{\"./util/noop\":21}],3:[function(require,module,exports){var forEachEls=require(\"../foreach-els\");module.exports=function(els,events,listener,useCapture){events=typeof events===\"string\"?events.split(\" \"):events;events.forEach(function(e){forEachEls(els,function(el){el.addEventListener(e,listener,useCapture)})})}},{\"../foreach-els\":5}],4:[function(require,module,exports){var forEachEls=require(\"../foreach-els\");module.exports=function(els,events,opts){events=typeof events===\"string\"?events.split(\" \"):events;events.forEach(function(e){var event;event=document.createEvent(\"HTMLEvents\");event.initEvent(e,true,true);event.eventName=e;if(opts){Object.keys(opts).forEach(function(key){event[key]=opts[key]})}forEachEls(els,function(el){var domFix=false;if(!el.parentNode&&el!==document&&el!==window){domFix=true;document.body.appendChild(el)}el.dispatchEvent(event);if(domFix){el.parentNode.removeChild(el)}})})}},{\"../foreach-els\":5}],5:[function(require,module,exports){module.exports=function(els,fn,context){if(els instanceof HTMLCollection||els instanceof NodeList||els instanceof Array){return Array.prototype.forEach.call(els,fn,context)}return fn.call(context,els)}},{}],6:[function(require,module,exports){var forEachEls=require(\"./foreach-els\");module.exports=function(selectors,cb,context,DOMcontext){DOMcontext=DOMcontext||document;selectors.forEach(function(selector){forEachEls(DOMcontext.querySelectorAll(selector),cb,context)})}},{\"./foreach-els\":5}],7:[function(require,module,exports){module.exports=function(){return window.history&&window.history.pushState&&window.history.replaceState&&!navigator.userAgent.match(/((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/)}},{}],8:[function(require,module,exports){var defaultSwitches=require(\"./switches\");module.exports=function(options){options=options||{};options.elements=options.elements||\"a[href], form[action]\";options.selectors=options.selectors||[\"title\",\".js-Pjax\"];options.switches=options.switches||{};options.switchesOptions=options.switchesOptions||{};options.history=typeof options.history===\"undefined\"?true:options.history;options.analytics=typeof options.analytics===\"function\"||options.analytics===false?options.analytics:defaultAnalytics;options.scrollTo=typeof options.scrollTo===\"undefined\"?0:options.scrollTo;options.scrollRestoration=typeof options.scrollRestoration!==\"undefined\"?options.scrollRestoration:true;options.cacheBust=typeof options.cacheBust===\"undefined\"?true:options.cacheBust;options.debug=options.debug||false;options.timeout=options.timeout||0;options.currentUrlFullReload=typeof options.currentUrlFullReload===\"undefined\"?false:options.currentUrlFullReload;if(!options.switches.head){options.switches.head=defaultSwitches.switchElementsAlt}if(!options.switches.body){options.switches.body=defaultSwitches.switchElementsAlt}return options};function defaultAnalytics(){if(window._gaq){_gaq.push([\"_trackPageview\"])}if(window.ga){ga(\"send\",\"pageview\",{page:location.pathname,title:document.title})}}},{\"./switches\":16}],9:[function(require,module,exports){var on=require(\"../events/on\");var clone=require(\"../util/clone\");var attrState=\"data-pjax-state\";var formAction=function(el,event){if(isDefaultPrevented(event)){return}var options=clone(this.options);options.requestOptions={requestUrl:el.getAttribute(\"action\")||window.location.href,requestMethod:el.getAttribute(\"method\")||\"GET\"};var virtLinkElement=document.createElement(\"a\");virtLinkElement.setAttribute(\"href\",options.requestOptions.requestUrl);var attrValue=checkIfShouldAbort(virtLinkElement,options);if(attrValue){el.setAttribute(attrState,attrValue);return}event.preventDefault();if(el.enctype===\"multipart/form-data\"){options.requestOptions.formData=new FormData(el)}else{options.requestOptions.requestParams=parseFormElements(el)}el.setAttribute(attrState,\"submit\");options.triggerElement=el;this.loadUrl(virtLinkElement.href,options)};function parseFormElements(el){var requestParams=[];var formElements=el.elements;for(var i=0;i<formElements.length;i++){var element=formElements[i];var tagName=element.tagName.toLowerCase();if(!!element.name&&element.attributes!==undefined&&tagName!==\"button\"){var type=element.attributes.type;if(!type||type.value!==\"checkbox\"&&type.value!==\"radio\"||element.checked){var values=[];if(tagName===\"select\"){var opt;for(var j=0;j<element.options.length;j++){opt=element.options[j];if(opt.selected&&!opt.disabled){values.push(opt.hasAttribute(\"value\")?opt.value:opt.text)}}}else{values.push(element.value)}for(var k=0;k<values.length;k++){requestParams.push({name:encodeURIComponent(element.name),value:encodeURIComponent(values[k])})}}}}return requestParams}function checkIfShouldAbort(virtLinkElement,options){if(virtLinkElement.protocol!==window.location.protocol||virtLinkElement.host!==window.location.host){return\"external\"}if(virtLinkElement.hash&&virtLinkElement.href.replace(virtLinkElement.hash,\"\")===window.location.href.replace(location.hash,\"\")){return\"anchor\"}if(virtLinkElement.href===window.location.href.split(\"#\")[0]+\"#\"){return\"anchor-empty\"}if(options.currentUrlFullReload&&virtLinkElement.href===window.location.href.split(\"#\")[0]){return\"reload\"}}var isDefaultPrevented=function(event){return event.defaultPrevented||event.returnValue===false};module.exports=function(el){var that=this;el.setAttribute(attrState,\"\");on(el,\"submit\",function(event){formAction.call(that,el,event)})}},{\"../events/on\":3,\"../util/clone\":18}],10:[function(require,module,exports){var on=require(\"../events/on\");var clone=require(\"../util/clone\");var attrState=\"data-pjax-state\";var linkAction=function(el,event){if(isDefaultPrevented(event)){return}var options=clone(this.options);var attrValue=checkIfShouldAbort(el,event);if(attrValue){el.setAttribute(attrState,attrValue);return}event.preventDefault();if(this.options.currentUrlFullReload&&el.href===window.location.href.split(\"#\")[0]){el.setAttribute(attrState,\"reload\");this.reload();return}el.setAttribute(attrState,\"load\");options.triggerElement=el;this.loadUrl(el.href,options)};function checkIfShouldAbort(el,event){if(event.which>1||event.metaKey||event.ctrlKey||event.shiftKey||event.altKey){return\"modifier\"}if(el.protocol!==window.location.protocol||el.host!==window.location.host){return\"external\"}if(el.hash&&el.href.replace(el.hash,\"\")===window.location.href.replace(location.hash,\"\")){return\"anchor\"}if(el.href===window.location.href.split(\"#\")[0]+\"#\"){return\"anchor-empty\"}}var isDefaultPrevented=function(event){return event.defaultPrevented||event.returnValue===false};module.exports=function(el){var that=this;el.setAttribute(attrState,\"\");on(el,\"click\",function(event){linkAction.call(that,el,event)});on(el,\"keyup\",function(event){if(event.keyCode===13){linkAction.call(that,el,event)}}.bind(this))}},{\"../events/on\":3,\"../util/clone\":18}],11:[function(require,module,exports){var clone=require(\"../util/clone\");var newUid=require(\"../uniqueid\");var trigger=require(\"../events/trigger\");module.exports=function(responseText,request,href,options){options=clone(options||this.options);options.request=request;if(responseText===false){trigger(document,\"pjax:complete pjax:error\",options);return}var currentState=window.history.state||{};window.history.replaceState({url:currentState.url||window.location.href,title:currentState.title||document.title,uid:currentState.uid||newUid(),scrollPos:[document.documentElement.scrollLeft||document.body.scrollLeft,document.documentElement.scrollTop||document.body.scrollTop]},document.title,window.location.href);var oldHref=href;if(request.responseURL){if(href!==request.responseURL){href=request.responseURL}}else if(request.getResponseHeader(\"X-PJAX-URL\")){href=request.getResponseHeader(\"X-PJAX-URL\")}else if(request.getResponseHeader(\"X-XHR-Redirected-To\")){href=request.getResponseHeader(\"X-XHR-Redirected-To\")}var a=document.createElement(\"a\");a.href=oldHref;var oldHash=a.hash;a.href=href;if(oldHash&&!a.hash){a.hash=oldHash;href=a.href}this.state.href=href;this.state.options=options;try{this.loadContent(responseText,options)}catch(e){trigger(document,\"pjax:error\",options);if(!this.options.debug){if(console&&console.error){console.error(\"Pjax switch fail: \",e)}return this.latestChance(href)}else{throw e}}}},{\"../events/trigger\":4,\"../uniqueid\":17,\"../util/clone\":18}],12:[function(require,module,exports){module.exports=function(){if(this.options.debug&&console){if(typeof console.log===\"function\"){console.log.apply(console,arguments)}else if(console.log){console.log(arguments)}}}},{}],13:[function(require,module,exports){var attrState=\"data-pjax-state\";module.exports=function(el){switch(el.tagName.toLowerCase()){case\"a\":if(!el.hasAttribute(attrState)){this.attachLink(el)}break;case\"form\":if(!el.hasAttribute(attrState)){this.attachForm(el)}break;default:throw\"Pjax can only be applied on <a> or <form> submit\"}}},{}],14:[function(require,module,exports){var updateQueryString=require(\"./util/update-query-string\");module.exports=function(location,options,callback){options=options||{};var queryString;var requestOptions=options.requestOptions||{};var requestMethod=(requestOptions.requestMethod||\"GET\").toUpperCase();var requestParams=requestOptions.requestParams||null;var formData=requestOptions.formData||null;var requestPayload=null;var request=new XMLHttpRequest;var timeout=options.timeout||0;request.onreadystatechange=function(){if(request.readyState===4){if(request.status===200){callback(request.responseText,request,location,options)}else if(request.status!==0){callback(null,request,location,options)}}};request.onerror=function(e){console.log(e);callback(null,request,location,options)};request.ontimeout=function(){callback(null,request,location,options)};if(requestParams&&requestParams.length){queryString=requestParams.map(function(param){return param.name+\"=\"+param.value}).join(\"&\");switch(requestMethod){case\"GET\":location=location.split(\"?\")[0];location+=\"?\"+queryString;break;case\"POST\":requestPayload=queryString;break}}else if(formData){requestPayload=formData}if(options.cacheBust){location=updateQueryString(location,\"t\",Date.now())}request.open(requestMethod,location,true);request.timeout=timeout;request.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\");request.setRequestHeader(\"X-PJAX\",\"true\");request.setRequestHeader(\"X-PJAX-Selectors\",JSON.stringify(options.selectors));if(requestPayload&&requestMethod===\"POST\"&&!formData){request.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\")}request.send(requestPayload);return request}},{\"./util/update-query-string\":22}],15:[function(require,module,exports){var forEachEls=require(\"./foreach-els\");var defaultSwitches=require(\"./switches\");module.exports=function(switches,switchesOptions,selectors,fromEl,toEl,options){var switchesQueue=[];selectors.forEach(function(selector){var newEls=fromEl.querySelectorAll(selector);var oldEls=toEl.querySelectorAll(selector);if(this.log){this.log(\"Pjax switch\",selector,newEls,oldEls)}if(newEls.length!==oldEls.length){throw\"DOM doesn’t look the same on new loaded page: ’\"+selector+\"’ - new \"+newEls.length+\", old \"+oldEls.length}forEachEls(newEls,function(newEl,i){var oldEl=oldEls[i];if(this.log){this.log(\"newEl\",newEl,\"oldEl\",oldEl)}var callback=switches[selector]?switches[selector].bind(this,oldEl,newEl,options,switchesOptions[selector]):defaultSwitches.outerHTML.bind(this,oldEl,newEl,options);switchesQueue.push(callback)},this)},this);this.state.numPendingSwitches=switchesQueue.length;switchesQueue.forEach(function(queuedSwitch){queuedSwitch()})}},{\"./foreach-els\":5,\"./switches\":16}],16:[function(require,module,exports){var on=require(\"./events/on\");module.exports={outerHTML:function(oldEl,newEl){oldEl.outerHTML=newEl.outerHTML;this.onSwitch()},innerHTML:function(oldEl,newEl){oldEl.innerHTML=newEl.innerHTML;if(newEl.className===\"\"){oldEl.removeAttribute(\"class\")}else{}this.onSwitch()},switchElementsAlt:function(oldEl,newEl){oldEl.innerHTML=newEl.innerHTML;if(newEl.hasAttributes()){var attrs=newEl.attributes;for(var i=0;i<attrs.length;i++){oldEl.attributes.setNamedItem(attrs[i].cloneNode())}}this.onSwitch()},replaceNode:function(oldEl,newEl){oldEl.parentNode.replaceChild(newEl,oldEl);this.onSwitch()},sideBySide:function(oldEl,newEl,options,switchOptions){var forEach=Array.prototype.forEach;var elsToRemove=[];var elsToAdd=[];var fragToAppend=document.createDocumentFragment();var animationEventNames=\"animationend webkitAnimationEnd MSAnimationEnd oanimationend\";var animatedElsNumber=0;var sexyAnimationEnd=function(e){if(e.target!==e.currentTarget){return}animatedElsNumber--;if(animatedElsNumber<=0&&elsToRemove){elsToRemove.forEach(function(el){if(el.parentNode){el.parentNode.removeChild(el)}});elsToAdd.forEach(function(el){el.className=el.className.replace(el.getAttribute(\"data-pjax-classes\"),\"\");el.removeAttribute(\"data-pjax-classes\")});elsToAdd=null;elsToRemove=null;this.onSwitch()}}.bind(this);switchOptions=switchOptions||{};forEach.call(oldEl.childNodes,function(el){elsToRemove.push(el);if(el.classList&&!el.classList.contains(\"js-Pjax-remove\")){if(el.hasAttribute(\"data-pjax-classes\")){el.className=el.className.replace(el.getAttribute(\"data-pjax-classes\"),\"\");el.removeAttribute(\"data-pjax-classes\")}el.classList.add(\"js-Pjax-remove\");if(switchOptions.callbacks&&switchOptions.callbacks.removeElement){switchOptions.callbacks.removeElement(el)}if(switchOptions.classNames){el.className+=\" \"+switchOptions.classNames.remove+\" \"+(options.backward?switchOptions.classNames.backward:switchOptions.classNames.forward)}animatedElsNumber++;on(el,animationEventNames,sexyAnimationEnd,true)}});forEach.call(newEl.childNodes,function(el){if(el.classList){var addClasses=\"\";if(switchOptions.classNames){addClasses=\" js-Pjax-add \"+switchOptions.classNames.add+\" \"+(options.backward?switchOptions.classNames.forward:switchOptions.classNames.backward)}if(switchOptions.callbacks&&switchOptions.callbacks.addElement){switchOptions.callbacks.addElement(el)}el.className+=addClasses;el.setAttribute(\"data-pjax-classes\",addClasses);elsToAdd.push(el);fragToAppend.appendChild(el);animatedElsNumber++;on(el,animationEventNames,sexyAnimationEnd,true)}});oldEl.className=newEl.className;oldEl.appendChild(fragToAppend)}}},{\"./events/on\":3}],17:[function(require,module,exports){module.exports=function(){var counter=0;return function(){var id=\"pjax\"+(new Date).getTime()+\"_\"+counter;counter++;return id}}()},{}],18:[function(require,module,exports){module.exports=function(obj){if(null===obj||\"object\"!==typeof obj){return obj}var copy=obj.constructor();for(var attr in obj){if(obj.hasOwnProperty(attr)){copy[attr]=obj[attr]}}return copy}},{}],19:[function(require,module,exports){module.exports=function contains(doc,selectors,el){for(var i=0;i<selectors.length;i++){var selectedEls=doc.querySelectorAll(selectors[i]);for(var j=0;j<selectedEls.length;j++){if(selectedEls[j].contains(el)){return true}}}return false}},{}],20:[function(require,module,exports){module.exports=function(target){if(target==null){return null}var to=Object(target);for(var i=1;i<arguments.length;i++){var source=arguments[i];if(source!=null){for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){to[key]=source[key]}}}}return to}},{}],21:[function(require,module,exports){module.exports=function(){}},{}],22:[function(require,module,exports){module.exports=function(uri,key,value){var re=new RegExp(\"([?&])\"+key+\"=.*?(&|$)\",\"i\");var separator=uri.indexOf(\"?\")!==-1?\"&\":\"?\";if(uri.match(re)){return uri.replace(re,\"$1\"+key+\"=\"+value+\"$2\")}else{return uri+separator+key+\"=\"+value}}},{}]},{},[1])(1)});","source":"lib/pjax/pjax.min.js","raw":"(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pjax=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){var forEachEls=require(\"./lib/foreach-els\");var parseOptions=require(\"./lib/parse-options\");var switches=require(\"./lib/switches\");var newUid=require(\"./lib/uniqueid\");var on=require(\"./lib/events/on\");var trigger=require(\"./lib/events/trigger\");var clone=require(\"./lib/util/clone\");var contains=require(\"./lib/util/contains\");var extend=require(\"./lib/util/extend\");var noop=require(\"./lib/util/noop\");var Pjax=function(options){this.state={numPendingSwitches:0,href:null,options:null};this.options=parseOptions(options);this.log(\"Pjax options\",this.options);if(this.options.scrollRestoration&&\"scrollRestoration\"in history){history.scrollRestoration=\"manual\"}this.maxUid=this.lastUid=newUid();this.parseDOM(document);on(window,\"popstate\",function(st){if(st.state){var opt=clone(this.options);opt.url=st.state.url;opt.title=st.state.title;opt.history=false;opt.scrollPos=st.state.scrollPos;if(st.state.uid<this.lastUid){opt.backward=true}else{opt.forward=true}this.lastUid=st.state.uid;this.loadUrl(st.state.url,opt)}}.bind(this))};Pjax.switches=switches;Pjax.prototype={log:require(\"./lib/proto/log\"),getElements:function(el){return el.querySelectorAll(this.options.elements)},parseDOM:function(el){var parseElement=require(\"./lib/proto/parse-element\");forEachEls(this.getElements(el),parseElement,this)},refresh:function(el){this.parseDOM(el||document)},reload:function(){window.location.reload()},attachLink:require(\"./lib/proto/attach-link\"),attachForm:require(\"./lib/proto/attach-form\"),forEachSelectors:function(cb,context,DOMcontext){return require(\"./lib/foreach-selectors\").bind(this)(this.options.selectors,cb,context,DOMcontext)},switchSelectors:function(selectors,fromEl,toEl,options){return require(\"./lib/switches-selectors\").bind(this)(this.options.switches,this.options.switchesOptions,selectors,fromEl,toEl,options)},latestChance:function(href){window.location=href},onSwitch:function(){trigger(window,\"resize scroll\");this.state.numPendingSwitches--;if(this.state.numPendingSwitches===0){this.afterAllSwitches()}},loadContent:function(html,options){if(typeof html!==\"string\"){trigger(document,\"pjax:complete pjax:error\",options);return}var tmpEl=document.implementation.createHTMLDocument(\"pjax\");var htmlRegex=/<html[^>]+>/gi;var htmlAttribsRegex=/\\s?[a-z:]+(?:=['\"][^'\">]+['\"])*/gi;var matches=html.match(htmlRegex);if(matches&&matches.length){matches=matches[0].match(htmlAttribsRegex);if(matches.length){matches.shift();matches.forEach(function(htmlAttrib){var attr=htmlAttrib.trim().split(\"=\");if(attr.length===1){tmpEl.documentElement.setAttribute(attr[0],true)}else{tmpEl.documentElement.setAttribute(attr[0],attr[1].slice(1,-1))}})}}tmpEl.documentElement.innerHTML=html;this.log(\"load content\",tmpEl.documentElement.attributes,tmpEl.documentElement.innerHTML.length);if(document.activeElement&&contains(document,this.options.selectors,document.activeElement)){try{document.activeElement.blur()}catch(e){}}this.switchSelectors(this.options.selectors,tmpEl,document,options)},abortRequest:require(\"./lib/abort-request\"),doRequest:require(\"./lib/send-request\"),handleResponse:require(\"./lib/proto/handle-response\"),loadUrl:function(href,options){options=typeof options===\"object\"?extend({},this.options,options):clone(this.options);this.log(\"load href\",href,options);this.abortRequest(this.request);trigger(document,\"pjax:send\",options);this.request=this.doRequest(href,options,this.handleResponse.bind(this))},afterAllSwitches:function(){var autofocusEl=Array.prototype.slice.call(document.querySelectorAll(\"[autofocus]\")).pop();if(autofocusEl&&document.activeElement!==autofocusEl){autofocusEl.focus()}this.options.selectors.forEach(function(selector){forEachEls(document.querySelectorAll(selector),function(el){if(el===0);})});var state=this.state;if(state.options.history){if(!window.history.state){this.lastUid=this.maxUid=newUid();window.history.replaceState({url:window.location.href,title:document.title,uid:this.maxUid,scrollPos:[0,0]},document.title)}this.lastUid=this.maxUid=newUid();window.history.pushState({url:state.href,title:state.options.title,uid:this.maxUid,scrollPos:[0,0]},state.options.title,state.href)}this.forEachSelectors(function(el){this.parseDOM(el)},this);trigger(document,\"pjax:complete pjax:success\",state.options);if(typeof state.options.analytics===\"function\"){state.options.analytics()}if(state.options.history){var a=document.createElement(\"a\");a.href=this.state.href;if(a.hash){var name=a.hash.slice(1);name=decodeURIComponent(name);var curtop=0;var target=document.getElementById(name)||document.getElementsByName(name)[0];if(target){if(target.offsetParent){do{curtop+=target.offsetTop;target=target.offsetParent}while(target)}}window.scrollTo(0,curtop)}else if(state.options.scrollTo!==false){if(state.options.scrollTo.length>1){window.scrollTo(state.options.scrollTo[0],state.options.scrollTo[1])}else{window.scrollTo(0,state.options.scrollTo)}}}else if(state.options.scrollRestoration&&state.options.scrollPos){window.scrollTo(state.options.scrollPos[0],state.options.scrollPos[1])}this.state={numPendingSwitches:0,href:null,options:null}}};Pjax.isSupported=require(\"./lib/is-supported\");if(Pjax.isSupported()){module.exports=Pjax}else{var stupidPjax=noop;for(var key in Pjax.prototype){if(Pjax.prototype.hasOwnProperty(key)&&typeof Pjax.prototype[key]===\"function\"){stupidPjax[key]=noop}}module.exports=stupidPjax}},{\"./lib/abort-request\":2,\"./lib/events/on\":3,\"./lib/events/trigger\":4,\"./lib/foreach-els\":5,\"./lib/foreach-selectors\":6,\"./lib/is-supported\":7,\"./lib/parse-options\":8,\"./lib/proto/attach-form\":9,\"./lib/proto/attach-link\":10,\"./lib/proto/handle-response\":11,\"./lib/proto/log\":12,\"./lib/proto/parse-element\":13,\"./lib/send-request\":14,\"./lib/switches\":16,\"./lib/switches-selectors\":15,\"./lib/uniqueid\":17,\"./lib/util/clone\":18,\"./lib/util/contains\":19,\"./lib/util/extend\":20,\"./lib/util/noop\":21}],2:[function(require,module,exports){var noop=require(\"./util/noop\");module.exports=function(request){if(request&&request.readyState<4){request.onreadystatechange=noop;request.abort()}}},{\"./util/noop\":21}],3:[function(require,module,exports){var forEachEls=require(\"../foreach-els\");module.exports=function(els,events,listener,useCapture){events=typeof events===\"string\"?events.split(\" \"):events;events.forEach(function(e){forEachEls(els,function(el){el.addEventListener(e,listener,useCapture)})})}},{\"../foreach-els\":5}],4:[function(require,module,exports){var forEachEls=require(\"../foreach-els\");module.exports=function(els,events,opts){events=typeof events===\"string\"?events.split(\" \"):events;events.forEach(function(e){var event;event=document.createEvent(\"HTMLEvents\");event.initEvent(e,true,true);event.eventName=e;if(opts){Object.keys(opts).forEach(function(key){event[key]=opts[key]})}forEachEls(els,function(el){var domFix=false;if(!el.parentNode&&el!==document&&el!==window){domFix=true;document.body.appendChild(el)}el.dispatchEvent(event);if(domFix){el.parentNode.removeChild(el)}})})}},{\"../foreach-els\":5}],5:[function(require,module,exports){module.exports=function(els,fn,context){if(els instanceof HTMLCollection||els instanceof NodeList||els instanceof Array){return Array.prototype.forEach.call(els,fn,context)}return fn.call(context,els)}},{}],6:[function(require,module,exports){var forEachEls=require(\"./foreach-els\");module.exports=function(selectors,cb,context,DOMcontext){DOMcontext=DOMcontext||document;selectors.forEach(function(selector){forEachEls(DOMcontext.querySelectorAll(selector),cb,context)})}},{\"./foreach-els\":5}],7:[function(require,module,exports){module.exports=function(){return window.history&&window.history.pushState&&window.history.replaceState&&!navigator.userAgent.match(/((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/)}},{}],8:[function(require,module,exports){var defaultSwitches=require(\"./switches\");module.exports=function(options){options=options||{};options.elements=options.elements||\"a[href], form[action]\";options.selectors=options.selectors||[\"title\",\".js-Pjax\"];options.switches=options.switches||{};options.switchesOptions=options.switchesOptions||{};options.history=typeof options.history===\"undefined\"?true:options.history;options.analytics=typeof options.analytics===\"function\"||options.analytics===false?options.analytics:defaultAnalytics;options.scrollTo=typeof options.scrollTo===\"undefined\"?0:options.scrollTo;options.scrollRestoration=typeof options.scrollRestoration!==\"undefined\"?options.scrollRestoration:true;options.cacheBust=typeof options.cacheBust===\"undefined\"?true:options.cacheBust;options.debug=options.debug||false;options.timeout=options.timeout||0;options.currentUrlFullReload=typeof options.currentUrlFullReload===\"undefined\"?false:options.currentUrlFullReload;if(!options.switches.head){options.switches.head=defaultSwitches.switchElementsAlt}if(!options.switches.body){options.switches.body=defaultSwitches.switchElementsAlt}return options};function defaultAnalytics(){if(window._gaq){_gaq.push([\"_trackPageview\"])}if(window.ga){ga(\"send\",\"pageview\",{page:location.pathname,title:document.title})}}},{\"./switches\":16}],9:[function(require,module,exports){var on=require(\"../events/on\");var clone=require(\"../util/clone\");var attrState=\"data-pjax-state\";var formAction=function(el,event){if(isDefaultPrevented(event)){return}var options=clone(this.options);options.requestOptions={requestUrl:el.getAttribute(\"action\")||window.location.href,requestMethod:el.getAttribute(\"method\")||\"GET\"};var virtLinkElement=document.createElement(\"a\");virtLinkElement.setAttribute(\"href\",options.requestOptions.requestUrl);var attrValue=checkIfShouldAbort(virtLinkElement,options);if(attrValue){el.setAttribute(attrState,attrValue);return}event.preventDefault();if(el.enctype===\"multipart/form-data\"){options.requestOptions.formData=new FormData(el)}else{options.requestOptions.requestParams=parseFormElements(el)}el.setAttribute(attrState,\"submit\");options.triggerElement=el;this.loadUrl(virtLinkElement.href,options)};function parseFormElements(el){var requestParams=[];var formElements=el.elements;for(var i=0;i<formElements.length;i++){var element=formElements[i];var tagName=element.tagName.toLowerCase();if(!!element.name&&element.attributes!==undefined&&tagName!==\"button\"){var type=element.attributes.type;if(!type||type.value!==\"checkbox\"&&type.value!==\"radio\"||element.checked){var values=[];if(tagName===\"select\"){var opt;for(var j=0;j<element.options.length;j++){opt=element.options[j];if(opt.selected&&!opt.disabled){values.push(opt.hasAttribute(\"value\")?opt.value:opt.text)}}}else{values.push(element.value)}for(var k=0;k<values.length;k++){requestParams.push({name:encodeURIComponent(element.name),value:encodeURIComponent(values[k])})}}}}return requestParams}function checkIfShouldAbort(virtLinkElement,options){if(virtLinkElement.protocol!==window.location.protocol||virtLinkElement.host!==window.location.host){return\"external\"}if(virtLinkElement.hash&&virtLinkElement.href.replace(virtLinkElement.hash,\"\")===window.location.href.replace(location.hash,\"\")){return\"anchor\"}if(virtLinkElement.href===window.location.href.split(\"#\")[0]+\"#\"){return\"anchor-empty\"}if(options.currentUrlFullReload&&virtLinkElement.href===window.location.href.split(\"#\")[0]){return\"reload\"}}var isDefaultPrevented=function(event){return event.defaultPrevented||event.returnValue===false};module.exports=function(el){var that=this;el.setAttribute(attrState,\"\");on(el,\"submit\",function(event){formAction.call(that,el,event)})}},{\"../events/on\":3,\"../util/clone\":18}],10:[function(require,module,exports){var on=require(\"../events/on\");var clone=require(\"../util/clone\");var attrState=\"data-pjax-state\";var linkAction=function(el,event){if(isDefaultPrevented(event)){return}var options=clone(this.options);var attrValue=checkIfShouldAbort(el,event);if(attrValue){el.setAttribute(attrState,attrValue);return}event.preventDefault();if(this.options.currentUrlFullReload&&el.href===window.location.href.split(\"#\")[0]){el.setAttribute(attrState,\"reload\");this.reload();return}el.setAttribute(attrState,\"load\");options.triggerElement=el;this.loadUrl(el.href,options)};function checkIfShouldAbort(el,event){if(event.which>1||event.metaKey||event.ctrlKey||event.shiftKey||event.altKey){return\"modifier\"}if(el.protocol!==window.location.protocol||el.host!==window.location.host){return\"external\"}if(el.hash&&el.href.replace(el.hash,\"\")===window.location.href.replace(location.hash,\"\")){return\"anchor\"}if(el.href===window.location.href.split(\"#\")[0]+\"#\"){return\"anchor-empty\"}}var isDefaultPrevented=function(event){return event.defaultPrevented||event.returnValue===false};module.exports=function(el){var that=this;el.setAttribute(attrState,\"\");on(el,\"click\",function(event){linkAction.call(that,el,event)});on(el,\"keyup\",function(event){if(event.keyCode===13){linkAction.call(that,el,event)}}.bind(this))}},{\"../events/on\":3,\"../util/clone\":18}],11:[function(require,module,exports){var clone=require(\"../util/clone\");var newUid=require(\"../uniqueid\");var trigger=require(\"../events/trigger\");module.exports=function(responseText,request,href,options){options=clone(options||this.options);options.request=request;if(responseText===false){trigger(document,\"pjax:complete pjax:error\",options);return}var currentState=window.history.state||{};window.history.replaceState({url:currentState.url||window.location.href,title:currentState.title||document.title,uid:currentState.uid||newUid(),scrollPos:[document.documentElement.scrollLeft||document.body.scrollLeft,document.documentElement.scrollTop||document.body.scrollTop]},document.title,window.location.href);var oldHref=href;if(request.responseURL){if(href!==request.responseURL){href=request.responseURL}}else if(request.getResponseHeader(\"X-PJAX-URL\")){href=request.getResponseHeader(\"X-PJAX-URL\")}else if(request.getResponseHeader(\"X-XHR-Redirected-To\")){href=request.getResponseHeader(\"X-XHR-Redirected-To\")}var a=document.createElement(\"a\");a.href=oldHref;var oldHash=a.hash;a.href=href;if(oldHash&&!a.hash){a.hash=oldHash;href=a.href}this.state.href=href;this.state.options=options;try{this.loadContent(responseText,options)}catch(e){trigger(document,\"pjax:error\",options);if(!this.options.debug){if(console&&console.error){console.error(\"Pjax switch fail: \",e)}return this.latestChance(href)}else{throw e}}}},{\"../events/trigger\":4,\"../uniqueid\":17,\"../util/clone\":18}],12:[function(require,module,exports){module.exports=function(){if(this.options.debug&&console){if(typeof console.log===\"function\"){console.log.apply(console,arguments)}else if(console.log){console.log(arguments)}}}},{}],13:[function(require,module,exports){var attrState=\"data-pjax-state\";module.exports=function(el){switch(el.tagName.toLowerCase()){case\"a\":if(!el.hasAttribute(attrState)){this.attachLink(el)}break;case\"form\":if(!el.hasAttribute(attrState)){this.attachForm(el)}break;default:throw\"Pjax can only be applied on <a> or <form> submit\"}}},{}],14:[function(require,module,exports){var updateQueryString=require(\"./util/update-query-string\");module.exports=function(location,options,callback){options=options||{};var queryString;var requestOptions=options.requestOptions||{};var requestMethod=(requestOptions.requestMethod||\"GET\").toUpperCase();var requestParams=requestOptions.requestParams||null;var formData=requestOptions.formData||null;var requestPayload=null;var request=new XMLHttpRequest;var timeout=options.timeout||0;request.onreadystatechange=function(){if(request.readyState===4){if(request.status===200){callback(request.responseText,request,location,options)}else if(request.status!==0){callback(null,request,location,options)}}};request.onerror=function(e){console.log(e);callback(null,request,location,options)};request.ontimeout=function(){callback(null,request,location,options)};if(requestParams&&requestParams.length){queryString=requestParams.map(function(param){return param.name+\"=\"+param.value}).join(\"&\");switch(requestMethod){case\"GET\":location=location.split(\"?\")[0];location+=\"?\"+queryString;break;case\"POST\":requestPayload=queryString;break}}else if(formData){requestPayload=formData}if(options.cacheBust){location=updateQueryString(location,\"t\",Date.now())}request.open(requestMethod,location,true);request.timeout=timeout;request.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\");request.setRequestHeader(\"X-PJAX\",\"true\");request.setRequestHeader(\"X-PJAX-Selectors\",JSON.stringify(options.selectors));if(requestPayload&&requestMethod===\"POST\"&&!formData){request.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\")}request.send(requestPayload);return request}},{\"./util/update-query-string\":22}],15:[function(require,module,exports){var forEachEls=require(\"./foreach-els\");var defaultSwitches=require(\"./switches\");module.exports=function(switches,switchesOptions,selectors,fromEl,toEl,options){var switchesQueue=[];selectors.forEach(function(selector){var newEls=fromEl.querySelectorAll(selector);var oldEls=toEl.querySelectorAll(selector);if(this.log){this.log(\"Pjax switch\",selector,newEls,oldEls)}if(newEls.length!==oldEls.length){throw\"DOM doesn’t look the same on new loaded page: ’\"+selector+\"’ - new \"+newEls.length+\", old \"+oldEls.length}forEachEls(newEls,function(newEl,i){var oldEl=oldEls[i];if(this.log){this.log(\"newEl\",newEl,\"oldEl\",oldEl)}var callback=switches[selector]?switches[selector].bind(this,oldEl,newEl,options,switchesOptions[selector]):defaultSwitches.outerHTML.bind(this,oldEl,newEl,options);switchesQueue.push(callback)},this)},this);this.state.numPendingSwitches=switchesQueue.length;switchesQueue.forEach(function(queuedSwitch){queuedSwitch()})}},{\"./foreach-els\":5,\"./switches\":16}],16:[function(require,module,exports){var on=require(\"./events/on\");module.exports={outerHTML:function(oldEl,newEl){oldEl.outerHTML=newEl.outerHTML;this.onSwitch()},innerHTML:function(oldEl,newEl){oldEl.innerHTML=newEl.innerHTML;if(newEl.className===\"\"){oldEl.removeAttribute(\"class\")}else{}this.onSwitch()},switchElementsAlt:function(oldEl,newEl){oldEl.innerHTML=newEl.innerHTML;if(newEl.hasAttributes()){var attrs=newEl.attributes;for(var i=0;i<attrs.length;i++){oldEl.attributes.setNamedItem(attrs[i].cloneNode())}}this.onSwitch()},replaceNode:function(oldEl,newEl){oldEl.parentNode.replaceChild(newEl,oldEl);this.onSwitch()},sideBySide:function(oldEl,newEl,options,switchOptions){var forEach=Array.prototype.forEach;var elsToRemove=[];var elsToAdd=[];var fragToAppend=document.createDocumentFragment();var animationEventNames=\"animationend webkitAnimationEnd MSAnimationEnd oanimationend\";var animatedElsNumber=0;var sexyAnimationEnd=function(e){if(e.target!==e.currentTarget){return}animatedElsNumber--;if(animatedElsNumber<=0&&elsToRemove){elsToRemove.forEach(function(el){if(el.parentNode){el.parentNode.removeChild(el)}});elsToAdd.forEach(function(el){el.className=el.className.replace(el.getAttribute(\"data-pjax-classes\"),\"\");el.removeAttribute(\"data-pjax-classes\")});elsToAdd=null;elsToRemove=null;this.onSwitch()}}.bind(this);switchOptions=switchOptions||{};forEach.call(oldEl.childNodes,function(el){elsToRemove.push(el);if(el.classList&&!el.classList.contains(\"js-Pjax-remove\")){if(el.hasAttribute(\"data-pjax-classes\")){el.className=el.className.replace(el.getAttribute(\"data-pjax-classes\"),\"\");el.removeAttribute(\"data-pjax-classes\")}el.classList.add(\"js-Pjax-remove\");if(switchOptions.callbacks&&switchOptions.callbacks.removeElement){switchOptions.callbacks.removeElement(el)}if(switchOptions.classNames){el.className+=\" \"+switchOptions.classNames.remove+\" \"+(options.backward?switchOptions.classNames.backward:switchOptions.classNames.forward)}animatedElsNumber++;on(el,animationEventNames,sexyAnimationEnd,true)}});forEach.call(newEl.childNodes,function(el){if(el.classList){var addClasses=\"\";if(switchOptions.classNames){addClasses=\" js-Pjax-add \"+switchOptions.classNames.add+\" \"+(options.backward?switchOptions.classNames.forward:switchOptions.classNames.backward)}if(switchOptions.callbacks&&switchOptions.callbacks.addElement){switchOptions.callbacks.addElement(el)}el.className+=addClasses;el.setAttribute(\"data-pjax-classes\",addClasses);elsToAdd.push(el);fragToAppend.appendChild(el);animatedElsNumber++;on(el,animationEventNames,sexyAnimationEnd,true)}});oldEl.className=newEl.className;oldEl.appendChild(fragToAppend)}}},{\"./events/on\":3}],17:[function(require,module,exports){module.exports=function(){var counter=0;return function(){var id=\"pjax\"+(new Date).getTime()+\"_\"+counter;counter++;return id}}()},{}],18:[function(require,module,exports){module.exports=function(obj){if(null===obj||\"object\"!==typeof obj){return obj}var copy=obj.constructor();for(var attr in obj){if(obj.hasOwnProperty(attr)){copy[attr]=obj[attr]}}return copy}},{}],19:[function(require,module,exports){module.exports=function contains(doc,selectors,el){for(var i=0;i<selectors.length;i++){var selectedEls=doc.querySelectorAll(selectors[i]);for(var j=0;j<selectedEls.length;j++){if(selectedEls[j].contains(el)){return true}}}return false}},{}],20:[function(require,module,exports){module.exports=function(target){if(target==null){return null}var to=Object(target);for(var i=1;i<arguments.length;i++){var source=arguments[i];if(source!=null){for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){to[key]=source[key]}}}}return to}},{}],21:[function(require,module,exports){module.exports=function(){}},{}],22:[function(require,module,exports){module.exports=function(uri,key,value){var re=new RegExp(\"([?&])\"+key+\"=.*?(&|$)\",\"i\");var separator=uri.indexOf(\"?\")!==-1?\"&\":\"?\";if(uri.match(re)){return uri.replace(re,\"$1\"+key+\"=\"+value+\"$2\")}else{return uri+separator+key+\"=\"+value}}},{}]},{},[1])(1)});","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/pjax.min.js","layout":"false","title":"","comments":1,"_id":"clixi467k001n37jx5by3awrs","content":"(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pjax=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){var forEachEls=require(\"./lib/foreach-els\");var parseOptions=require(\"./lib/parse-options\");var switches=require(\"./lib/switches\");var newUid=require(\"./lib/uniqueid\");var on=require(\"./lib/events/on\");var trigger=require(\"./lib/events/trigger\");var clone=require(\"./lib/util/clone\");var contains=require(\"./lib/util/contains\");var extend=require(\"./lib/util/extend\");var noop=require(\"./lib/util/noop\");var Pjax=function(options){this.state={numPendingSwitches:0,href:null,options:null};this.options=parseOptions(options);this.log(\"Pjax options\",this.options);if(this.options.scrollRestoration&&\"scrollRestoration\"in history){history.scrollRestoration=\"manual\"}this.maxUid=this.lastUid=newUid();this.parseDOM(document);on(window,\"popstate\",function(st){if(st.state){var opt=clone(this.options);opt.url=st.state.url;opt.title=st.state.title;opt.history=false;opt.scrollPos=st.state.scrollPos;if(st.state.uid<this.lastUid){opt.backward=true}else{opt.forward=true}this.lastUid=st.state.uid;this.loadUrl(st.state.url,opt)}}.bind(this))};Pjax.switches=switches;Pjax.prototype={log:require(\"./lib/proto/log\"),getElements:function(el){return el.querySelectorAll(this.options.elements)},parseDOM:function(el){var parseElement=require(\"./lib/proto/parse-element\");forEachEls(this.getElements(el),parseElement,this)},refresh:function(el){this.parseDOM(el||document)},reload:function(){window.location.reload()},attachLink:require(\"./lib/proto/attach-link\"),attachForm:require(\"./lib/proto/attach-form\"),forEachSelectors:function(cb,context,DOMcontext){return require(\"./lib/foreach-selectors\").bind(this)(this.options.selectors,cb,context,DOMcontext)},switchSelectors:function(selectors,fromEl,toEl,options){return require(\"./lib/switches-selectors\").bind(this)(this.options.switches,this.options.switchesOptions,selectors,fromEl,toEl,options)},latestChance:function(href){window.location=href},onSwitch:function(){trigger(window,\"resize scroll\");this.state.numPendingSwitches--;if(this.state.numPendingSwitches===0){this.afterAllSwitches()}},loadContent:function(html,options){if(typeof html!==\"string\"){trigger(document,\"pjax:complete pjax:error\",options);return}var tmpEl=document.implementation.createHTMLDocument(\"pjax\");var htmlRegex=/<html[^>]+>/gi;var htmlAttribsRegex=/\\s?[a-z:]+(?:=['\"][^'\">]+['\"])*/gi;var matches=html.match(htmlRegex);if(matches&&matches.length){matches=matches[0].match(htmlAttribsRegex);if(matches.length){matches.shift();matches.forEach(function(htmlAttrib){var attr=htmlAttrib.trim().split(\"=\");if(attr.length===1){tmpEl.documentElement.setAttribute(attr[0],true)}else{tmpEl.documentElement.setAttribute(attr[0],attr[1].slice(1,-1))}})}}tmpEl.documentElement.innerHTML=html;this.log(\"load content\",tmpEl.documentElement.attributes,tmpEl.documentElement.innerHTML.length);if(document.activeElement&&contains(document,this.options.selectors,document.activeElement)){try{document.activeElement.blur()}catch(e){}}this.switchSelectors(this.options.selectors,tmpEl,document,options)},abortRequest:require(\"./lib/abort-request\"),doRequest:require(\"./lib/send-request\"),handleResponse:require(\"./lib/proto/handle-response\"),loadUrl:function(href,options){options=typeof options===\"object\"?extend({},this.options,options):clone(this.options);this.log(\"load href\",href,options);this.abortRequest(this.request);trigger(document,\"pjax:send\",options);this.request=this.doRequest(href,options,this.handleResponse.bind(this))},afterAllSwitches:function(){var autofocusEl=Array.prototype.slice.call(document.querySelectorAll(\"[autofocus]\")).pop();if(autofocusEl&&document.activeElement!==autofocusEl){autofocusEl.focus()}this.options.selectors.forEach(function(selector){forEachEls(document.querySelectorAll(selector),function(el){if(el===0);})});var state=this.state;if(state.options.history){if(!window.history.state){this.lastUid=this.maxUid=newUid();window.history.replaceState({url:window.location.href,title:document.title,uid:this.maxUid,scrollPos:[0,0]},document.title)}this.lastUid=this.maxUid=newUid();window.history.pushState({url:state.href,title:state.options.title,uid:this.maxUid,scrollPos:[0,0]},state.options.title,state.href)}this.forEachSelectors(function(el){this.parseDOM(el)},this);trigger(document,\"pjax:complete pjax:success\",state.options);if(typeof state.options.analytics===\"function\"){state.options.analytics()}if(state.options.history){var a=document.createElement(\"a\");a.href=this.state.href;if(a.hash){var name=a.hash.slice(1);name=decodeURIComponent(name);var curtop=0;var target=document.getElementById(name)||document.getElementsByName(name)[0];if(target){if(target.offsetParent){do{curtop+=target.offsetTop;target=target.offsetParent}while(target)}}window.scrollTo(0,curtop)}else if(state.options.scrollTo!==false){if(state.options.scrollTo.length>1){window.scrollTo(state.options.scrollTo[0],state.options.scrollTo[1])}else{window.scrollTo(0,state.options.scrollTo)}}}else if(state.options.scrollRestoration&&state.options.scrollPos){window.scrollTo(state.options.scrollPos[0],state.options.scrollPos[1])}this.state={numPendingSwitches:0,href:null,options:null}}};Pjax.isSupported=require(\"./lib/is-supported\");if(Pjax.isSupported()){module.exports=Pjax}else{var stupidPjax=noop;for(var key in Pjax.prototype){if(Pjax.prototype.hasOwnProperty(key)&&typeof Pjax.prototype[key]===\"function\"){stupidPjax[key]=noop}}module.exports=stupidPjax}},{\"./lib/abort-request\":2,\"./lib/events/on\":3,\"./lib/events/trigger\":4,\"./lib/foreach-els\":5,\"./lib/foreach-selectors\":6,\"./lib/is-supported\":7,\"./lib/parse-options\":8,\"./lib/proto/attach-form\":9,\"./lib/proto/attach-link\":10,\"./lib/proto/handle-response\":11,\"./lib/proto/log\":12,\"./lib/proto/parse-element\":13,\"./lib/send-request\":14,\"./lib/switches\":16,\"./lib/switches-selectors\":15,\"./lib/uniqueid\":17,\"./lib/util/clone\":18,\"./lib/util/contains\":19,\"./lib/util/extend\":20,\"./lib/util/noop\":21}],2:[function(require,module,exports){var noop=require(\"./util/noop\");module.exports=function(request){if(request&&request.readyState<4){request.onreadystatechange=noop;request.abort()}}},{\"./util/noop\":21}],3:[function(require,module,exports){var forEachEls=require(\"../foreach-els\");module.exports=function(els,events,listener,useCapture){events=typeof events===\"string\"?events.split(\" \"):events;events.forEach(function(e){forEachEls(els,function(el){el.addEventListener(e,listener,useCapture)})})}},{\"../foreach-els\":5}],4:[function(require,module,exports){var forEachEls=require(\"../foreach-els\");module.exports=function(els,events,opts){events=typeof events===\"string\"?events.split(\" \"):events;events.forEach(function(e){var event;event=document.createEvent(\"HTMLEvents\");event.initEvent(e,true,true);event.eventName=e;if(opts){Object.keys(opts).forEach(function(key){event[key]=opts[key]})}forEachEls(els,function(el){var domFix=false;if(!el.parentNode&&el!==document&&el!==window){domFix=true;document.body.appendChild(el)}el.dispatchEvent(event);if(domFix){el.parentNode.removeChild(el)}})})}},{\"../foreach-els\":5}],5:[function(require,module,exports){module.exports=function(els,fn,context){if(els instanceof HTMLCollection||els instanceof NodeList||els instanceof Array){return Array.prototype.forEach.call(els,fn,context)}return fn.call(context,els)}},{}],6:[function(require,module,exports){var forEachEls=require(\"./foreach-els\");module.exports=function(selectors,cb,context,DOMcontext){DOMcontext=DOMcontext||document;selectors.forEach(function(selector){forEachEls(DOMcontext.querySelectorAll(selector),cb,context)})}},{\"./foreach-els\":5}],7:[function(require,module,exports){module.exports=function(){return window.history&&window.history.pushState&&window.history.replaceState&&!navigator.userAgent.match(/((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/)}},{}],8:[function(require,module,exports){var defaultSwitches=require(\"./switches\");module.exports=function(options){options=options||{};options.elements=options.elements||\"a[href], form[action]\";options.selectors=options.selectors||[\"title\",\".js-Pjax\"];options.switches=options.switches||{};options.switchesOptions=options.switchesOptions||{};options.history=typeof options.history===\"undefined\"?true:options.history;options.analytics=typeof options.analytics===\"function\"||options.analytics===false?options.analytics:defaultAnalytics;options.scrollTo=typeof options.scrollTo===\"undefined\"?0:options.scrollTo;options.scrollRestoration=typeof options.scrollRestoration!==\"undefined\"?options.scrollRestoration:true;options.cacheBust=typeof options.cacheBust===\"undefined\"?true:options.cacheBust;options.debug=options.debug||false;options.timeout=options.timeout||0;options.currentUrlFullReload=typeof options.currentUrlFullReload===\"undefined\"?false:options.currentUrlFullReload;if(!options.switches.head){options.switches.head=defaultSwitches.switchElementsAlt}if(!options.switches.body){options.switches.body=defaultSwitches.switchElementsAlt}return options};function defaultAnalytics(){if(window._gaq){_gaq.push([\"_trackPageview\"])}if(window.ga){ga(\"send\",\"pageview\",{page:location.pathname,title:document.title})}}},{\"./switches\":16}],9:[function(require,module,exports){var on=require(\"../events/on\");var clone=require(\"../util/clone\");var attrState=\"data-pjax-state\";var formAction=function(el,event){if(isDefaultPrevented(event)){return}var options=clone(this.options);options.requestOptions={requestUrl:el.getAttribute(\"action\")||window.location.href,requestMethod:el.getAttribute(\"method\")||\"GET\"};var virtLinkElement=document.createElement(\"a\");virtLinkElement.setAttribute(\"href\",options.requestOptions.requestUrl);var attrValue=checkIfShouldAbort(virtLinkElement,options);if(attrValue){el.setAttribute(attrState,attrValue);return}event.preventDefault();if(el.enctype===\"multipart/form-data\"){options.requestOptions.formData=new FormData(el)}else{options.requestOptions.requestParams=parseFormElements(el)}el.setAttribute(attrState,\"submit\");options.triggerElement=el;this.loadUrl(virtLinkElement.href,options)};function parseFormElements(el){var requestParams=[];var formElements=el.elements;for(var i=0;i<formElements.length;i++){var element=formElements[i];var tagName=element.tagName.toLowerCase();if(!!element.name&&element.attributes!==undefined&&tagName!==\"button\"){var type=element.attributes.type;if(!type||type.value!==\"checkbox\"&&type.value!==\"radio\"||element.checked){var values=[];if(tagName===\"select\"){var opt;for(var j=0;j<element.options.length;j++){opt=element.options[j];if(opt.selected&&!opt.disabled){values.push(opt.hasAttribute(\"value\")?opt.value:opt.text)}}}else{values.push(element.value)}for(var k=0;k<values.length;k++){requestParams.push({name:encodeURIComponent(element.name),value:encodeURIComponent(values[k])})}}}}return requestParams}function checkIfShouldAbort(virtLinkElement,options){if(virtLinkElement.protocol!==window.location.protocol||virtLinkElement.host!==window.location.host){return\"external\"}if(virtLinkElement.hash&&virtLinkElement.href.replace(virtLinkElement.hash,\"\")===window.location.href.replace(location.hash,\"\")){return\"anchor\"}if(virtLinkElement.href===window.location.href.split(\"#\")[0]+\"#\"){return\"anchor-empty\"}if(options.currentUrlFullReload&&virtLinkElement.href===window.location.href.split(\"#\")[0]){return\"reload\"}}var isDefaultPrevented=function(event){return event.defaultPrevented||event.returnValue===false};module.exports=function(el){var that=this;el.setAttribute(attrState,\"\");on(el,\"submit\",function(event){formAction.call(that,el,event)})}},{\"../events/on\":3,\"../util/clone\":18}],10:[function(require,module,exports){var on=require(\"../events/on\");var clone=require(\"../util/clone\");var attrState=\"data-pjax-state\";var linkAction=function(el,event){if(isDefaultPrevented(event)){return}var options=clone(this.options);var attrValue=checkIfShouldAbort(el,event);if(attrValue){el.setAttribute(attrState,attrValue);return}event.preventDefault();if(this.options.currentUrlFullReload&&el.href===window.location.href.split(\"#\")[0]){el.setAttribute(attrState,\"reload\");this.reload();return}el.setAttribute(attrState,\"load\");options.triggerElement=el;this.loadUrl(el.href,options)};function checkIfShouldAbort(el,event){if(event.which>1||event.metaKey||event.ctrlKey||event.shiftKey||event.altKey){return\"modifier\"}if(el.protocol!==window.location.protocol||el.host!==window.location.host){return\"external\"}if(el.hash&&el.href.replace(el.hash,\"\")===window.location.href.replace(location.hash,\"\")){return\"anchor\"}if(el.href===window.location.href.split(\"#\")[0]+\"#\"){return\"anchor-empty\"}}var isDefaultPrevented=function(event){return event.defaultPrevented||event.returnValue===false};module.exports=function(el){var that=this;el.setAttribute(attrState,\"\");on(el,\"click\",function(event){linkAction.call(that,el,event)});on(el,\"keyup\",function(event){if(event.keyCode===13){linkAction.call(that,el,event)}}.bind(this))}},{\"../events/on\":3,\"../util/clone\":18}],11:[function(require,module,exports){var clone=require(\"../util/clone\");var newUid=require(\"../uniqueid\");var trigger=require(\"../events/trigger\");module.exports=function(responseText,request,href,options){options=clone(options||this.options);options.request=request;if(responseText===false){trigger(document,\"pjax:complete pjax:error\",options);return}var currentState=window.history.state||{};window.history.replaceState({url:currentState.url||window.location.href,title:currentState.title||document.title,uid:currentState.uid||newUid(),scrollPos:[document.documentElement.scrollLeft||document.body.scrollLeft,document.documentElement.scrollTop||document.body.scrollTop]},document.title,window.location.href);var oldHref=href;if(request.responseURL){if(href!==request.responseURL){href=request.responseURL}}else if(request.getResponseHeader(\"X-PJAX-URL\")){href=request.getResponseHeader(\"X-PJAX-URL\")}else if(request.getResponseHeader(\"X-XHR-Redirected-To\")){href=request.getResponseHeader(\"X-XHR-Redirected-To\")}var a=document.createElement(\"a\");a.href=oldHref;var oldHash=a.hash;a.href=href;if(oldHash&&!a.hash){a.hash=oldHash;href=a.href}this.state.href=href;this.state.options=options;try{this.loadContent(responseText,options)}catch(e){trigger(document,\"pjax:error\",options);if(!this.options.debug){if(console&&console.error){console.error(\"Pjax switch fail: \",e)}return this.latestChance(href)}else{throw e}}}},{\"../events/trigger\":4,\"../uniqueid\":17,\"../util/clone\":18}],12:[function(require,module,exports){module.exports=function(){if(this.options.debug&&console){if(typeof console.log===\"function\"){console.log.apply(console,arguments)}else if(console.log){console.log(arguments)}}}},{}],13:[function(require,module,exports){var attrState=\"data-pjax-state\";module.exports=function(el){switch(el.tagName.toLowerCase()){case\"a\":if(!el.hasAttribute(attrState)){this.attachLink(el)}break;case\"form\":if(!el.hasAttribute(attrState)){this.attachForm(el)}break;default:throw\"Pjax can only be applied on <a> or <form> submit\"}}},{}],14:[function(require,module,exports){var updateQueryString=require(\"./util/update-query-string\");module.exports=function(location,options,callback){options=options||{};var queryString;var requestOptions=options.requestOptions||{};var requestMethod=(requestOptions.requestMethod||\"GET\").toUpperCase();var requestParams=requestOptions.requestParams||null;var formData=requestOptions.formData||null;var requestPayload=null;var request=new XMLHttpRequest;var timeout=options.timeout||0;request.onreadystatechange=function(){if(request.readyState===4){if(request.status===200){callback(request.responseText,request,location,options)}else if(request.status!==0){callback(null,request,location,options)}}};request.onerror=function(e){console.log(e);callback(null,request,location,options)};request.ontimeout=function(){callback(null,request,location,options)};if(requestParams&&requestParams.length){queryString=requestParams.map(function(param){return param.name+\"=\"+param.value}).join(\"&\");switch(requestMethod){case\"GET\":location=location.split(\"?\")[0];location+=\"?\"+queryString;break;case\"POST\":requestPayload=queryString;break}}else if(formData){requestPayload=formData}if(options.cacheBust){location=updateQueryString(location,\"t\",Date.now())}request.open(requestMethod,location,true);request.timeout=timeout;request.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\");request.setRequestHeader(\"X-PJAX\",\"true\");request.setRequestHeader(\"X-PJAX-Selectors\",JSON.stringify(options.selectors));if(requestPayload&&requestMethod===\"POST\"&&!formData){request.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\")}request.send(requestPayload);return request}},{\"./util/update-query-string\":22}],15:[function(require,module,exports){var forEachEls=require(\"./foreach-els\");var defaultSwitches=require(\"./switches\");module.exports=function(switches,switchesOptions,selectors,fromEl,toEl,options){var switchesQueue=[];selectors.forEach(function(selector){var newEls=fromEl.querySelectorAll(selector);var oldEls=toEl.querySelectorAll(selector);if(this.log){this.log(\"Pjax switch\",selector,newEls,oldEls)}if(newEls.length!==oldEls.length){throw\"DOM doesn’t look the same on new loaded page: ’\"+selector+\"’ - new \"+newEls.length+\", old \"+oldEls.length}forEachEls(newEls,function(newEl,i){var oldEl=oldEls[i];if(this.log){this.log(\"newEl\",newEl,\"oldEl\",oldEl)}var callback=switches[selector]?switches[selector].bind(this,oldEl,newEl,options,switchesOptions[selector]):defaultSwitches.outerHTML.bind(this,oldEl,newEl,options);switchesQueue.push(callback)},this)},this);this.state.numPendingSwitches=switchesQueue.length;switchesQueue.forEach(function(queuedSwitch){queuedSwitch()})}},{\"./foreach-els\":5,\"./switches\":16}],16:[function(require,module,exports){var on=require(\"./events/on\");module.exports={outerHTML:function(oldEl,newEl){oldEl.outerHTML=newEl.outerHTML;this.onSwitch()},innerHTML:function(oldEl,newEl){oldEl.innerHTML=newEl.innerHTML;if(newEl.className===\"\"){oldEl.removeAttribute(\"class\")}else{}this.onSwitch()},switchElementsAlt:function(oldEl,newEl){oldEl.innerHTML=newEl.innerHTML;if(newEl.hasAttributes()){var attrs=newEl.attributes;for(var i=0;i<attrs.length;i++){oldEl.attributes.setNamedItem(attrs[i].cloneNode())}}this.onSwitch()},replaceNode:function(oldEl,newEl){oldEl.parentNode.replaceChild(newEl,oldEl);this.onSwitch()},sideBySide:function(oldEl,newEl,options,switchOptions){var forEach=Array.prototype.forEach;var elsToRemove=[];var elsToAdd=[];var fragToAppend=document.createDocumentFragment();var animationEventNames=\"animationend webkitAnimationEnd MSAnimationEnd oanimationend\";var animatedElsNumber=0;var sexyAnimationEnd=function(e){if(e.target!==e.currentTarget){return}animatedElsNumber--;if(animatedElsNumber<=0&&elsToRemove){elsToRemove.forEach(function(el){if(el.parentNode){el.parentNode.removeChild(el)}});elsToAdd.forEach(function(el){el.className=el.className.replace(el.getAttribute(\"data-pjax-classes\"),\"\");el.removeAttribute(\"data-pjax-classes\")});elsToAdd=null;elsToRemove=null;this.onSwitch()}}.bind(this);switchOptions=switchOptions||{};forEach.call(oldEl.childNodes,function(el){elsToRemove.push(el);if(el.classList&&!el.classList.contains(\"js-Pjax-remove\")){if(el.hasAttribute(\"data-pjax-classes\")){el.className=el.className.replace(el.getAttribute(\"data-pjax-classes\"),\"\");el.removeAttribute(\"data-pjax-classes\")}el.classList.add(\"js-Pjax-remove\");if(switchOptions.callbacks&&switchOptions.callbacks.removeElement){switchOptions.callbacks.removeElement(el)}if(switchOptions.classNames){el.className+=\" \"+switchOptions.classNames.remove+\" \"+(options.backward?switchOptions.classNames.backward:switchOptions.classNames.forward)}animatedElsNumber++;on(el,animationEventNames,sexyAnimationEnd,true)}});forEach.call(newEl.childNodes,function(el){if(el.classList){var addClasses=\"\";if(switchOptions.classNames){addClasses=\" js-Pjax-add \"+switchOptions.classNames.add+\" \"+(options.backward?switchOptions.classNames.forward:switchOptions.classNames.backward)}if(switchOptions.callbacks&&switchOptions.callbacks.addElement){switchOptions.callbacks.addElement(el)}el.className+=addClasses;el.setAttribute(\"data-pjax-classes\",addClasses);elsToAdd.push(el);fragToAppend.appendChild(el);animatedElsNumber++;on(el,animationEventNames,sexyAnimationEnd,true)}});oldEl.className=newEl.className;oldEl.appendChild(fragToAppend)}}},{\"./events/on\":3}],17:[function(require,module,exports){module.exports=function(){var counter=0;return function(){var id=\"pjax\"+(new Date).getTime()+\"_\"+counter;counter++;return id}}()},{}],18:[function(require,module,exports){module.exports=function(obj){if(null===obj||\"object\"!==typeof obj){return obj}var copy=obj.constructor();for(var attr in obj){if(obj.hasOwnProperty(attr)){copy[attr]=obj[attr]}}return copy}},{}],19:[function(require,module,exports){module.exports=function contains(doc,selectors,el){for(var i=0;i<selectors.length;i++){var selectedEls=doc.querySelectorAll(selectors[i]);for(var j=0;j<selectedEls.length;j++){if(selectedEls[j].contains(el)){return true}}}return false}},{}],20:[function(require,module,exports){module.exports=function(target){if(target==null){return null}var to=Object(target);for(var i=1;i<arguments.length;i++){var source=arguments[i];if(source!=null){for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){to[key]=source[key]}}}}return to}},{}],21:[function(require,module,exports){module.exports=function(){}},{}],22:[function(require,module,exports){module.exports=function(uri,key,value){var re=new RegExp(\"([?&])\"+key+\"=.*?(&|$)\",\"i\");var separator=uri.indexOf(\"?\")!==-1?\"&\":\"?\";if(uri.match(re)){return uri.replace(re,\"$1\"+key+\"=\"+value+\"$2\")}else{return uri+separator+key+\"=\"+value}}},{}]},{},[1])(1)});","site":{"data":{}},"length":1960,"excerpt":"","more":"(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pjax=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){var forEachEls=require(\"./lib/foreach-els\");var parseOptions=require(\"./lib/parse-options\");var switches=require(\"./lib/switches\");var newUid=require(\"./lib/uniqueid\");var on=require(\"./lib/events/on\");var trigger=require(\"./lib/events/trigger\");var clone=require(\"./lib/util/clone\");var contains=require(\"./lib/util/contains\");var extend=require(\"./lib/util/extend\");var noop=require(\"./lib/util/noop\");var Pjax=function(options){this.state={numPendingSwitches:0,href:null,options:null};this.options=parseOptions(options);this.log(\"Pjax options\",this.options);if(this.options.scrollRestoration&&\"scrollRestoration\"in history){history.scrollRestoration=\"manual\"}this.maxUid=this.lastUid=newUid();this.parseDOM(document);on(window,\"popstate\",function(st){if(st.state){var opt=clone(this.options);opt.url=st.state.url;opt.title=st.state.title;opt.history=false;opt.scrollPos=st.state.scrollPos;if(st.state.uid<this.lastUid){opt.backward=true}else{opt.forward=true}this.lastUid=st.state.uid;this.loadUrl(st.state.url,opt)}}.bind(this))};Pjax.switches=switches;Pjax.prototype={log:require(\"./lib/proto/log\"),getElements:function(el){return el.querySelectorAll(this.options.elements)},parseDOM:function(el){var parseElement=require(\"./lib/proto/parse-element\");forEachEls(this.getElements(el),parseElement,this)},refresh:function(el){this.parseDOM(el||document)},reload:function(){window.location.reload()},attachLink:require(\"./lib/proto/attach-link\"),attachForm:require(\"./lib/proto/attach-form\"),forEachSelectors:function(cb,context,DOMcontext){return require(\"./lib/foreach-selectors\").bind(this)(this.options.selectors,cb,context,DOMcontext)},switchSelectors:function(selectors,fromEl,toEl,options){return require(\"./lib/switches-selectors\").bind(this)(this.options.switches,this.options.switchesOptions,selectors,fromEl,toEl,options)},latestChance:function(href){window.location=href},onSwitch:function(){trigger(window,\"resize scroll\");this.state.numPendingSwitches--;if(this.state.numPendingSwitches===0){this.afterAllSwitches()}},loadContent:function(html,options){if(typeof html!==\"string\"){trigger(document,\"pjax:complete pjax:error\",options);return}var tmpEl=document.implementation.createHTMLDocument(\"pjax\");var htmlRegex=/<html[^>]+>/gi;var htmlAttribsRegex=/\\s?[a-z:]+(?:=['\"][^'\">]+['\"])*/gi;var matches=html.match(htmlRegex);if(matches&&matches.length){matches=matches[0].match(htmlAttribsRegex);if(matches.length){matches.shift();matches.forEach(function(htmlAttrib){var attr=htmlAttrib.trim().split(\"=\");if(attr.length===1){tmpEl.documentElement.setAttribute(attr[0],true)}else{tmpEl.documentElement.setAttribute(attr[0],attr[1].slice(1,-1))}})}}tmpEl.documentElement.innerHTML=html;this.log(\"load content\",tmpEl.documentElement.attributes,tmpEl.documentElement.innerHTML.length);if(document.activeElement&&contains(document,this.options.selectors,document.activeElement)){try{document.activeElement.blur()}catch(e){}}this.switchSelectors(this.options.selectors,tmpEl,document,options)},abortRequest:require(\"./lib/abort-request\"),doRequest:require(\"./lib/send-request\"),handleResponse:require(\"./lib/proto/handle-response\"),loadUrl:function(href,options){options=typeof options===\"object\"?extend({},this.options,options):clone(this.options);this.log(\"load href\",href,options);this.abortRequest(this.request);trigger(document,\"pjax:send\",options);this.request=this.doRequest(href,options,this.handleResponse.bind(this))},afterAllSwitches:function(){var autofocusEl=Array.prototype.slice.call(document.querySelectorAll(\"[autofocus]\")).pop();if(autofocusEl&&document.activeElement!==autofocusEl){autofocusEl.focus()}this.options.selectors.forEach(function(selector){forEachEls(document.querySelectorAll(selector),function(el){if(el===0);})});var state=this.state;if(state.options.history){if(!window.history.state){this.lastUid=this.maxUid=newUid();window.history.replaceState({url:window.location.href,title:document.title,uid:this.maxUid,scrollPos:[0,0]},document.title)}this.lastUid=this.maxUid=newUid();window.history.pushState({url:state.href,title:state.options.title,uid:this.maxUid,scrollPos:[0,0]},state.options.title,state.href)}this.forEachSelectors(function(el){this.parseDOM(el)},this);trigger(document,\"pjax:complete pjax:success\",state.options);if(typeof state.options.analytics===\"function\"){state.options.analytics()}if(state.options.history){var a=document.createElement(\"a\");a.href=this.state.href;if(a.hash){var name=a.hash.slice(1);name=decodeURIComponent(name);var curtop=0;var target=document.getElementById(name)||document.getElementsByName(name)[0];if(target){if(target.offsetParent){do{curtop+=target.offsetTop;target=target.offsetParent}while(target)}}window.scrollTo(0,curtop)}else if(state.options.scrollTo!==false){if(state.options.scrollTo.length>1){window.scrollTo(state.options.scrollTo[0],state.options.scrollTo[1])}else{window.scrollTo(0,state.options.scrollTo)}}}else if(state.options.scrollRestoration&&state.options.scrollPos){window.scrollTo(state.options.scrollPos[0],state.options.scrollPos[1])}this.state={numPendingSwitches:0,href:null,options:null}}};Pjax.isSupported=require(\"./lib/is-supported\");if(Pjax.isSupported()){module.exports=Pjax}else{var stupidPjax=noop;for(var key in Pjax.prototype){if(Pjax.prototype.hasOwnProperty(key)&&typeof Pjax.prototype[key]===\"function\"){stupidPjax[key]=noop}}module.exports=stupidPjax}},{\"./lib/abort-request\":2,\"./lib/events/on\":3,\"./lib/events/trigger\":4,\"./lib/foreach-els\":5,\"./lib/foreach-selectors\":6,\"./lib/is-supported\":7,\"./lib/parse-options\":8,\"./lib/proto/attach-form\":9,\"./lib/proto/attach-link\":10,\"./lib/proto/handle-response\":11,\"./lib/proto/log\":12,\"./lib/proto/parse-element\":13,\"./lib/send-request\":14,\"./lib/switches\":16,\"./lib/switches-selectors\":15,\"./lib/uniqueid\":17,\"./lib/util/clone\":18,\"./lib/util/contains\":19,\"./lib/util/extend\":20,\"./lib/util/noop\":21}],2:[function(require,module,exports){var noop=require(\"./util/noop\");module.exports=function(request){if(request&&request.readyState<4){request.onreadystatechange=noop;request.abort()}}},{\"./util/noop\":21}],3:[function(require,module,exports){var forEachEls=require(\"../foreach-els\");module.exports=function(els,events,listener,useCapture){events=typeof events===\"string\"?events.split(\" \"):events;events.forEach(function(e){forEachEls(els,function(el){el.addEventListener(e,listener,useCapture)})})}},{\"../foreach-els\":5}],4:[function(require,module,exports){var forEachEls=require(\"../foreach-els\");module.exports=function(els,events,opts){events=typeof events===\"string\"?events.split(\" \"):events;events.forEach(function(e){var event;event=document.createEvent(\"HTMLEvents\");event.initEvent(e,true,true);event.eventName=e;if(opts){Object.keys(opts).forEach(function(key){event[key]=opts[key]})}forEachEls(els,function(el){var domFix=false;if(!el.parentNode&&el!==document&&el!==window){domFix=true;document.body.appendChild(el)}el.dispatchEvent(event);if(domFix){el.parentNode.removeChild(el)}})})}},{\"../foreach-els\":5}],5:[function(require,module,exports){module.exports=function(els,fn,context){if(els instanceof HTMLCollection||els instanceof NodeList||els instanceof Array){return Array.prototype.forEach.call(els,fn,context)}return fn.call(context,els)}},{}],6:[function(require,module,exports){var forEachEls=require(\"./foreach-els\");module.exports=function(selectors,cb,context,DOMcontext){DOMcontext=DOMcontext||document;selectors.forEach(function(selector){forEachEls(DOMcontext.querySelectorAll(selector),cb,context)})}},{\"./foreach-els\":5}],7:[function(require,module,exports){module.exports=function(){return window.history&&window.history.pushState&&window.history.replaceState&&!navigator.userAgent.match(/((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/)}},{}],8:[function(require,module,exports){var defaultSwitches=require(\"./switches\");module.exports=function(options){options=options||{};options.elements=options.elements||\"a[href], form[action]\";options.selectors=options.selectors||[\"title\",\".js-Pjax\"];options.switches=options.switches||{};options.switchesOptions=options.switchesOptions||{};options.history=typeof options.history===\"undefined\"?true:options.history;options.analytics=typeof options.analytics===\"function\"||options.analytics===false?options.analytics:defaultAnalytics;options.scrollTo=typeof options.scrollTo===\"undefined\"?0:options.scrollTo;options.scrollRestoration=typeof options.scrollRestoration!==\"undefined\"?options.scrollRestoration:true;options.cacheBust=typeof options.cacheBust===\"undefined\"?true:options.cacheBust;options.debug=options.debug||false;options.timeout=options.timeout||0;options.currentUrlFullReload=typeof options.currentUrlFullReload===\"undefined\"?false:options.currentUrlFullReload;if(!options.switches.head){options.switches.head=defaultSwitches.switchElementsAlt}if(!options.switches.body){options.switches.body=defaultSwitches.switchElementsAlt}return options};function defaultAnalytics(){if(window._gaq){_gaq.push([\"_trackPageview\"])}if(window.ga){ga(\"send\",\"pageview\",{page:location.pathname,title:document.title})}}},{\"./switches\":16}],9:[function(require,module,exports){var on=require(\"../events/on\");var clone=require(\"../util/clone\");var attrState=\"data-pjax-state\";var formAction=function(el,event){if(isDefaultPrevented(event)){return}var options=clone(this.options);options.requestOptions={requestUrl:el.getAttribute(\"action\")||window.location.href,requestMethod:el.getAttribute(\"method\")||\"GET\"};var virtLinkElement=document.createElement(\"a\");virtLinkElement.setAttribute(\"href\",options.requestOptions.requestUrl);var attrValue=checkIfShouldAbort(virtLinkElement,options);if(attrValue){el.setAttribute(attrState,attrValue);return}event.preventDefault();if(el.enctype===\"multipart/form-data\"){options.requestOptions.formData=new FormData(el)}else{options.requestOptions.requestParams=parseFormElements(el)}el.setAttribute(attrState,\"submit\");options.triggerElement=el;this.loadUrl(virtLinkElement.href,options)};function parseFormElements(el){var requestParams=[];var formElements=el.elements;for(var i=0;i<formElements.length;i++){var element=formElements[i];var tagName=element.tagName.toLowerCase();if(!!element.name&&element.attributes!==undefined&&tagName!==\"button\"){var type=element.attributes.type;if(!type||type.value!==\"checkbox\"&&type.value!==\"radio\"||element.checked){var values=[];if(tagName===\"select\"){var opt;for(var j=0;j<element.options.length;j++){opt=element.options[j];if(opt.selected&&!opt.disabled){values.push(opt.hasAttribute(\"value\")?opt.value:opt.text)}}}else{values.push(element.value)}for(var k=0;k<values.length;k++){requestParams.push({name:encodeURIComponent(element.name),value:encodeURIComponent(values[k])})}}}}return requestParams}function checkIfShouldAbort(virtLinkElement,options){if(virtLinkElement.protocol!==window.location.protocol||virtLinkElement.host!==window.location.host){return\"external\"}if(virtLinkElement.hash&&virtLinkElement.href.replace(virtLinkElement.hash,\"\")===window.location.href.replace(location.hash,\"\")){return\"anchor\"}if(virtLinkElement.href===window.location.href.split(\"#\")[0]+\"#\"){return\"anchor-empty\"}if(options.currentUrlFullReload&&virtLinkElement.href===window.location.href.split(\"#\")[0]){return\"reload\"}}var isDefaultPrevented=function(event){return event.defaultPrevented||event.returnValue===false};module.exports=function(el){var that=this;el.setAttribute(attrState,\"\");on(el,\"submit\",function(event){formAction.call(that,el,event)})}},{\"../events/on\":3,\"../util/clone\":18}],10:[function(require,module,exports){var on=require(\"../events/on\");var clone=require(\"../util/clone\");var attrState=\"data-pjax-state\";var linkAction=function(el,event){if(isDefaultPrevented(event)){return}var options=clone(this.options);var attrValue=checkIfShouldAbort(el,event);if(attrValue){el.setAttribute(attrState,attrValue);return}event.preventDefault();if(this.options.currentUrlFullReload&&el.href===window.location.href.split(\"#\")[0]){el.setAttribute(attrState,\"reload\");this.reload();return}el.setAttribute(attrState,\"load\");options.triggerElement=el;this.loadUrl(el.href,options)};function checkIfShouldAbort(el,event){if(event.which>1||event.metaKey||event.ctrlKey||event.shiftKey||event.altKey){return\"modifier\"}if(el.protocol!==window.location.protocol||el.host!==window.location.host){return\"external\"}if(el.hash&&el.href.replace(el.hash,\"\")===window.location.href.replace(location.hash,\"\")){return\"anchor\"}if(el.href===window.location.href.split(\"#\")[0]+\"#\"){return\"anchor-empty\"}}var isDefaultPrevented=function(event){return event.defaultPrevented||event.returnValue===false};module.exports=function(el){var that=this;el.setAttribute(attrState,\"\");on(el,\"click\",function(event){linkAction.call(that,el,event)});on(el,\"keyup\",function(event){if(event.keyCode===13){linkAction.call(that,el,event)}}.bind(this))}},{\"../events/on\":3,\"../util/clone\":18}],11:[function(require,module,exports){var clone=require(\"../util/clone\");var newUid=require(\"../uniqueid\");var trigger=require(\"../events/trigger\");module.exports=function(responseText,request,href,options){options=clone(options||this.options);options.request=request;if(responseText===false){trigger(document,\"pjax:complete pjax:error\",options);return}var currentState=window.history.state||{};window.history.replaceState({url:currentState.url||window.location.href,title:currentState.title||document.title,uid:currentState.uid||newUid(),scrollPos:[document.documentElement.scrollLeft||document.body.scrollLeft,document.documentElement.scrollTop||document.body.scrollTop]},document.title,window.location.href);var oldHref=href;if(request.responseURL){if(href!==request.responseURL){href=request.responseURL}}else if(request.getResponseHeader(\"X-PJAX-URL\")){href=request.getResponseHeader(\"X-PJAX-URL\")}else if(request.getResponseHeader(\"X-XHR-Redirected-To\")){href=request.getResponseHeader(\"X-XHR-Redirected-To\")}var a=document.createElement(\"a\");a.href=oldHref;var oldHash=a.hash;a.href=href;if(oldHash&&!a.hash){a.hash=oldHash;href=a.href}this.state.href=href;this.state.options=options;try{this.loadContent(responseText,options)}catch(e){trigger(document,\"pjax:error\",options);if(!this.options.debug){if(console&&console.error){console.error(\"Pjax switch fail: \",e)}return this.latestChance(href)}else{throw e}}}},{\"../events/trigger\":4,\"../uniqueid\":17,\"../util/clone\":18}],12:[function(require,module,exports){module.exports=function(){if(this.options.debug&&console){if(typeof console.log===\"function\"){console.log.apply(console,arguments)}else if(console.log){console.log(arguments)}}}},{}],13:[function(require,module,exports){var attrState=\"data-pjax-state\";module.exports=function(el){switch(el.tagName.toLowerCase()){case\"a\":if(!el.hasAttribute(attrState)){this.attachLink(el)}break;case\"form\":if(!el.hasAttribute(attrState)){this.attachForm(el)}break;default:throw\"Pjax can only be applied on <a> or <form> submit\"}}},{}],14:[function(require,module,exports){var updateQueryString=require(\"./util/update-query-string\");module.exports=function(location,options,callback){options=options||{};var queryString;var requestOptions=options.requestOptions||{};var requestMethod=(requestOptions.requestMethod||\"GET\").toUpperCase();var requestParams=requestOptions.requestParams||null;var formData=requestOptions.formData||null;var requestPayload=null;var request=new XMLHttpRequest;var timeout=options.timeout||0;request.onreadystatechange=function(){if(request.readyState===4){if(request.status===200){callback(request.responseText,request,location,options)}else if(request.status!==0){callback(null,request,location,options)}}};request.onerror=function(e){console.log(e);callback(null,request,location,options)};request.ontimeout=function(){callback(null,request,location,options)};if(requestParams&&requestParams.length){queryString=requestParams.map(function(param){return param.name+\"=\"+param.value}).join(\"&\");switch(requestMethod){case\"GET\":location=location.split(\"?\")[0];location+=\"?\"+queryString;break;case\"POST\":requestPayload=queryString;break}}else if(formData){requestPayload=formData}if(options.cacheBust){location=updateQueryString(location,\"t\",Date.now())}request.open(requestMethod,location,true);request.timeout=timeout;request.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\");request.setRequestHeader(\"X-PJAX\",\"true\");request.setRequestHeader(\"X-PJAX-Selectors\",JSON.stringify(options.selectors));if(requestPayload&&requestMethod===\"POST\"&&!formData){request.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\")}request.send(requestPayload);return request}},{\"./util/update-query-string\":22}],15:[function(require,module,exports){var forEachEls=require(\"./foreach-els\");var defaultSwitches=require(\"./switches\");module.exports=function(switches,switchesOptions,selectors,fromEl,toEl,options){var switchesQueue=[];selectors.forEach(function(selector){var newEls=fromEl.querySelectorAll(selector);var oldEls=toEl.querySelectorAll(selector);if(this.log){this.log(\"Pjax switch\",selector,newEls,oldEls)}if(newEls.length!==oldEls.length){throw\"DOM doesn’t look the same on new loaded page: ’\"+selector+\"’ - new \"+newEls.length+\", old \"+oldEls.length}forEachEls(newEls,function(newEl,i){var oldEl=oldEls[i];if(this.log){this.log(\"newEl\",newEl,\"oldEl\",oldEl)}var callback=switches[selector]?switches[selector].bind(this,oldEl,newEl,options,switchesOptions[selector]):defaultSwitches.outerHTML.bind(this,oldEl,newEl,options);switchesQueue.push(callback)},this)},this);this.state.numPendingSwitches=switchesQueue.length;switchesQueue.forEach(function(queuedSwitch){queuedSwitch()})}},{\"./foreach-els\":5,\"./switches\":16}],16:[function(require,module,exports){var on=require(\"./events/on\");module.exports={outerHTML:function(oldEl,newEl){oldEl.outerHTML=newEl.outerHTML;this.onSwitch()},innerHTML:function(oldEl,newEl){oldEl.innerHTML=newEl.innerHTML;if(newEl.className===\"\"){oldEl.removeAttribute(\"class\")}else{}this.onSwitch()},switchElementsAlt:function(oldEl,newEl){oldEl.innerHTML=newEl.innerHTML;if(newEl.hasAttributes()){var attrs=newEl.attributes;for(var i=0;i<attrs.length;i++){oldEl.attributes.setNamedItem(attrs[i].cloneNode())}}this.onSwitch()},replaceNode:function(oldEl,newEl){oldEl.parentNode.replaceChild(newEl,oldEl);this.onSwitch()},sideBySide:function(oldEl,newEl,options,switchOptions){var forEach=Array.prototype.forEach;var elsToRemove=[];var elsToAdd=[];var fragToAppend=document.createDocumentFragment();var animationEventNames=\"animationend webkitAnimationEnd MSAnimationEnd oanimationend\";var animatedElsNumber=0;var sexyAnimationEnd=function(e){if(e.target!==e.currentTarget){return}animatedElsNumber--;if(animatedElsNumber<=0&&elsToRemove){elsToRemove.forEach(function(el){if(el.parentNode){el.parentNode.removeChild(el)}});elsToAdd.forEach(function(el){el.className=el.className.replace(el.getAttribute(\"data-pjax-classes\"),\"\");el.removeAttribute(\"data-pjax-classes\")});elsToAdd=null;elsToRemove=null;this.onSwitch()}}.bind(this);switchOptions=switchOptions||{};forEach.call(oldEl.childNodes,function(el){elsToRemove.push(el);if(el.classList&&!el.classList.contains(\"js-Pjax-remove\")){if(el.hasAttribute(\"data-pjax-classes\")){el.className=el.className.replace(el.getAttribute(\"data-pjax-classes\"),\"\");el.removeAttribute(\"data-pjax-classes\")}el.classList.add(\"js-Pjax-remove\");if(switchOptions.callbacks&&switchOptions.callbacks.removeElement){switchOptions.callbacks.removeElement(el)}if(switchOptions.classNames){el.className+=\" \"+switchOptions.classNames.remove+\" \"+(options.backward?switchOptions.classNames.backward:switchOptions.classNames.forward)}animatedElsNumber++;on(el,animationEventNames,sexyAnimationEnd,true)}});forEach.call(newEl.childNodes,function(el){if(el.classList){var addClasses=\"\";if(switchOptions.classNames){addClasses=\" js-Pjax-add \"+switchOptions.classNames.add+\" \"+(options.backward?switchOptions.classNames.forward:switchOptions.classNames.backward)}if(switchOptions.callbacks&&switchOptions.callbacks.addElement){switchOptions.callbacks.addElement(el)}el.className+=addClasses;el.setAttribute(\"data-pjax-classes\",addClasses);elsToAdd.push(el);fragToAppend.appendChild(el);animatedElsNumber++;on(el,animationEventNames,sexyAnimationEnd,true)}});oldEl.className=newEl.className;oldEl.appendChild(fragToAppend)}}},{\"./events/on\":3}],17:[function(require,module,exports){module.exports=function(){var counter=0;return function(){var id=\"pjax\"+(new Date).getTime()+\"_\"+counter;counter++;return id}}()},{}],18:[function(require,module,exports){module.exports=function(obj){if(null===obj||\"object\"!==typeof obj){return obj}var copy=obj.constructor();for(var attr in obj){if(obj.hasOwnProperty(attr)){copy[attr]=obj[attr]}}return copy}},{}],19:[function(require,module,exports){module.exports=function contains(doc,selectors,el){for(var i=0;i<selectors.length;i++){var selectedEls=doc.querySelectorAll(selectors[i]);for(var j=0;j<selectedEls.length;j++){if(selectedEls[j].contains(el)){return true}}}return false}},{}],20:[function(require,module,exports){module.exports=function(target){if(target==null){return null}var to=Object(target);for(var i=1;i<arguments.length;i++){var source=arguments[i];if(source!=null){for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){to[key]=source[key]}}}}return to}},{}],21:[function(require,module,exports){module.exports=function(){}},{}],22:[function(require,module,exports){module.exports=function(uri,key,value){var re=new RegExp(\"([?&])\"+key+\"=.*?(&|$)\",\"i\");var separator=uri.indexOf(\"?\")!==-1?\"&\":\"?\";if(uri.match(re)){return uri.replace(re,\"$1\"+key+\"=\"+value+\"$2\")}else{return uri+separator+key+\"=\"+value}}},{}]},{},[1])(1)});"},{"_content":"(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pjax = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n// var executeScripts = require(\"./lib/execute-scripts\");  // unused-var\nvar forEachEls = require(\"./lib/foreach-els\");\nvar parseOptions = require(\"./lib/parse-options\");\nvar switches = require(\"./lib/switches\");\nvar newUid = require(\"./lib/uniqueid\");\n\nvar on = require(\"./lib/events/on\");\nvar trigger = require(\"./lib/events/trigger\");\n\nvar clone = require(\"./lib/util/clone\");\nvar contains = require(\"./lib/util/contains\");\nvar extend = require(\"./lib/util/extend\");\nvar noop = require(\"./lib/util/noop\");\n\nvar Pjax = function(options) {\n  this.state = {\n    numPendingSwitches: 0,\n    href: null,\n    options: null\n  };\n\n  this.options = parseOptions(options);\n  this.log(\"Pjax options\", this.options);\n\n  if (this.options.scrollRestoration && \"scrollRestoration\" in history) {\n    history.scrollRestoration = \"manual\";\n  }\n\n  this.maxUid = this.lastUid = newUid();\n\n  this.parseDOM(document);\n\n  on(\n    window,\n    \"popstate\",\n    function(st) {\n      if (st.state) {\n        var opt = clone(this.options);\n        opt.url = st.state.url;\n        opt.title = st.state.title;\n        // Since state already exists, prevent it from being pushed again\n        opt.history = false;\n        opt.scrollPos = st.state.scrollPos;\n        if (st.state.uid < this.lastUid) {\n          opt.backward = true;\n        } else {\n          opt.forward = true;\n        }\n        this.lastUid = st.state.uid;\n\n        // @todo implement history cache here, based on uid\n        this.loadUrl(st.state.url, opt);\n      }\n    }.bind(this)\n  );\n};\n\nPjax.switches = switches;\n\nPjax.prototype = {\n  log: require(\"./lib/proto/log\"),\n\n  getElements: function(el) {\n    return el.querySelectorAll(this.options.elements);\n  },\n\n  parseDOM: function(el) {\n    var parseElement = require(\"./lib/proto/parse-element\");\n    forEachEls(this.getElements(el), parseElement, this);\n  },\n\n  refresh: function(el) {\n    this.parseDOM(el || document);\n  },\n\n  reload: function() {\n    window.location.reload();\n  },\n\n  attachLink: require(\"./lib/proto/attach-link\"),\n\n  attachForm: require(\"./lib/proto/attach-form\"),\n\n  forEachSelectors: function(cb, context, DOMcontext) {\n    return require(\"./lib/foreach-selectors\").bind(this)(\n      this.options.selectors,\n      cb,\n      context,\n      DOMcontext\n    );\n  },\n\n  switchSelectors: function(selectors, fromEl, toEl, options) {\n    return require(\"./lib/switches-selectors\").bind(this)(\n      this.options.switches,\n      this.options.switchesOptions,\n      selectors,\n      fromEl,\n      toEl,\n      options\n    );\n  },\n\n  latestChance: function(href) {\n    window.location = href;\n  },\n\n  onSwitch: function() {\n    trigger(window, \"resize scroll\");\n\n    this.state.numPendingSwitches--;\n\n    // debounce calls, so we only run this once after all switches are finished.\n    if (this.state.numPendingSwitches === 0) {\n      this.afterAllSwitches();\n    }\n  },\n\n  loadContent: function(html, options) {\n    if (typeof html !== \"string\") {\n      trigger(document, \"pjax:complete pjax:error\", options);\n\n      return;\n    }\n\n    var tmpEl = document.implementation.createHTMLDocument(\"pjax\");\n\n    // parse HTML attributes to copy them\n    // since we are forced to use documentElement.innerHTML (outerHTML can't be used for <html>)\n    var htmlRegex = /<html[^>]+>/gi;\n    var htmlAttribsRegex = /\\s?[a-z:]+(?:=['\"][^'\">]+['\"])*/gi;\n    var matches = html.match(htmlRegex);\n    if (matches && matches.length) {\n      matches = matches[0].match(htmlAttribsRegex);\n      if (matches.length) {\n        matches.shift();\n        matches.forEach(function(htmlAttrib) {\n          var attr = htmlAttrib.trim().split(\"=\");\n          if (attr.length === 1) {\n            tmpEl.documentElement.setAttribute(attr[0], true);\n          } else {\n            tmpEl.documentElement.setAttribute(attr[0], attr[1].slice(1, -1));\n          }\n        });\n      }\n    }\n\n    tmpEl.documentElement.innerHTML = html;\n    this.log(\n      \"load content\",\n      tmpEl.documentElement.attributes,\n      tmpEl.documentElement.innerHTML.length\n    );\n\n    // Clear out any focused controls before inserting new page contents.\n    if (\n      document.activeElement &&\n      contains(document, this.options.selectors, document.activeElement)\n    ) {\n      try {\n        document.activeElement.blur();\n      } catch (e) {} // eslint-disable-line no-empty\n    }\n\n    this.switchSelectors(this.options.selectors, tmpEl, document, options);\n  },\n\n  abortRequest: require(\"./lib/abort-request\"),\n\n  doRequest: require(\"./lib/send-request\"),\n\n  handleResponse: require(\"./lib/proto/handle-response\"),\n\n  loadUrl: function(href, options) {\n    options =\n      typeof options === \"object\"\n        ? extend({}, this.options, options)\n        : clone(this.options);\n\n    this.log(\"load href\", href, options);\n\n    // Abort any previous request\n    this.abortRequest(this.request);\n\n    trigger(document, \"pjax:send\", options);\n\n    // Do the request\n    this.request = this.doRequest(\n      href,\n      options,\n      this.handleResponse.bind(this)\n    );\n  },\n\n  afterAllSwitches: function() {\n    // FF bug: Won’t autofocus fields that are inserted via JS.\n    // This behavior is incorrect. So if theres no current focus, autofocus\n    // the last field.\n    //\n    // http://www.w3.org/html/wg/drafts/html/master/forms.html\n    var autofocusEl = Array.prototype.slice\n      .call(document.querySelectorAll(\"[autofocus]\"))\n      .pop();\n    if (autofocusEl && document.activeElement !== autofocusEl) {\n      autofocusEl.focus();\n    }\n\n    // execute scripts when DOM have been completely updated\n    this.options.selectors.forEach(function(selector) {\n      forEachEls(document.querySelectorAll(selector), function(el) {\n        // executeScripts(el);\n        if (el === 0) ;  // intentially left blank!\n      });\n    });\n\n    var state = this.state;\n\n    if (state.options.history) {\n      if (!window.history.state) {\n        this.lastUid = this.maxUid = newUid();\n        window.history.replaceState(\n          {\n            url: window.location.href,\n            title: document.title,\n            uid: this.maxUid,\n            scrollPos: [0, 0]\n          },\n          document.title\n        );\n      }\n\n      // Update browser history\n      this.lastUid = this.maxUid = newUid();\n\n      window.history.pushState(\n        {\n          url: state.href,\n          title: state.options.title,\n          uid: this.maxUid,\n          scrollPos: [0, 0]\n        },\n        state.options.title,\n        state.href\n      );\n    }\n\n    this.forEachSelectors(function(el) {\n      this.parseDOM(el);\n    }, this);\n\n    // Fire Events\n    trigger(document, \"pjax:complete pjax:success\", state.options);\n\n    if (typeof state.options.analytics === \"function\") {\n      state.options.analytics();\n    }\n\n    if (state.options.history) {\n      // First parse url and check for hash to override scroll\n      var a = document.createElement(\"a\");\n      a.href = this.state.href;\n      if (a.hash) {\n        var name = a.hash.slice(1);\n        name = decodeURIComponent(name);\n\n        var curtop = 0;\n        var target =\n          document.getElementById(name) || document.getElementsByName(name)[0];\n        if (target) {\n          // http://stackoverflow.com/questions/8111094/cross-browser-javascript-function-to-find-actual-position-of-an-element-in-page\n          if (target.offsetParent) {\n            do {\n              curtop += target.offsetTop;\n\n              target = target.offsetParent;\n            } while (target);\n          }\n        }\n        window.scrollTo(0, curtop);\n      } else if (state.options.scrollTo !== false) {\n        // Scroll page to top on new page load\n        if (state.options.scrollTo.length > 1) {\n          window.scrollTo(state.options.scrollTo[0], state.options.scrollTo[1]);\n        } else {\n          window.scrollTo(0, state.options.scrollTo);\n        }\n      }\n    } else if (state.options.scrollRestoration && state.options.scrollPos) {\n      window.scrollTo(state.options.scrollPos[0], state.options.scrollPos[1]);\n    }\n\n    this.state = {\n      numPendingSwitches: 0,\n      href: null,\n      options: null\n    };\n  }\n};\n\nPjax.isSupported = require(\"./lib/is-supported\");\n\n// arguably could do `if( require(\"./lib/is-supported\")()) {` but that might be a little to simple\nif (Pjax.isSupported()) {\n  module.exports = Pjax;\n}\n// if there isn’t required browser functions, returning stupid api\nelse {\n  var stupidPjax = noop;\n  for (var key in Pjax.prototype) {\n    if (\n      Pjax.prototype.hasOwnProperty(key) &&\n      typeof Pjax.prototype[key] === \"function\"\n    ) {\n      stupidPjax[key] = noop;\n    }\n  }\n\n  module.exports = stupidPjax;\n}\n\n},{\"./lib/abort-request\":2,\"./lib/events/on\":3,\"./lib/events/trigger\":4,\"./lib/foreach-els\":5,\"./lib/foreach-selectors\":6,\"./lib/is-supported\":7,\"./lib/parse-options\":8,\"./lib/proto/attach-form\":9,\"./lib/proto/attach-link\":10,\"./lib/proto/handle-response\":11,\"./lib/proto/log\":12,\"./lib/proto/parse-element\":13,\"./lib/send-request\":14,\"./lib/switches\":16,\"./lib/switches-selectors\":15,\"./lib/uniqueid\":17,\"./lib/util/clone\":18,\"./lib/util/contains\":19,\"./lib/util/extend\":20,\"./lib/util/noop\":21}],2:[function(require,module,exports){\nvar noop = require(\"./util/noop\");\n\nmodule.exports = function(request) {\n  if (request && request.readyState < 4) {\n    request.onreadystatechange = noop;\n    request.abort();\n  }\n};\n\n},{\"./util/noop\":21}],3:[function(require,module,exports){\nvar forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, listener, useCapture) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    forEachEls(els, function(el) {\n      el.addEventListener(e, listener, useCapture);\n    });\n  });\n};\n\n},{\"../foreach-els\":5}],4:[function(require,module,exports){\nvar forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, opts) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    var event;\n    event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(e, true, true);\n    event.eventName = e;\n    if (opts) {\n      Object.keys(opts).forEach(function(key) {\n        event[key] = opts[key];\n      });\n    }\n\n    forEachEls(els, function(el) {\n      var domFix = false;\n      if (!el.parentNode && el !== document && el !== window) {\n        // THANK YOU IE (9/10/11)\n        // dispatchEvent doesn't work if the element is not in the DOM\n        domFix = true;\n        document.body.appendChild(el);\n      }\n      el.dispatchEvent(event);\n      if (domFix) {\n        el.parentNode.removeChild(el);\n      }\n    });\n  });\n};\n\n},{\"../foreach-els\":5}],5:[function(require,module,exports){\n/* global HTMLCollection: true */\n\nmodule.exports = function(els, fn, context) {\n  if (\n    els instanceof HTMLCollection ||\n    els instanceof NodeList ||\n    els instanceof Array\n  ) {\n    return Array.prototype.forEach.call(els, fn, context);\n  }\n  // assume simple DOM element\n  return fn.call(context, els);\n};\n\n},{}],6:[function(require,module,exports){\nvar forEachEls = require(\"./foreach-els\");\n\nmodule.exports = function(selectors, cb, context, DOMcontext) {\n  DOMcontext = DOMcontext || document;\n  selectors.forEach(function(selector) {\n    forEachEls(DOMcontext.querySelectorAll(selector), cb, context);\n  });\n};\n\n},{\"./foreach-els\":5}],7:[function(require,module,exports){\nmodule.exports = function() {\n  // Borrowed wholesale from https://github.com/defunkt/jquery-pjax\n  return (\n    window.history &&\n    window.history.pushState &&\n    window.history.replaceState &&\n    // pushState isn’t reliable on iOS until 5.\n    !navigator.userAgent.match(\n      /((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/\n    )\n  );\n};\n\n},{}],8:[function(require,module,exports){\n/* global _gaq: true, ga: true */\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(options) {\n  options = options || {};\n  options.elements = options.elements || \"a[href], form[action]\";\n  options.selectors = options.selectors || [\"title\", \".js-Pjax\"];\n  options.switches = options.switches || {};\n  options.switchesOptions = options.switchesOptions || {};\n  options.history =\n    typeof options.history === \"undefined\" ? true : options.history;\n  options.analytics =\n    typeof options.analytics === \"function\" || options.analytics === false\n      ? options.analytics\n      : defaultAnalytics;\n  options.scrollTo =\n    typeof options.scrollTo === \"undefined\" ? 0 : options.scrollTo;\n  options.scrollRestoration =\n    typeof options.scrollRestoration !== \"undefined\"\n      ? options.scrollRestoration\n      : true;\n  options.cacheBust =\n    typeof options.cacheBust === \"undefined\" ? true : options.cacheBust;\n  options.debug = options.debug || false;\n  options.timeout = options.timeout || 0;\n  options.currentUrlFullReload =\n    typeof options.currentUrlFullReload === \"undefined\"\n      ? false\n      : options.currentUrlFullReload;\n\n  // We can’t replace body.outerHTML or head.outerHTML.\n  // It creates a bug where a new body or head are created in the DOM.\n  // If you set head.outerHTML, a new body tag is appended, so the DOM has 2 body nodes, and vice versa\n  if (!options.switches.head) {\n    options.switches.head = defaultSwitches.switchElementsAlt;\n  }\n  if (!options.switches.body) {\n    options.switches.body = defaultSwitches.switchElementsAlt;\n  }\n\n  return options;\n};\n\n/* istanbul ignore next */\nfunction defaultAnalytics() {\n  if (window._gaq) {\n    _gaq.push([\"_trackPageview\"]);\n  }\n  if (window.ga) {\n    ga(\"send\", \"pageview\", { page: location.pathname, title: document.title });\n  }\n}\n\n},{\"./switches\":16}],9:[function(require,module,exports){\nvar on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar formAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  // Initialize requestOptions\n  options.requestOptions = {\n    requestUrl: el.getAttribute(\"action\") || window.location.href,\n    requestMethod: el.getAttribute(\"method\") || \"GET\"\n  };\n\n  // create a testable virtual link of the form action\n  var virtLinkElement = document.createElement(\"a\");\n  virtLinkElement.setAttribute(\"href\", options.requestOptions.requestUrl);\n\n  var attrValue = checkIfShouldAbort(virtLinkElement, options);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  if (el.enctype === \"multipart/form-data\") {\n    options.requestOptions.formData = new FormData(el);\n  } else {\n    options.requestOptions.requestParams = parseFormElements(el);\n  }\n\n  el.setAttribute(attrState, \"submit\");\n\n  options.triggerElement = el;\n  this.loadUrl(virtLinkElement.href, options);\n};\n\nfunction parseFormElements(el) {\n  var requestParams = [];\n  var formElements = el.elements;\n\n  for (var i = 0; i < formElements.length; i++) {\n    var element = formElements[i];\n    var tagName = element.tagName.toLowerCase();\n    // jscs:disable disallowImplicitTypeConversion\n    if (\n      !!element.name &&\n      element.attributes !== undefined &&\n      tagName !== \"button\"\n    ) {\n      // jscs:enable disallowImplicitTypeConversion\n      var type = element.attributes.type;\n\n      if (\n        !type ||\n        (type.value !== \"checkbox\" && type.value !== \"radio\") ||\n        element.checked\n      ) {\n        // Build array of values to submit\n        var values = [];\n\n        if (tagName === \"select\") {\n          var opt;\n\n          for (var j = 0; j < element.options.length; j++) {\n            opt = element.options[j];\n            if (opt.selected && !opt.disabled) {\n              values.push(opt.hasAttribute(\"value\") ? opt.value : opt.text);\n            }\n          }\n        } else {\n          values.push(element.value);\n        }\n\n        for (var k = 0; k < values.length; k++) {\n          requestParams.push({\n            name: encodeURIComponent(element.name),\n            value: encodeURIComponent(values[k])\n          });\n        }\n      }\n    }\n  }\n\n  return requestParams;\n}\n\nfunction checkIfShouldAbort(virtLinkElement, options) {\n  // Ignore external links.\n  if (\n    virtLinkElement.protocol !== window.location.protocol ||\n    virtLinkElement.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore click if we are on an anchor on the same page\n  if (\n    virtLinkElement.hash &&\n    virtLinkElement.href.replace(virtLinkElement.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (virtLinkElement.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n\n  // if declared as a full reload, just normally submit the form\n  if (\n    options.currentUrlFullReload &&\n    virtLinkElement.href === window.location.href.split(\"#\")[0]\n  ) {\n    return \"reload\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"submit\", function(event) {\n    formAction.call(that, el, event);\n  });\n};\n\n},{\"../events/on\":3,\"../util/clone\":18}],10:[function(require,module,exports){\nvar on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar linkAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  var attrValue = checkIfShouldAbort(el, event);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  // don’t do \"nothing\" if user try to reload the page by clicking the same link twice\n  if (\n    this.options.currentUrlFullReload &&\n    el.href === window.location.href.split(\"#\")[0]\n  ) {\n    el.setAttribute(attrState, \"reload\");\n    this.reload();\n    return;\n  }\n\n  el.setAttribute(attrState, \"load\");\n\n  options.triggerElement = el;\n  this.loadUrl(el.href, options);\n};\n\nfunction checkIfShouldAbort(el, event) {\n  // Don’t break browser special behavior on links (like page in new window)\n  if (\n    event.which > 1 ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey\n  ) {\n    return \"modifier\";\n  }\n\n  // we do test on href now to prevent unexpected behavior if for some reason\n  // user have href that can be dynamically updated\n\n  // Ignore external links.\n  if (\n    el.protocol !== window.location.protocol ||\n    el.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore anchors on the same page (keep native behavior)\n  if (\n    el.hash &&\n    el.href.replace(el.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (el.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"click\", function(event) {\n    linkAction.call(that, el, event);\n  });\n\n  on(\n    el,\n    \"keyup\",\n    function(event) {\n      if (event.keyCode === 13) {\n        linkAction.call(that, el, event);\n      }\n    }.bind(this)\n  );\n};\n\n},{\"../events/on\":3,\"../util/clone\":18}],11:[function(require,module,exports){\nvar clone = require(\"../util/clone\");\nvar newUid = require(\"../uniqueid\");\nvar trigger = require(\"../events/trigger\");\n\nmodule.exports = function(responseText, request, href, options) {\n  options = clone(options || this.options);\n  options.request = request;\n\n  // Fail if unable to load HTML via AJAX\n  if (responseText === false) {\n    trigger(document, \"pjax:complete pjax:error\", options);\n\n    return;\n  }\n\n  // push scroll position to history\n  var currentState = window.history.state || {};\n  window.history.replaceState(\n    {\n      url: currentState.url || window.location.href,\n      title: currentState.title || document.title,\n      uid: currentState.uid || newUid(),\n      scrollPos: [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop\n      ]\n    },\n    document.title,\n    window.location.href\n  );\n\n  // Check for redirects\n  var oldHref = href;\n  if (request.responseURL) {\n    if (href !== request.responseURL) {\n      href = request.responseURL;\n    }\n  } else if (request.getResponseHeader(\"X-PJAX-URL\")) {\n    href = request.getResponseHeader(\"X-PJAX-URL\");\n  } else if (request.getResponseHeader(\"X-XHR-Redirected-To\")) {\n    href = request.getResponseHeader(\"X-XHR-Redirected-To\");\n  }\n\n  // Add back the hash if it was removed\n  var a = document.createElement(\"a\");\n  a.href = oldHref;\n  var oldHash = a.hash;\n  a.href = href;\n  if (oldHash && !a.hash) {\n    a.hash = oldHash;\n    href = a.href;\n  }\n\n  this.state.href = href;\n  this.state.options = options;\n\n  try {\n    this.loadContent(responseText, options);\n  } catch (e) {\n    trigger(document, \"pjax:error\", options);\n\n    if (!this.options.debug) {\n      if (console && console.error) {\n        console.error(\"Pjax switch fail: \", e);\n      }\n      return this.latestChance(href);\n    } else {\n      throw e;\n    }\n  }\n};\n\n},{\"../events/trigger\":4,\"../uniqueid\":17,\"../util/clone\":18}],12:[function(require,module,exports){\nmodule.exports = function() {\n  if (this.options.debug && console) {\n    if (typeof console.log === \"function\") {\n      console.log.apply(console, arguments);\n    }\n    // IE is weird\n    else if (console.log) {\n      console.log(arguments);\n    }\n  }\n};\n\n},{}],13:[function(require,module,exports){\nvar attrState = \"data-pjax-state\";\n\nmodule.exports = function(el) {\n  switch (el.tagName.toLowerCase()) {\n    case \"a\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachLink(el);\n      }\n      break;\n\n    case \"form\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachForm(el);\n      }\n      break;\n\n    default:\n      throw \"Pjax can only be applied on <a> or <form> submit\";\n  }\n};\n\n},{}],14:[function(require,module,exports){\nvar updateQueryString = require(\"./util/update-query-string\");\n\nmodule.exports = function(location, options, callback) {\n  options = options || {};\n  var queryString;\n  var requestOptions = options.requestOptions || {};\n  var requestMethod = (requestOptions.requestMethod || \"GET\").toUpperCase();\n  var requestParams = requestOptions.requestParams || null;\n  var formData = requestOptions.formData || null;\n  var requestPayload = null;\n  var request = new XMLHttpRequest();\n  var timeout = options.timeout || 0;\n\n  request.onreadystatechange = function() {\n    if (request.readyState === 4) {\n      if (request.status === 200) {\n        callback(request.responseText, request, location, options);\n      } else if (request.status !== 0) {\n        callback(null, request, location, options);\n      }\n    }\n  };\n\n  request.onerror = function(e) {\n    console.log(e);\n    callback(null, request, location, options);\n  };\n\n  request.ontimeout = function() {\n    callback(null, request, location, options);\n  };\n\n  // Prepare the request payload for forms, if available\n  if (requestParams && requestParams.length) {\n    // Build query string\n    queryString = requestParams\n      .map(function(param) {\n        return param.name + \"=\" + param.value;\n      })\n      .join(\"&\");\n\n    switch (requestMethod) {\n      case \"GET\":\n        // Reset query string to avoid an issue with repeat submissions where checkboxes that were\n        // previously checked are incorrectly preserved\n        location = location.split(\"?\")[0];\n\n        // Append new query string\n        location += \"?\" + queryString;\n        break;\n\n      case \"POST\":\n        // Send query string as request payload\n        requestPayload = queryString;\n        break;\n    }\n  } else if (formData) {\n    requestPayload = formData;\n  }\n\n  // Add a timestamp as part of the query string if cache busting is enabled\n  if (options.cacheBust) {\n    location = updateQueryString(location, \"t\", Date.now());\n  }\n\n  request.open(requestMethod, location, true);\n  request.timeout = timeout;\n  request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n  request.setRequestHeader(\"X-PJAX\", \"true\");\n  request.setRequestHeader(\n    \"X-PJAX-Selectors\",\n    JSON.stringify(options.selectors)\n  );\n\n  // Send the proper header information for POST forms\n  if (requestPayload && requestMethod === \"POST\" && !formData) {\n    request.setRequestHeader(\n      \"Content-Type\",\n      \"application/x-www-form-urlencoded\"\n    );\n  }\n\n  request.send(requestPayload);\n\n  return request;\n};\n\n},{\"./util/update-query-string\":22}],15:[function(require,module,exports){\nvar forEachEls = require(\"./foreach-els\");\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(\n  switches,\n  switchesOptions,\n  selectors,\n  fromEl,\n  toEl,\n  options\n) {\n  var switchesQueue = [];\n\n  selectors.forEach(function(selector) {\n    var newEls = fromEl.querySelectorAll(selector);\n    var oldEls = toEl.querySelectorAll(selector);\n    if (this.log) {\n      this.log(\"Pjax switch\", selector, newEls, oldEls);\n    }\n    if (newEls.length !== oldEls.length) {\n      throw \"DOM doesn’t look the same on new loaded page: ’\" +\n        selector +\n        \"’ - new \" +\n        newEls.length +\n        \", old \" +\n        oldEls.length;\n    }\n\n    forEachEls(\n      newEls,\n      function(newEl, i) {\n        var oldEl = oldEls[i];\n        if (this.log) {\n          this.log(\"newEl\", newEl, \"oldEl\", oldEl);\n        }\n\n        var callback = switches[selector]\n          ? switches[selector].bind(\n              this,\n              oldEl,\n              newEl,\n              options,\n              switchesOptions[selector]\n            )\n          : defaultSwitches.outerHTML.bind(this, oldEl, newEl, options);\n\n        switchesQueue.push(callback);\n      },\n      this\n    );\n  }, this);\n\n  this.state.numPendingSwitches = switchesQueue.length;\n\n  switchesQueue.forEach(function(queuedSwitch) {\n    queuedSwitch();\n  });\n};\n\n},{\"./foreach-els\":5,\"./switches\":16}],16:[function(require,module,exports){\nvar on = require(\"./events/on\");\n\nmodule.exports = {\n  outerHTML: function(oldEl, newEl) {\n    oldEl.outerHTML = newEl.outerHTML;\n    this.onSwitch();\n  },\n\n  innerHTML: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    if (newEl.className === \"\") {\n      oldEl.removeAttribute(\"class\");\n    } else {\n      //oldEl.className = newEl.className;\n    }\n\n    this.onSwitch();\n  },\n\n  switchElementsAlt: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    // Copy attributes from the new element to the old one\n    if (newEl.hasAttributes()) {\n      var attrs = newEl.attributes;\n      for (var i = 0; i < attrs.length; i++) {\n        oldEl.attributes.setNamedItem(attrs[i].cloneNode());\n      }\n    }\n\n    this.onSwitch();\n  },\n\n  // Equivalent to outerHTML(), but doesn't require switchElementsAlt() for <head> and <body>\n  replaceNode: function(oldEl, newEl) {\n    oldEl.parentNode.replaceChild(newEl, oldEl);\n    this.onSwitch();\n  },\n\n  sideBySide: function(oldEl, newEl, options, switchOptions) {\n    var forEach = Array.prototype.forEach;\n    var elsToRemove = [];\n    var elsToAdd = [];\n    var fragToAppend = document.createDocumentFragment();\n    var animationEventNames =\n      \"animationend webkitAnimationEnd MSAnimationEnd oanimationend\";\n    var animatedElsNumber = 0;\n    var sexyAnimationEnd = function(e) {\n      if (e.target !== e.currentTarget) {\n        // end triggered by an animation on a child\n        return;\n      }\n\n      animatedElsNumber--;\n      if (animatedElsNumber <= 0 && elsToRemove) {\n        elsToRemove.forEach(function(el) {\n          // browsing quickly can make the el\n          // already removed by last page update ?\n          if (el.parentNode) {\n            el.parentNode.removeChild(el);\n          }\n        });\n\n        elsToAdd.forEach(function(el) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        });\n\n        elsToAdd = null; // free memory\n        elsToRemove = null; // free memory\n\n        // this is to trigger some repaint (example: picturefill)\n        this.onSwitch();\n      }\n    }.bind(this);\n\n    switchOptions = switchOptions || {};\n\n    forEach.call(oldEl.childNodes, function(el) {\n      elsToRemove.push(el);\n      if (el.classList && !el.classList.contains(\"js-Pjax-remove\")) {\n        // for fast switch, clean element that just have been added, & not cleaned yet.\n        if (el.hasAttribute(\"data-pjax-classes\")) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        }\n        el.classList.add(\"js-Pjax-remove\");\n        if (switchOptions.callbacks && switchOptions.callbacks.removeElement) {\n          switchOptions.callbacks.removeElement(el);\n        }\n        if (switchOptions.classNames) {\n          el.className +=\n            \" \" +\n            switchOptions.classNames.remove +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.backward\n              : switchOptions.classNames.forward);\n        }\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    forEach.call(newEl.childNodes, function(el) {\n      if (el.classList) {\n        var addClasses = \"\";\n        if (switchOptions.classNames) {\n          addClasses =\n            \" js-Pjax-add \" +\n            switchOptions.classNames.add +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.forward\n              : switchOptions.classNames.backward);\n        }\n        if (switchOptions.callbacks && switchOptions.callbacks.addElement) {\n          switchOptions.callbacks.addElement(el);\n        }\n        el.className += addClasses;\n        el.setAttribute(\"data-pjax-classes\", addClasses);\n        elsToAdd.push(el);\n        fragToAppend.appendChild(el);\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    // pass all className of the parent\n    oldEl.className = newEl.className;\n    oldEl.appendChild(fragToAppend);\n  }\n};\n\n},{\"./events/on\":3}],17:[function(require,module,exports){\nmodule.exports = (function() {\n  var counter = 0;\n  return function() {\n    var id = \"pjax\" + new Date().getTime() + \"_\" + counter;\n    counter++;\n    return id;\n  };\n})();\n\n},{}],18:[function(require,module,exports){\nmodule.exports = function(obj) {\n  /* istanbul ignore if */\n  if (null === obj || \"object\" !== typeof obj) {\n    return obj;\n  }\n  var copy = obj.constructor();\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) {\n      copy[attr] = obj[attr];\n    }\n  }\n  return copy;\n};\n\n},{}],19:[function(require,module,exports){\nmodule.exports = function contains(doc, selectors, el) {\n  for (var i = 0; i < selectors.length; i++) {\n    var selectedEls = doc.querySelectorAll(selectors[i]);\n    for (var j = 0; j < selectedEls.length; j++) {\n      if (selectedEls[j].contains(el)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n},{}],20:[function(require,module,exports){\nmodule.exports = function(target) {\n  if (target == null) {\n    return null;\n  }\n\n  var to = Object(target);\n\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    if (source != null) {\n      for (var key in source) {\n        // Avoid bugs when hasOwnProperty is shadowed\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          to[key] = source[key];\n        }\n      }\n    }\n  }\n  return to;\n};\n\n},{}],21:[function(require,module,exports){\nmodule.exports = function() {};\n\n},{}],22:[function(require,module,exports){\nmodule.exports = function(uri, key, value) {\n  var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n  var separator = uri.indexOf(\"?\") !== -1 ? \"&\" : \"?\";\n  if (uri.match(re)) {\n    return uri.replace(re, \"$1\" + key + \"=\" + value + \"$2\");\n  } else {\n    return uri + separator + key + \"=\" + value;\n  }\n};\n\n},{}]},{},[1])(1)\n});\n","source":"lib/pjax/pjax.js","raw":"(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pjax = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n// var executeScripts = require(\"./lib/execute-scripts\");  // unused-var\nvar forEachEls = require(\"./lib/foreach-els\");\nvar parseOptions = require(\"./lib/parse-options\");\nvar switches = require(\"./lib/switches\");\nvar newUid = require(\"./lib/uniqueid\");\n\nvar on = require(\"./lib/events/on\");\nvar trigger = require(\"./lib/events/trigger\");\n\nvar clone = require(\"./lib/util/clone\");\nvar contains = require(\"./lib/util/contains\");\nvar extend = require(\"./lib/util/extend\");\nvar noop = require(\"./lib/util/noop\");\n\nvar Pjax = function(options) {\n  this.state = {\n    numPendingSwitches: 0,\n    href: null,\n    options: null\n  };\n\n  this.options = parseOptions(options);\n  this.log(\"Pjax options\", this.options);\n\n  if (this.options.scrollRestoration && \"scrollRestoration\" in history) {\n    history.scrollRestoration = \"manual\";\n  }\n\n  this.maxUid = this.lastUid = newUid();\n\n  this.parseDOM(document);\n\n  on(\n    window,\n    \"popstate\",\n    function(st) {\n      if (st.state) {\n        var opt = clone(this.options);\n        opt.url = st.state.url;\n        opt.title = st.state.title;\n        // Since state already exists, prevent it from being pushed again\n        opt.history = false;\n        opt.scrollPos = st.state.scrollPos;\n        if (st.state.uid < this.lastUid) {\n          opt.backward = true;\n        } else {\n          opt.forward = true;\n        }\n        this.lastUid = st.state.uid;\n\n        // @todo implement history cache here, based on uid\n        this.loadUrl(st.state.url, opt);\n      }\n    }.bind(this)\n  );\n};\n\nPjax.switches = switches;\n\nPjax.prototype = {\n  log: require(\"./lib/proto/log\"),\n\n  getElements: function(el) {\n    return el.querySelectorAll(this.options.elements);\n  },\n\n  parseDOM: function(el) {\n    var parseElement = require(\"./lib/proto/parse-element\");\n    forEachEls(this.getElements(el), parseElement, this);\n  },\n\n  refresh: function(el) {\n    this.parseDOM(el || document);\n  },\n\n  reload: function() {\n    window.location.reload();\n  },\n\n  attachLink: require(\"./lib/proto/attach-link\"),\n\n  attachForm: require(\"./lib/proto/attach-form\"),\n\n  forEachSelectors: function(cb, context, DOMcontext) {\n    return require(\"./lib/foreach-selectors\").bind(this)(\n      this.options.selectors,\n      cb,\n      context,\n      DOMcontext\n    );\n  },\n\n  switchSelectors: function(selectors, fromEl, toEl, options) {\n    return require(\"./lib/switches-selectors\").bind(this)(\n      this.options.switches,\n      this.options.switchesOptions,\n      selectors,\n      fromEl,\n      toEl,\n      options\n    );\n  },\n\n  latestChance: function(href) {\n    window.location = href;\n  },\n\n  onSwitch: function() {\n    trigger(window, \"resize scroll\");\n\n    this.state.numPendingSwitches--;\n\n    // debounce calls, so we only run this once after all switches are finished.\n    if (this.state.numPendingSwitches === 0) {\n      this.afterAllSwitches();\n    }\n  },\n\n  loadContent: function(html, options) {\n    if (typeof html !== \"string\") {\n      trigger(document, \"pjax:complete pjax:error\", options);\n\n      return;\n    }\n\n    var tmpEl = document.implementation.createHTMLDocument(\"pjax\");\n\n    // parse HTML attributes to copy them\n    // since we are forced to use documentElement.innerHTML (outerHTML can't be used for <html>)\n    var htmlRegex = /<html[^>]+>/gi;\n    var htmlAttribsRegex = /\\s?[a-z:]+(?:=['\"][^'\">]+['\"])*/gi;\n    var matches = html.match(htmlRegex);\n    if (matches && matches.length) {\n      matches = matches[0].match(htmlAttribsRegex);\n      if (matches.length) {\n        matches.shift();\n        matches.forEach(function(htmlAttrib) {\n          var attr = htmlAttrib.trim().split(\"=\");\n          if (attr.length === 1) {\n            tmpEl.documentElement.setAttribute(attr[0], true);\n          } else {\n            tmpEl.documentElement.setAttribute(attr[0], attr[1].slice(1, -1));\n          }\n        });\n      }\n    }\n\n    tmpEl.documentElement.innerHTML = html;\n    this.log(\n      \"load content\",\n      tmpEl.documentElement.attributes,\n      tmpEl.documentElement.innerHTML.length\n    );\n\n    // Clear out any focused controls before inserting new page contents.\n    if (\n      document.activeElement &&\n      contains(document, this.options.selectors, document.activeElement)\n    ) {\n      try {\n        document.activeElement.blur();\n      } catch (e) {} // eslint-disable-line no-empty\n    }\n\n    this.switchSelectors(this.options.selectors, tmpEl, document, options);\n  },\n\n  abortRequest: require(\"./lib/abort-request\"),\n\n  doRequest: require(\"./lib/send-request\"),\n\n  handleResponse: require(\"./lib/proto/handle-response\"),\n\n  loadUrl: function(href, options) {\n    options =\n      typeof options === \"object\"\n        ? extend({}, this.options, options)\n        : clone(this.options);\n\n    this.log(\"load href\", href, options);\n\n    // Abort any previous request\n    this.abortRequest(this.request);\n\n    trigger(document, \"pjax:send\", options);\n\n    // Do the request\n    this.request = this.doRequest(\n      href,\n      options,\n      this.handleResponse.bind(this)\n    );\n  },\n\n  afterAllSwitches: function() {\n    // FF bug: Won’t autofocus fields that are inserted via JS.\n    // This behavior is incorrect. So if theres no current focus, autofocus\n    // the last field.\n    //\n    // http://www.w3.org/html/wg/drafts/html/master/forms.html\n    var autofocusEl = Array.prototype.slice\n      .call(document.querySelectorAll(\"[autofocus]\"))\n      .pop();\n    if (autofocusEl && document.activeElement !== autofocusEl) {\n      autofocusEl.focus();\n    }\n\n    // execute scripts when DOM have been completely updated\n    this.options.selectors.forEach(function(selector) {\n      forEachEls(document.querySelectorAll(selector), function(el) {\n        // executeScripts(el);\n        if (el === 0) ;  // intentially left blank!\n      });\n    });\n\n    var state = this.state;\n\n    if (state.options.history) {\n      if (!window.history.state) {\n        this.lastUid = this.maxUid = newUid();\n        window.history.replaceState(\n          {\n            url: window.location.href,\n            title: document.title,\n            uid: this.maxUid,\n            scrollPos: [0, 0]\n          },\n          document.title\n        );\n      }\n\n      // Update browser history\n      this.lastUid = this.maxUid = newUid();\n\n      window.history.pushState(\n        {\n          url: state.href,\n          title: state.options.title,\n          uid: this.maxUid,\n          scrollPos: [0, 0]\n        },\n        state.options.title,\n        state.href\n      );\n    }\n\n    this.forEachSelectors(function(el) {\n      this.parseDOM(el);\n    }, this);\n\n    // Fire Events\n    trigger(document, \"pjax:complete pjax:success\", state.options);\n\n    if (typeof state.options.analytics === \"function\") {\n      state.options.analytics();\n    }\n\n    if (state.options.history) {\n      // First parse url and check for hash to override scroll\n      var a = document.createElement(\"a\");\n      a.href = this.state.href;\n      if (a.hash) {\n        var name = a.hash.slice(1);\n        name = decodeURIComponent(name);\n\n        var curtop = 0;\n        var target =\n          document.getElementById(name) || document.getElementsByName(name)[0];\n        if (target) {\n          // http://stackoverflow.com/questions/8111094/cross-browser-javascript-function-to-find-actual-position-of-an-element-in-page\n          if (target.offsetParent) {\n            do {\n              curtop += target.offsetTop;\n\n              target = target.offsetParent;\n            } while (target);\n          }\n        }\n        window.scrollTo(0, curtop);\n      } else if (state.options.scrollTo !== false) {\n        // Scroll page to top on new page load\n        if (state.options.scrollTo.length > 1) {\n          window.scrollTo(state.options.scrollTo[0], state.options.scrollTo[1]);\n        } else {\n          window.scrollTo(0, state.options.scrollTo);\n        }\n      }\n    } else if (state.options.scrollRestoration && state.options.scrollPos) {\n      window.scrollTo(state.options.scrollPos[0], state.options.scrollPos[1]);\n    }\n\n    this.state = {\n      numPendingSwitches: 0,\n      href: null,\n      options: null\n    };\n  }\n};\n\nPjax.isSupported = require(\"./lib/is-supported\");\n\n// arguably could do `if( require(\"./lib/is-supported\")()) {` but that might be a little to simple\nif (Pjax.isSupported()) {\n  module.exports = Pjax;\n}\n// if there isn’t required browser functions, returning stupid api\nelse {\n  var stupidPjax = noop;\n  for (var key in Pjax.prototype) {\n    if (\n      Pjax.prototype.hasOwnProperty(key) &&\n      typeof Pjax.prototype[key] === \"function\"\n    ) {\n      stupidPjax[key] = noop;\n    }\n  }\n\n  module.exports = stupidPjax;\n}\n\n},{\"./lib/abort-request\":2,\"./lib/events/on\":3,\"./lib/events/trigger\":4,\"./lib/foreach-els\":5,\"./lib/foreach-selectors\":6,\"./lib/is-supported\":7,\"./lib/parse-options\":8,\"./lib/proto/attach-form\":9,\"./lib/proto/attach-link\":10,\"./lib/proto/handle-response\":11,\"./lib/proto/log\":12,\"./lib/proto/parse-element\":13,\"./lib/send-request\":14,\"./lib/switches\":16,\"./lib/switches-selectors\":15,\"./lib/uniqueid\":17,\"./lib/util/clone\":18,\"./lib/util/contains\":19,\"./lib/util/extend\":20,\"./lib/util/noop\":21}],2:[function(require,module,exports){\nvar noop = require(\"./util/noop\");\n\nmodule.exports = function(request) {\n  if (request && request.readyState < 4) {\n    request.onreadystatechange = noop;\n    request.abort();\n  }\n};\n\n},{\"./util/noop\":21}],3:[function(require,module,exports){\nvar forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, listener, useCapture) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    forEachEls(els, function(el) {\n      el.addEventListener(e, listener, useCapture);\n    });\n  });\n};\n\n},{\"../foreach-els\":5}],4:[function(require,module,exports){\nvar forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, opts) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    var event;\n    event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(e, true, true);\n    event.eventName = e;\n    if (opts) {\n      Object.keys(opts).forEach(function(key) {\n        event[key] = opts[key];\n      });\n    }\n\n    forEachEls(els, function(el) {\n      var domFix = false;\n      if (!el.parentNode && el !== document && el !== window) {\n        // THANK YOU IE (9/10/11)\n        // dispatchEvent doesn't work if the element is not in the DOM\n        domFix = true;\n        document.body.appendChild(el);\n      }\n      el.dispatchEvent(event);\n      if (domFix) {\n        el.parentNode.removeChild(el);\n      }\n    });\n  });\n};\n\n},{\"../foreach-els\":5}],5:[function(require,module,exports){\n/* global HTMLCollection: true */\n\nmodule.exports = function(els, fn, context) {\n  if (\n    els instanceof HTMLCollection ||\n    els instanceof NodeList ||\n    els instanceof Array\n  ) {\n    return Array.prototype.forEach.call(els, fn, context);\n  }\n  // assume simple DOM element\n  return fn.call(context, els);\n};\n\n},{}],6:[function(require,module,exports){\nvar forEachEls = require(\"./foreach-els\");\n\nmodule.exports = function(selectors, cb, context, DOMcontext) {\n  DOMcontext = DOMcontext || document;\n  selectors.forEach(function(selector) {\n    forEachEls(DOMcontext.querySelectorAll(selector), cb, context);\n  });\n};\n\n},{\"./foreach-els\":5}],7:[function(require,module,exports){\nmodule.exports = function() {\n  // Borrowed wholesale from https://github.com/defunkt/jquery-pjax\n  return (\n    window.history &&\n    window.history.pushState &&\n    window.history.replaceState &&\n    // pushState isn’t reliable on iOS until 5.\n    !navigator.userAgent.match(\n      /((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/\n    )\n  );\n};\n\n},{}],8:[function(require,module,exports){\n/* global _gaq: true, ga: true */\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(options) {\n  options = options || {};\n  options.elements = options.elements || \"a[href], form[action]\";\n  options.selectors = options.selectors || [\"title\", \".js-Pjax\"];\n  options.switches = options.switches || {};\n  options.switchesOptions = options.switchesOptions || {};\n  options.history =\n    typeof options.history === \"undefined\" ? true : options.history;\n  options.analytics =\n    typeof options.analytics === \"function\" || options.analytics === false\n      ? options.analytics\n      : defaultAnalytics;\n  options.scrollTo =\n    typeof options.scrollTo === \"undefined\" ? 0 : options.scrollTo;\n  options.scrollRestoration =\n    typeof options.scrollRestoration !== \"undefined\"\n      ? options.scrollRestoration\n      : true;\n  options.cacheBust =\n    typeof options.cacheBust === \"undefined\" ? true : options.cacheBust;\n  options.debug = options.debug || false;\n  options.timeout = options.timeout || 0;\n  options.currentUrlFullReload =\n    typeof options.currentUrlFullReload === \"undefined\"\n      ? false\n      : options.currentUrlFullReload;\n\n  // We can’t replace body.outerHTML or head.outerHTML.\n  // It creates a bug where a new body or head are created in the DOM.\n  // If you set head.outerHTML, a new body tag is appended, so the DOM has 2 body nodes, and vice versa\n  if (!options.switches.head) {\n    options.switches.head = defaultSwitches.switchElementsAlt;\n  }\n  if (!options.switches.body) {\n    options.switches.body = defaultSwitches.switchElementsAlt;\n  }\n\n  return options;\n};\n\n/* istanbul ignore next */\nfunction defaultAnalytics() {\n  if (window._gaq) {\n    _gaq.push([\"_trackPageview\"]);\n  }\n  if (window.ga) {\n    ga(\"send\", \"pageview\", { page: location.pathname, title: document.title });\n  }\n}\n\n},{\"./switches\":16}],9:[function(require,module,exports){\nvar on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar formAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  // Initialize requestOptions\n  options.requestOptions = {\n    requestUrl: el.getAttribute(\"action\") || window.location.href,\n    requestMethod: el.getAttribute(\"method\") || \"GET\"\n  };\n\n  // create a testable virtual link of the form action\n  var virtLinkElement = document.createElement(\"a\");\n  virtLinkElement.setAttribute(\"href\", options.requestOptions.requestUrl);\n\n  var attrValue = checkIfShouldAbort(virtLinkElement, options);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  if (el.enctype === \"multipart/form-data\") {\n    options.requestOptions.formData = new FormData(el);\n  } else {\n    options.requestOptions.requestParams = parseFormElements(el);\n  }\n\n  el.setAttribute(attrState, \"submit\");\n\n  options.triggerElement = el;\n  this.loadUrl(virtLinkElement.href, options);\n};\n\nfunction parseFormElements(el) {\n  var requestParams = [];\n  var formElements = el.elements;\n\n  for (var i = 0; i < formElements.length; i++) {\n    var element = formElements[i];\n    var tagName = element.tagName.toLowerCase();\n    // jscs:disable disallowImplicitTypeConversion\n    if (\n      !!element.name &&\n      element.attributes !== undefined &&\n      tagName !== \"button\"\n    ) {\n      // jscs:enable disallowImplicitTypeConversion\n      var type = element.attributes.type;\n\n      if (\n        !type ||\n        (type.value !== \"checkbox\" && type.value !== \"radio\") ||\n        element.checked\n      ) {\n        // Build array of values to submit\n        var values = [];\n\n        if (tagName === \"select\") {\n          var opt;\n\n          for (var j = 0; j < element.options.length; j++) {\n            opt = element.options[j];\n            if (opt.selected && !opt.disabled) {\n              values.push(opt.hasAttribute(\"value\") ? opt.value : opt.text);\n            }\n          }\n        } else {\n          values.push(element.value);\n        }\n\n        for (var k = 0; k < values.length; k++) {\n          requestParams.push({\n            name: encodeURIComponent(element.name),\n            value: encodeURIComponent(values[k])\n          });\n        }\n      }\n    }\n  }\n\n  return requestParams;\n}\n\nfunction checkIfShouldAbort(virtLinkElement, options) {\n  // Ignore external links.\n  if (\n    virtLinkElement.protocol !== window.location.protocol ||\n    virtLinkElement.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore click if we are on an anchor on the same page\n  if (\n    virtLinkElement.hash &&\n    virtLinkElement.href.replace(virtLinkElement.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (virtLinkElement.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n\n  // if declared as a full reload, just normally submit the form\n  if (\n    options.currentUrlFullReload &&\n    virtLinkElement.href === window.location.href.split(\"#\")[0]\n  ) {\n    return \"reload\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"submit\", function(event) {\n    formAction.call(that, el, event);\n  });\n};\n\n},{\"../events/on\":3,\"../util/clone\":18}],10:[function(require,module,exports){\nvar on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar linkAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  var attrValue = checkIfShouldAbort(el, event);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  // don’t do \"nothing\" if user try to reload the page by clicking the same link twice\n  if (\n    this.options.currentUrlFullReload &&\n    el.href === window.location.href.split(\"#\")[0]\n  ) {\n    el.setAttribute(attrState, \"reload\");\n    this.reload();\n    return;\n  }\n\n  el.setAttribute(attrState, \"load\");\n\n  options.triggerElement = el;\n  this.loadUrl(el.href, options);\n};\n\nfunction checkIfShouldAbort(el, event) {\n  // Don’t break browser special behavior on links (like page in new window)\n  if (\n    event.which > 1 ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey\n  ) {\n    return \"modifier\";\n  }\n\n  // we do test on href now to prevent unexpected behavior if for some reason\n  // user have href that can be dynamically updated\n\n  // Ignore external links.\n  if (\n    el.protocol !== window.location.protocol ||\n    el.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore anchors on the same page (keep native behavior)\n  if (\n    el.hash &&\n    el.href.replace(el.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (el.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"click\", function(event) {\n    linkAction.call(that, el, event);\n  });\n\n  on(\n    el,\n    \"keyup\",\n    function(event) {\n      if (event.keyCode === 13) {\n        linkAction.call(that, el, event);\n      }\n    }.bind(this)\n  );\n};\n\n},{\"../events/on\":3,\"../util/clone\":18}],11:[function(require,module,exports){\nvar clone = require(\"../util/clone\");\nvar newUid = require(\"../uniqueid\");\nvar trigger = require(\"../events/trigger\");\n\nmodule.exports = function(responseText, request, href, options) {\n  options = clone(options || this.options);\n  options.request = request;\n\n  // Fail if unable to load HTML via AJAX\n  if (responseText === false) {\n    trigger(document, \"pjax:complete pjax:error\", options);\n\n    return;\n  }\n\n  // push scroll position to history\n  var currentState = window.history.state || {};\n  window.history.replaceState(\n    {\n      url: currentState.url || window.location.href,\n      title: currentState.title || document.title,\n      uid: currentState.uid || newUid(),\n      scrollPos: [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop\n      ]\n    },\n    document.title,\n    window.location.href\n  );\n\n  // Check for redirects\n  var oldHref = href;\n  if (request.responseURL) {\n    if (href !== request.responseURL) {\n      href = request.responseURL;\n    }\n  } else if (request.getResponseHeader(\"X-PJAX-URL\")) {\n    href = request.getResponseHeader(\"X-PJAX-URL\");\n  } else if (request.getResponseHeader(\"X-XHR-Redirected-To\")) {\n    href = request.getResponseHeader(\"X-XHR-Redirected-To\");\n  }\n\n  // Add back the hash if it was removed\n  var a = document.createElement(\"a\");\n  a.href = oldHref;\n  var oldHash = a.hash;\n  a.href = href;\n  if (oldHash && !a.hash) {\n    a.hash = oldHash;\n    href = a.href;\n  }\n\n  this.state.href = href;\n  this.state.options = options;\n\n  try {\n    this.loadContent(responseText, options);\n  } catch (e) {\n    trigger(document, \"pjax:error\", options);\n\n    if (!this.options.debug) {\n      if (console && console.error) {\n        console.error(\"Pjax switch fail: \", e);\n      }\n      return this.latestChance(href);\n    } else {\n      throw e;\n    }\n  }\n};\n\n},{\"../events/trigger\":4,\"../uniqueid\":17,\"../util/clone\":18}],12:[function(require,module,exports){\nmodule.exports = function() {\n  if (this.options.debug && console) {\n    if (typeof console.log === \"function\") {\n      console.log.apply(console, arguments);\n    }\n    // IE is weird\n    else if (console.log) {\n      console.log(arguments);\n    }\n  }\n};\n\n},{}],13:[function(require,module,exports){\nvar attrState = \"data-pjax-state\";\n\nmodule.exports = function(el) {\n  switch (el.tagName.toLowerCase()) {\n    case \"a\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachLink(el);\n      }\n      break;\n\n    case \"form\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachForm(el);\n      }\n      break;\n\n    default:\n      throw \"Pjax can only be applied on <a> or <form> submit\";\n  }\n};\n\n},{}],14:[function(require,module,exports){\nvar updateQueryString = require(\"./util/update-query-string\");\n\nmodule.exports = function(location, options, callback) {\n  options = options || {};\n  var queryString;\n  var requestOptions = options.requestOptions || {};\n  var requestMethod = (requestOptions.requestMethod || \"GET\").toUpperCase();\n  var requestParams = requestOptions.requestParams || null;\n  var formData = requestOptions.formData || null;\n  var requestPayload = null;\n  var request = new XMLHttpRequest();\n  var timeout = options.timeout || 0;\n\n  request.onreadystatechange = function() {\n    if (request.readyState === 4) {\n      if (request.status === 200) {\n        callback(request.responseText, request, location, options);\n      } else if (request.status !== 0) {\n        callback(null, request, location, options);\n      }\n    }\n  };\n\n  request.onerror = function(e) {\n    console.log(e);\n    callback(null, request, location, options);\n  };\n\n  request.ontimeout = function() {\n    callback(null, request, location, options);\n  };\n\n  // Prepare the request payload for forms, if available\n  if (requestParams && requestParams.length) {\n    // Build query string\n    queryString = requestParams\n      .map(function(param) {\n        return param.name + \"=\" + param.value;\n      })\n      .join(\"&\");\n\n    switch (requestMethod) {\n      case \"GET\":\n        // Reset query string to avoid an issue with repeat submissions where checkboxes that were\n        // previously checked are incorrectly preserved\n        location = location.split(\"?\")[0];\n\n        // Append new query string\n        location += \"?\" + queryString;\n        break;\n\n      case \"POST\":\n        // Send query string as request payload\n        requestPayload = queryString;\n        break;\n    }\n  } else if (formData) {\n    requestPayload = formData;\n  }\n\n  // Add a timestamp as part of the query string if cache busting is enabled\n  if (options.cacheBust) {\n    location = updateQueryString(location, \"t\", Date.now());\n  }\n\n  request.open(requestMethod, location, true);\n  request.timeout = timeout;\n  request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n  request.setRequestHeader(\"X-PJAX\", \"true\");\n  request.setRequestHeader(\n    \"X-PJAX-Selectors\",\n    JSON.stringify(options.selectors)\n  );\n\n  // Send the proper header information for POST forms\n  if (requestPayload && requestMethod === \"POST\" && !formData) {\n    request.setRequestHeader(\n      \"Content-Type\",\n      \"application/x-www-form-urlencoded\"\n    );\n  }\n\n  request.send(requestPayload);\n\n  return request;\n};\n\n},{\"./util/update-query-string\":22}],15:[function(require,module,exports){\nvar forEachEls = require(\"./foreach-els\");\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(\n  switches,\n  switchesOptions,\n  selectors,\n  fromEl,\n  toEl,\n  options\n) {\n  var switchesQueue = [];\n\n  selectors.forEach(function(selector) {\n    var newEls = fromEl.querySelectorAll(selector);\n    var oldEls = toEl.querySelectorAll(selector);\n    if (this.log) {\n      this.log(\"Pjax switch\", selector, newEls, oldEls);\n    }\n    if (newEls.length !== oldEls.length) {\n      throw \"DOM doesn’t look the same on new loaded page: ’\" +\n        selector +\n        \"’ - new \" +\n        newEls.length +\n        \", old \" +\n        oldEls.length;\n    }\n\n    forEachEls(\n      newEls,\n      function(newEl, i) {\n        var oldEl = oldEls[i];\n        if (this.log) {\n          this.log(\"newEl\", newEl, \"oldEl\", oldEl);\n        }\n\n        var callback = switches[selector]\n          ? switches[selector].bind(\n              this,\n              oldEl,\n              newEl,\n              options,\n              switchesOptions[selector]\n            )\n          : defaultSwitches.outerHTML.bind(this, oldEl, newEl, options);\n\n        switchesQueue.push(callback);\n      },\n      this\n    );\n  }, this);\n\n  this.state.numPendingSwitches = switchesQueue.length;\n\n  switchesQueue.forEach(function(queuedSwitch) {\n    queuedSwitch();\n  });\n};\n\n},{\"./foreach-els\":5,\"./switches\":16}],16:[function(require,module,exports){\nvar on = require(\"./events/on\");\n\nmodule.exports = {\n  outerHTML: function(oldEl, newEl) {\n    oldEl.outerHTML = newEl.outerHTML;\n    this.onSwitch();\n  },\n\n  innerHTML: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    if (newEl.className === \"\") {\n      oldEl.removeAttribute(\"class\");\n    } else {\n      //oldEl.className = newEl.className;\n    }\n\n    this.onSwitch();\n  },\n\n  switchElementsAlt: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    // Copy attributes from the new element to the old one\n    if (newEl.hasAttributes()) {\n      var attrs = newEl.attributes;\n      for (var i = 0; i < attrs.length; i++) {\n        oldEl.attributes.setNamedItem(attrs[i].cloneNode());\n      }\n    }\n\n    this.onSwitch();\n  },\n\n  // Equivalent to outerHTML(), but doesn't require switchElementsAlt() for <head> and <body>\n  replaceNode: function(oldEl, newEl) {\n    oldEl.parentNode.replaceChild(newEl, oldEl);\n    this.onSwitch();\n  },\n\n  sideBySide: function(oldEl, newEl, options, switchOptions) {\n    var forEach = Array.prototype.forEach;\n    var elsToRemove = [];\n    var elsToAdd = [];\n    var fragToAppend = document.createDocumentFragment();\n    var animationEventNames =\n      \"animationend webkitAnimationEnd MSAnimationEnd oanimationend\";\n    var animatedElsNumber = 0;\n    var sexyAnimationEnd = function(e) {\n      if (e.target !== e.currentTarget) {\n        // end triggered by an animation on a child\n        return;\n      }\n\n      animatedElsNumber--;\n      if (animatedElsNumber <= 0 && elsToRemove) {\n        elsToRemove.forEach(function(el) {\n          // browsing quickly can make the el\n          // already removed by last page update ?\n          if (el.parentNode) {\n            el.parentNode.removeChild(el);\n          }\n        });\n\n        elsToAdd.forEach(function(el) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        });\n\n        elsToAdd = null; // free memory\n        elsToRemove = null; // free memory\n\n        // this is to trigger some repaint (example: picturefill)\n        this.onSwitch();\n      }\n    }.bind(this);\n\n    switchOptions = switchOptions || {};\n\n    forEach.call(oldEl.childNodes, function(el) {\n      elsToRemove.push(el);\n      if (el.classList && !el.classList.contains(\"js-Pjax-remove\")) {\n        // for fast switch, clean element that just have been added, & not cleaned yet.\n        if (el.hasAttribute(\"data-pjax-classes\")) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        }\n        el.classList.add(\"js-Pjax-remove\");\n        if (switchOptions.callbacks && switchOptions.callbacks.removeElement) {\n          switchOptions.callbacks.removeElement(el);\n        }\n        if (switchOptions.classNames) {\n          el.className +=\n            \" \" +\n            switchOptions.classNames.remove +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.backward\n              : switchOptions.classNames.forward);\n        }\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    forEach.call(newEl.childNodes, function(el) {\n      if (el.classList) {\n        var addClasses = \"\";\n        if (switchOptions.classNames) {\n          addClasses =\n            \" js-Pjax-add \" +\n            switchOptions.classNames.add +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.forward\n              : switchOptions.classNames.backward);\n        }\n        if (switchOptions.callbacks && switchOptions.callbacks.addElement) {\n          switchOptions.callbacks.addElement(el);\n        }\n        el.className += addClasses;\n        el.setAttribute(\"data-pjax-classes\", addClasses);\n        elsToAdd.push(el);\n        fragToAppend.appendChild(el);\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    // pass all className of the parent\n    oldEl.className = newEl.className;\n    oldEl.appendChild(fragToAppend);\n  }\n};\n\n},{\"./events/on\":3}],17:[function(require,module,exports){\nmodule.exports = (function() {\n  var counter = 0;\n  return function() {\n    var id = \"pjax\" + new Date().getTime() + \"_\" + counter;\n    counter++;\n    return id;\n  };\n})();\n\n},{}],18:[function(require,module,exports){\nmodule.exports = function(obj) {\n  /* istanbul ignore if */\n  if (null === obj || \"object\" !== typeof obj) {\n    return obj;\n  }\n  var copy = obj.constructor();\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) {\n      copy[attr] = obj[attr];\n    }\n  }\n  return copy;\n};\n\n},{}],19:[function(require,module,exports){\nmodule.exports = function contains(doc, selectors, el) {\n  for (var i = 0; i < selectors.length; i++) {\n    var selectedEls = doc.querySelectorAll(selectors[i]);\n    for (var j = 0; j < selectedEls.length; j++) {\n      if (selectedEls[j].contains(el)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n},{}],20:[function(require,module,exports){\nmodule.exports = function(target) {\n  if (target == null) {\n    return null;\n  }\n\n  var to = Object(target);\n\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    if (source != null) {\n      for (var key in source) {\n        // Avoid bugs when hasOwnProperty is shadowed\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          to[key] = source[key];\n        }\n      }\n    }\n  }\n  return to;\n};\n\n},{}],21:[function(require,module,exports){\nmodule.exports = function() {};\n\n},{}],22:[function(require,module,exports){\nmodule.exports = function(uri, key, value) {\n  var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n  var separator = uri.indexOf(\"?\") !== -1 ? \"&\" : \"?\";\n  if (uri.match(re)) {\n    return uri.replace(re, \"$1\" + key + \"=\" + value + \"$2\");\n  } else {\n    return uri + separator + key + \"=\" + value;\n  }\n};\n\n},{}]},{},[1])(1)\n});\n","date":"2023-06-15T18:42:17.934Z","updated":"2023-06-15T18:42:17.934Z","path":"lib/pjax/pjax.js","layout":"false","title":"","comments":1,"_id":"clixi467p001o37jx8stnh92l","content":"(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pjax = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n// var executeScripts = require(\"./lib/execute-scripts\");  // unused-var\nvar forEachEls = require(\"./lib/foreach-els\");\nvar parseOptions = require(\"./lib/parse-options\");\nvar switches = require(\"./lib/switches\");\nvar newUid = require(\"./lib/uniqueid\");\n\nvar on = require(\"./lib/events/on\");\nvar trigger = require(\"./lib/events/trigger\");\n\nvar clone = require(\"./lib/util/clone\");\nvar contains = require(\"./lib/util/contains\");\nvar extend = require(\"./lib/util/extend\");\nvar noop = require(\"./lib/util/noop\");\n\nvar Pjax = function(options) {\n  this.state = {\n    numPendingSwitches: 0,\n    href: null,\n    options: null\n  };\n\n  this.options = parseOptions(options);\n  this.log(\"Pjax options\", this.options);\n\n  if (this.options.scrollRestoration && \"scrollRestoration\" in history) {\n    history.scrollRestoration = \"manual\";\n  }\n\n  this.maxUid = this.lastUid = newUid();\n\n  this.parseDOM(document);\n\n  on(\n    window,\n    \"popstate\",\n    function(st) {\n      if (st.state) {\n        var opt = clone(this.options);\n        opt.url = st.state.url;\n        opt.title = st.state.title;\n        // Since state already exists, prevent it from being pushed again\n        opt.history = false;\n        opt.scrollPos = st.state.scrollPos;\n        if (st.state.uid < this.lastUid) {\n          opt.backward = true;\n        } else {\n          opt.forward = true;\n        }\n        this.lastUid = st.state.uid;\n\n        // @todo implement history cache here, based on uid\n        this.loadUrl(st.state.url, opt);\n      }\n    }.bind(this)\n  );\n};\n\nPjax.switches = switches;\n\nPjax.prototype = {\n  log: require(\"./lib/proto/log\"),\n\n  getElements: function(el) {\n    return el.querySelectorAll(this.options.elements);\n  },\n\n  parseDOM: function(el) {\n    var parseElement = require(\"./lib/proto/parse-element\");\n    forEachEls(this.getElements(el), parseElement, this);\n  },\n\n  refresh: function(el) {\n    this.parseDOM(el || document);\n  },\n\n  reload: function() {\n    window.location.reload();\n  },\n\n  attachLink: require(\"./lib/proto/attach-link\"),\n\n  attachForm: require(\"./lib/proto/attach-form\"),\n\n  forEachSelectors: function(cb, context, DOMcontext) {\n    return require(\"./lib/foreach-selectors\").bind(this)(\n      this.options.selectors,\n      cb,\n      context,\n      DOMcontext\n    );\n  },\n\n  switchSelectors: function(selectors, fromEl, toEl, options) {\n    return require(\"./lib/switches-selectors\").bind(this)(\n      this.options.switches,\n      this.options.switchesOptions,\n      selectors,\n      fromEl,\n      toEl,\n      options\n    );\n  },\n\n  latestChance: function(href) {\n    window.location = href;\n  },\n\n  onSwitch: function() {\n    trigger(window, \"resize scroll\");\n\n    this.state.numPendingSwitches--;\n\n    // debounce calls, so we only run this once after all switches are finished.\n    if (this.state.numPendingSwitches === 0) {\n      this.afterAllSwitches();\n    }\n  },\n\n  loadContent: function(html, options) {\n    if (typeof html !== \"string\") {\n      trigger(document, \"pjax:complete pjax:error\", options);\n\n      return;\n    }\n\n    var tmpEl = document.implementation.createHTMLDocument(\"pjax\");\n\n    // parse HTML attributes to copy them\n    // since we are forced to use documentElement.innerHTML (outerHTML can't be used for <html>)\n    var htmlRegex = /<html[^>]+>/gi;\n    var htmlAttribsRegex = /\\s?[a-z:]+(?:=['\"][^'\">]+['\"])*/gi;\n    var matches = html.match(htmlRegex);\n    if (matches && matches.length) {\n      matches = matches[0].match(htmlAttribsRegex);\n      if (matches.length) {\n        matches.shift();\n        matches.forEach(function(htmlAttrib) {\n          var attr = htmlAttrib.trim().split(\"=\");\n          if (attr.length === 1) {\n            tmpEl.documentElement.setAttribute(attr[0], true);\n          } else {\n            tmpEl.documentElement.setAttribute(attr[0], attr[1].slice(1, -1));\n          }\n        });\n      }\n    }\n\n    tmpEl.documentElement.innerHTML = html;\n    this.log(\n      \"load content\",\n      tmpEl.documentElement.attributes,\n      tmpEl.documentElement.innerHTML.length\n    );\n\n    // Clear out any focused controls before inserting new page contents.\n    if (\n      document.activeElement &&\n      contains(document, this.options.selectors, document.activeElement)\n    ) {\n      try {\n        document.activeElement.blur();\n      } catch (e) {} // eslint-disable-line no-empty\n    }\n\n    this.switchSelectors(this.options.selectors, tmpEl, document, options);\n  },\n\n  abortRequest: require(\"./lib/abort-request\"),\n\n  doRequest: require(\"./lib/send-request\"),\n\n  handleResponse: require(\"./lib/proto/handle-response\"),\n\n  loadUrl: function(href, options) {\n    options =\n      typeof options === \"object\"\n        ? extend({}, this.options, options)\n        : clone(this.options);\n\n    this.log(\"load href\", href, options);\n\n    // Abort any previous request\n    this.abortRequest(this.request);\n\n    trigger(document, \"pjax:send\", options);\n\n    // Do the request\n    this.request = this.doRequest(\n      href,\n      options,\n      this.handleResponse.bind(this)\n    );\n  },\n\n  afterAllSwitches: function() {\n    // FF bug: Won’t autofocus fields that are inserted via JS.\n    // This behavior is incorrect. So if theres no current focus, autofocus\n    // the last field.\n    //\n    // http://www.w3.org/html/wg/drafts/html/master/forms.html\n    var autofocusEl = Array.prototype.slice\n      .call(document.querySelectorAll(\"[autofocus]\"))\n      .pop();\n    if (autofocusEl && document.activeElement !== autofocusEl) {\n      autofocusEl.focus();\n    }\n\n    // execute scripts when DOM have been completely updated\n    this.options.selectors.forEach(function(selector) {\n      forEachEls(document.querySelectorAll(selector), function(el) {\n        // executeScripts(el);\n        if (el === 0) ;  // intentially left blank!\n      });\n    });\n\n    var state = this.state;\n\n    if (state.options.history) {\n      if (!window.history.state) {\n        this.lastUid = this.maxUid = newUid();\n        window.history.replaceState(\n          {\n            url: window.location.href,\n            title: document.title,\n            uid: this.maxUid,\n            scrollPos: [0, 0]\n          },\n          document.title\n        );\n      }\n\n      // Update browser history\n      this.lastUid = this.maxUid = newUid();\n\n      window.history.pushState(\n        {\n          url: state.href,\n          title: state.options.title,\n          uid: this.maxUid,\n          scrollPos: [0, 0]\n        },\n        state.options.title,\n        state.href\n      );\n    }\n\n    this.forEachSelectors(function(el) {\n      this.parseDOM(el);\n    }, this);\n\n    // Fire Events\n    trigger(document, \"pjax:complete pjax:success\", state.options);\n\n    if (typeof state.options.analytics === \"function\") {\n      state.options.analytics();\n    }\n\n    if (state.options.history) {\n      // First parse url and check for hash to override scroll\n      var a = document.createElement(\"a\");\n      a.href = this.state.href;\n      if (a.hash) {\n        var name = a.hash.slice(1);\n        name = decodeURIComponent(name);\n\n        var curtop = 0;\n        var target =\n          document.getElementById(name) || document.getElementsByName(name)[0];\n        if (target) {\n          // http://stackoverflow.com/questions/8111094/cross-browser-javascript-function-to-find-actual-position-of-an-element-in-page\n          if (target.offsetParent) {\n            do {\n              curtop += target.offsetTop;\n\n              target = target.offsetParent;\n            } while (target);\n          }\n        }\n        window.scrollTo(0, curtop);\n      } else if (state.options.scrollTo !== false) {\n        // Scroll page to top on new page load\n        if (state.options.scrollTo.length > 1) {\n          window.scrollTo(state.options.scrollTo[0], state.options.scrollTo[1]);\n        } else {\n          window.scrollTo(0, state.options.scrollTo);\n        }\n      }\n    } else if (state.options.scrollRestoration && state.options.scrollPos) {\n      window.scrollTo(state.options.scrollPos[0], state.options.scrollPos[1]);\n    }\n\n    this.state = {\n      numPendingSwitches: 0,\n      href: null,\n      options: null\n    };\n  }\n};\n\nPjax.isSupported = require(\"./lib/is-supported\");\n\n// arguably could do `if( require(\"./lib/is-supported\")()) {` but that might be a little to simple\nif (Pjax.isSupported()) {\n  module.exports = Pjax;\n}\n// if there isn’t required browser functions, returning stupid api\nelse {\n  var stupidPjax = noop;\n  for (var key in Pjax.prototype) {\n    if (\n      Pjax.prototype.hasOwnProperty(key) &&\n      typeof Pjax.prototype[key] === \"function\"\n    ) {\n      stupidPjax[key] = noop;\n    }\n  }\n\n  module.exports = stupidPjax;\n}\n\n},{\"./lib/abort-request\":2,\"./lib/events/on\":3,\"./lib/events/trigger\":4,\"./lib/foreach-els\":5,\"./lib/foreach-selectors\":6,\"./lib/is-supported\":7,\"./lib/parse-options\":8,\"./lib/proto/attach-form\":9,\"./lib/proto/attach-link\":10,\"./lib/proto/handle-response\":11,\"./lib/proto/log\":12,\"./lib/proto/parse-element\":13,\"./lib/send-request\":14,\"./lib/switches\":16,\"./lib/switches-selectors\":15,\"./lib/uniqueid\":17,\"./lib/util/clone\":18,\"./lib/util/contains\":19,\"./lib/util/extend\":20,\"./lib/util/noop\":21}],2:[function(require,module,exports){\nvar noop = require(\"./util/noop\");\n\nmodule.exports = function(request) {\n  if (request && request.readyState < 4) {\n    request.onreadystatechange = noop;\n    request.abort();\n  }\n};\n\n},{\"./util/noop\":21}],3:[function(require,module,exports){\nvar forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, listener, useCapture) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    forEachEls(els, function(el) {\n      el.addEventListener(e, listener, useCapture);\n    });\n  });\n};\n\n},{\"../foreach-els\":5}],4:[function(require,module,exports){\nvar forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, opts) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    var event;\n    event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(e, true, true);\n    event.eventName = e;\n    if (opts) {\n      Object.keys(opts).forEach(function(key) {\n        event[key] = opts[key];\n      });\n    }\n\n    forEachEls(els, function(el) {\n      var domFix = false;\n      if (!el.parentNode && el !== document && el !== window) {\n        // THANK YOU IE (9/10/11)\n        // dispatchEvent doesn't work if the element is not in the DOM\n        domFix = true;\n        document.body.appendChild(el);\n      }\n      el.dispatchEvent(event);\n      if (domFix) {\n        el.parentNode.removeChild(el);\n      }\n    });\n  });\n};\n\n},{\"../foreach-els\":5}],5:[function(require,module,exports){\n/* global HTMLCollection: true */\n\nmodule.exports = function(els, fn, context) {\n  if (\n    els instanceof HTMLCollection ||\n    els instanceof NodeList ||\n    els instanceof Array\n  ) {\n    return Array.prototype.forEach.call(els, fn, context);\n  }\n  // assume simple DOM element\n  return fn.call(context, els);\n};\n\n},{}],6:[function(require,module,exports){\nvar forEachEls = require(\"./foreach-els\");\n\nmodule.exports = function(selectors, cb, context, DOMcontext) {\n  DOMcontext = DOMcontext || document;\n  selectors.forEach(function(selector) {\n    forEachEls(DOMcontext.querySelectorAll(selector), cb, context);\n  });\n};\n\n},{\"./foreach-els\":5}],7:[function(require,module,exports){\nmodule.exports = function() {\n  // Borrowed wholesale from https://github.com/defunkt/jquery-pjax\n  return (\n    window.history &&\n    window.history.pushState &&\n    window.history.replaceState &&\n    // pushState isn’t reliable on iOS until 5.\n    !navigator.userAgent.match(\n      /((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/\n    )\n  );\n};\n\n},{}],8:[function(require,module,exports){\n/* global _gaq: true, ga: true */\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(options) {\n  options = options || {};\n  options.elements = options.elements || \"a[href], form[action]\";\n  options.selectors = options.selectors || [\"title\", \".js-Pjax\"];\n  options.switches = options.switches || {};\n  options.switchesOptions = options.switchesOptions || {};\n  options.history =\n    typeof options.history === \"undefined\" ? true : options.history;\n  options.analytics =\n    typeof options.analytics === \"function\" || options.analytics === false\n      ? options.analytics\n      : defaultAnalytics;\n  options.scrollTo =\n    typeof options.scrollTo === \"undefined\" ? 0 : options.scrollTo;\n  options.scrollRestoration =\n    typeof options.scrollRestoration !== \"undefined\"\n      ? options.scrollRestoration\n      : true;\n  options.cacheBust =\n    typeof options.cacheBust === \"undefined\" ? true : options.cacheBust;\n  options.debug = options.debug || false;\n  options.timeout = options.timeout || 0;\n  options.currentUrlFullReload =\n    typeof options.currentUrlFullReload === \"undefined\"\n      ? false\n      : options.currentUrlFullReload;\n\n  // We can’t replace body.outerHTML or head.outerHTML.\n  // It creates a bug where a new body or head are created in the DOM.\n  // If you set head.outerHTML, a new body tag is appended, so the DOM has 2 body nodes, and vice versa\n  if (!options.switches.head) {\n    options.switches.head = defaultSwitches.switchElementsAlt;\n  }\n  if (!options.switches.body) {\n    options.switches.body = defaultSwitches.switchElementsAlt;\n  }\n\n  return options;\n};\n\n/* istanbul ignore next */\nfunction defaultAnalytics() {\n  if (window._gaq) {\n    _gaq.push([\"_trackPageview\"]);\n  }\n  if (window.ga) {\n    ga(\"send\", \"pageview\", { page: location.pathname, title: document.title });\n  }\n}\n\n},{\"./switches\":16}],9:[function(require,module,exports){\nvar on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar formAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  // Initialize requestOptions\n  options.requestOptions = {\n    requestUrl: el.getAttribute(\"action\") || window.location.href,\n    requestMethod: el.getAttribute(\"method\") || \"GET\"\n  };\n\n  // create a testable virtual link of the form action\n  var virtLinkElement = document.createElement(\"a\");\n  virtLinkElement.setAttribute(\"href\", options.requestOptions.requestUrl);\n\n  var attrValue = checkIfShouldAbort(virtLinkElement, options);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  if (el.enctype === \"multipart/form-data\") {\n    options.requestOptions.formData = new FormData(el);\n  } else {\n    options.requestOptions.requestParams = parseFormElements(el);\n  }\n\n  el.setAttribute(attrState, \"submit\");\n\n  options.triggerElement = el;\n  this.loadUrl(virtLinkElement.href, options);\n};\n\nfunction parseFormElements(el) {\n  var requestParams = [];\n  var formElements = el.elements;\n\n  for (var i = 0; i < formElements.length; i++) {\n    var element = formElements[i];\n    var tagName = element.tagName.toLowerCase();\n    // jscs:disable disallowImplicitTypeConversion\n    if (\n      !!element.name &&\n      element.attributes !== undefined &&\n      tagName !== \"button\"\n    ) {\n      // jscs:enable disallowImplicitTypeConversion\n      var type = element.attributes.type;\n\n      if (\n        !type ||\n        (type.value !== \"checkbox\" && type.value !== \"radio\") ||\n        element.checked\n      ) {\n        // Build array of values to submit\n        var values = [];\n\n        if (tagName === \"select\") {\n          var opt;\n\n          for (var j = 0; j < element.options.length; j++) {\n            opt = element.options[j];\n            if (opt.selected && !opt.disabled) {\n              values.push(opt.hasAttribute(\"value\") ? opt.value : opt.text);\n            }\n          }\n        } else {\n          values.push(element.value);\n        }\n\n        for (var k = 0; k < values.length; k++) {\n          requestParams.push({\n            name: encodeURIComponent(element.name),\n            value: encodeURIComponent(values[k])\n          });\n        }\n      }\n    }\n  }\n\n  return requestParams;\n}\n\nfunction checkIfShouldAbort(virtLinkElement, options) {\n  // Ignore external links.\n  if (\n    virtLinkElement.protocol !== window.location.protocol ||\n    virtLinkElement.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore click if we are on an anchor on the same page\n  if (\n    virtLinkElement.hash &&\n    virtLinkElement.href.replace(virtLinkElement.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (virtLinkElement.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n\n  // if declared as a full reload, just normally submit the form\n  if (\n    options.currentUrlFullReload &&\n    virtLinkElement.href === window.location.href.split(\"#\")[0]\n  ) {\n    return \"reload\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"submit\", function(event) {\n    formAction.call(that, el, event);\n  });\n};\n\n},{\"../events/on\":3,\"../util/clone\":18}],10:[function(require,module,exports){\nvar on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar linkAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  var attrValue = checkIfShouldAbort(el, event);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  // don’t do \"nothing\" if user try to reload the page by clicking the same link twice\n  if (\n    this.options.currentUrlFullReload &&\n    el.href === window.location.href.split(\"#\")[0]\n  ) {\n    el.setAttribute(attrState, \"reload\");\n    this.reload();\n    return;\n  }\n\n  el.setAttribute(attrState, \"load\");\n\n  options.triggerElement = el;\n  this.loadUrl(el.href, options);\n};\n\nfunction checkIfShouldAbort(el, event) {\n  // Don’t break browser special behavior on links (like page in new window)\n  if (\n    event.which > 1 ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey\n  ) {\n    return \"modifier\";\n  }\n\n  // we do test on href now to prevent unexpected behavior if for some reason\n  // user have href that can be dynamically updated\n\n  // Ignore external links.\n  if (\n    el.protocol !== window.location.protocol ||\n    el.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore anchors on the same page (keep native behavior)\n  if (\n    el.hash &&\n    el.href.replace(el.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (el.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"click\", function(event) {\n    linkAction.call(that, el, event);\n  });\n\n  on(\n    el,\n    \"keyup\",\n    function(event) {\n      if (event.keyCode === 13) {\n        linkAction.call(that, el, event);\n      }\n    }.bind(this)\n  );\n};\n\n},{\"../events/on\":3,\"../util/clone\":18}],11:[function(require,module,exports){\nvar clone = require(\"../util/clone\");\nvar newUid = require(\"../uniqueid\");\nvar trigger = require(\"../events/trigger\");\n\nmodule.exports = function(responseText, request, href, options) {\n  options = clone(options || this.options);\n  options.request = request;\n\n  // Fail if unable to load HTML via AJAX\n  if (responseText === false) {\n    trigger(document, \"pjax:complete pjax:error\", options);\n\n    return;\n  }\n\n  // push scroll position to history\n  var currentState = window.history.state || {};\n  window.history.replaceState(\n    {\n      url: currentState.url || window.location.href,\n      title: currentState.title || document.title,\n      uid: currentState.uid || newUid(),\n      scrollPos: [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop\n      ]\n    },\n    document.title,\n    window.location.href\n  );\n\n  // Check for redirects\n  var oldHref = href;\n  if (request.responseURL) {\n    if (href !== request.responseURL) {\n      href = request.responseURL;\n    }\n  } else if (request.getResponseHeader(\"X-PJAX-URL\")) {\n    href = request.getResponseHeader(\"X-PJAX-URL\");\n  } else if (request.getResponseHeader(\"X-XHR-Redirected-To\")) {\n    href = request.getResponseHeader(\"X-XHR-Redirected-To\");\n  }\n\n  // Add back the hash if it was removed\n  var a = document.createElement(\"a\");\n  a.href = oldHref;\n  var oldHash = a.hash;\n  a.href = href;\n  if (oldHash && !a.hash) {\n    a.hash = oldHash;\n    href = a.href;\n  }\n\n  this.state.href = href;\n  this.state.options = options;\n\n  try {\n    this.loadContent(responseText, options);\n  } catch (e) {\n    trigger(document, \"pjax:error\", options);\n\n    if (!this.options.debug) {\n      if (console && console.error) {\n        console.error(\"Pjax switch fail: \", e);\n      }\n      return this.latestChance(href);\n    } else {\n      throw e;\n    }\n  }\n};\n\n},{\"../events/trigger\":4,\"../uniqueid\":17,\"../util/clone\":18}],12:[function(require,module,exports){\nmodule.exports = function() {\n  if (this.options.debug && console) {\n    if (typeof console.log === \"function\") {\n      console.log.apply(console, arguments);\n    }\n    // IE is weird\n    else if (console.log) {\n      console.log(arguments);\n    }\n  }\n};\n\n},{}],13:[function(require,module,exports){\nvar attrState = \"data-pjax-state\";\n\nmodule.exports = function(el) {\n  switch (el.tagName.toLowerCase()) {\n    case \"a\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachLink(el);\n      }\n      break;\n\n    case \"form\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachForm(el);\n      }\n      break;\n\n    default:\n      throw \"Pjax can only be applied on <a> or <form> submit\";\n  }\n};\n\n},{}],14:[function(require,module,exports){\nvar updateQueryString = require(\"./util/update-query-string\");\n\nmodule.exports = function(location, options, callback) {\n  options = options || {};\n  var queryString;\n  var requestOptions = options.requestOptions || {};\n  var requestMethod = (requestOptions.requestMethod || \"GET\").toUpperCase();\n  var requestParams = requestOptions.requestParams || null;\n  var formData = requestOptions.formData || null;\n  var requestPayload = null;\n  var request = new XMLHttpRequest();\n  var timeout = options.timeout || 0;\n\n  request.onreadystatechange = function() {\n    if (request.readyState === 4) {\n      if (request.status === 200) {\n        callback(request.responseText, request, location, options);\n      } else if (request.status !== 0) {\n        callback(null, request, location, options);\n      }\n    }\n  };\n\n  request.onerror = function(e) {\n    console.log(e);\n    callback(null, request, location, options);\n  };\n\n  request.ontimeout = function() {\n    callback(null, request, location, options);\n  };\n\n  // Prepare the request payload for forms, if available\n  if (requestParams && requestParams.length) {\n    // Build query string\n    queryString = requestParams\n      .map(function(param) {\n        return param.name + \"=\" + param.value;\n      })\n      .join(\"&\");\n\n    switch (requestMethod) {\n      case \"GET\":\n        // Reset query string to avoid an issue with repeat submissions where checkboxes that were\n        // previously checked are incorrectly preserved\n        location = location.split(\"?\")[0];\n\n        // Append new query string\n        location += \"?\" + queryString;\n        break;\n\n      case \"POST\":\n        // Send query string as request payload\n        requestPayload = queryString;\n        break;\n    }\n  } else if (formData) {\n    requestPayload = formData;\n  }\n\n  // Add a timestamp as part of the query string if cache busting is enabled\n  if (options.cacheBust) {\n    location = updateQueryString(location, \"t\", Date.now());\n  }\n\n  request.open(requestMethod, location, true);\n  request.timeout = timeout;\n  request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n  request.setRequestHeader(\"X-PJAX\", \"true\");\n  request.setRequestHeader(\n    \"X-PJAX-Selectors\",\n    JSON.stringify(options.selectors)\n  );\n\n  // Send the proper header information for POST forms\n  if (requestPayload && requestMethod === \"POST\" && !formData) {\n    request.setRequestHeader(\n      \"Content-Type\",\n      \"application/x-www-form-urlencoded\"\n    );\n  }\n\n  request.send(requestPayload);\n\n  return request;\n};\n\n},{\"./util/update-query-string\":22}],15:[function(require,module,exports){\nvar forEachEls = require(\"./foreach-els\");\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(\n  switches,\n  switchesOptions,\n  selectors,\n  fromEl,\n  toEl,\n  options\n) {\n  var switchesQueue = [];\n\n  selectors.forEach(function(selector) {\n    var newEls = fromEl.querySelectorAll(selector);\n    var oldEls = toEl.querySelectorAll(selector);\n    if (this.log) {\n      this.log(\"Pjax switch\", selector, newEls, oldEls);\n    }\n    if (newEls.length !== oldEls.length) {\n      throw \"DOM doesn’t look the same on new loaded page: ’\" +\n        selector +\n        \"’ - new \" +\n        newEls.length +\n        \", old \" +\n        oldEls.length;\n    }\n\n    forEachEls(\n      newEls,\n      function(newEl, i) {\n        var oldEl = oldEls[i];\n        if (this.log) {\n          this.log(\"newEl\", newEl, \"oldEl\", oldEl);\n        }\n\n        var callback = switches[selector]\n          ? switches[selector].bind(\n              this,\n              oldEl,\n              newEl,\n              options,\n              switchesOptions[selector]\n            )\n          : defaultSwitches.outerHTML.bind(this, oldEl, newEl, options);\n\n        switchesQueue.push(callback);\n      },\n      this\n    );\n  }, this);\n\n  this.state.numPendingSwitches = switchesQueue.length;\n\n  switchesQueue.forEach(function(queuedSwitch) {\n    queuedSwitch();\n  });\n};\n\n},{\"./foreach-els\":5,\"./switches\":16}],16:[function(require,module,exports){\nvar on = require(\"./events/on\");\n\nmodule.exports = {\n  outerHTML: function(oldEl, newEl) {\n    oldEl.outerHTML = newEl.outerHTML;\n    this.onSwitch();\n  },\n\n  innerHTML: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    if (newEl.className === \"\") {\n      oldEl.removeAttribute(\"class\");\n    } else {\n      //oldEl.className = newEl.className;\n    }\n\n    this.onSwitch();\n  },\n\n  switchElementsAlt: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    // Copy attributes from the new element to the old one\n    if (newEl.hasAttributes()) {\n      var attrs = newEl.attributes;\n      for (var i = 0; i < attrs.length; i++) {\n        oldEl.attributes.setNamedItem(attrs[i].cloneNode());\n      }\n    }\n\n    this.onSwitch();\n  },\n\n  // Equivalent to outerHTML(), but doesn't require switchElementsAlt() for <head> and <body>\n  replaceNode: function(oldEl, newEl) {\n    oldEl.parentNode.replaceChild(newEl, oldEl);\n    this.onSwitch();\n  },\n\n  sideBySide: function(oldEl, newEl, options, switchOptions) {\n    var forEach = Array.prototype.forEach;\n    var elsToRemove = [];\n    var elsToAdd = [];\n    var fragToAppend = document.createDocumentFragment();\n    var animationEventNames =\n      \"animationend webkitAnimationEnd MSAnimationEnd oanimationend\";\n    var animatedElsNumber = 0;\n    var sexyAnimationEnd = function(e) {\n      if (e.target !== e.currentTarget) {\n        // end triggered by an animation on a child\n        return;\n      }\n\n      animatedElsNumber--;\n      if (animatedElsNumber <= 0 && elsToRemove) {\n        elsToRemove.forEach(function(el) {\n          // browsing quickly can make the el\n          // already removed by last page update ?\n          if (el.parentNode) {\n            el.parentNode.removeChild(el);\n          }\n        });\n\n        elsToAdd.forEach(function(el) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        });\n\n        elsToAdd = null; // free memory\n        elsToRemove = null; // free memory\n\n        // this is to trigger some repaint (example: picturefill)\n        this.onSwitch();\n      }\n    }.bind(this);\n\n    switchOptions = switchOptions || {};\n\n    forEach.call(oldEl.childNodes, function(el) {\n      elsToRemove.push(el);\n      if (el.classList && !el.classList.contains(\"js-Pjax-remove\")) {\n        // for fast switch, clean element that just have been added, & not cleaned yet.\n        if (el.hasAttribute(\"data-pjax-classes\")) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        }\n        el.classList.add(\"js-Pjax-remove\");\n        if (switchOptions.callbacks && switchOptions.callbacks.removeElement) {\n          switchOptions.callbacks.removeElement(el);\n        }\n        if (switchOptions.classNames) {\n          el.className +=\n            \" \" +\n            switchOptions.classNames.remove +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.backward\n              : switchOptions.classNames.forward);\n        }\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    forEach.call(newEl.childNodes, function(el) {\n      if (el.classList) {\n        var addClasses = \"\";\n        if (switchOptions.classNames) {\n          addClasses =\n            \" js-Pjax-add \" +\n            switchOptions.classNames.add +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.forward\n              : switchOptions.classNames.backward);\n        }\n        if (switchOptions.callbacks && switchOptions.callbacks.addElement) {\n          switchOptions.callbacks.addElement(el);\n        }\n        el.className += addClasses;\n        el.setAttribute(\"data-pjax-classes\", addClasses);\n        elsToAdd.push(el);\n        fragToAppend.appendChild(el);\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    // pass all className of the parent\n    oldEl.className = newEl.className;\n    oldEl.appendChild(fragToAppend);\n  }\n};\n\n},{\"./events/on\":3}],17:[function(require,module,exports){\nmodule.exports = (function() {\n  var counter = 0;\n  return function() {\n    var id = \"pjax\" + new Date().getTime() + \"_\" + counter;\n    counter++;\n    return id;\n  };\n})();\n\n},{}],18:[function(require,module,exports){\nmodule.exports = function(obj) {\n  /* istanbul ignore if */\n  if (null === obj || \"object\" !== typeof obj) {\n    return obj;\n  }\n  var copy = obj.constructor();\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) {\n      copy[attr] = obj[attr];\n    }\n  }\n  return copy;\n};\n\n},{}],19:[function(require,module,exports){\nmodule.exports = function contains(doc, selectors, el) {\n  for (var i = 0; i < selectors.length; i++) {\n    var selectedEls = doc.querySelectorAll(selectors[i]);\n    for (var j = 0; j < selectedEls.length; j++) {\n      if (selectedEls[j].contains(el)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n},{}],20:[function(require,module,exports){\nmodule.exports = function(target) {\n  if (target == null) {\n    return null;\n  }\n\n  var to = Object(target);\n\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    if (source != null) {\n      for (var key in source) {\n        // Avoid bugs when hasOwnProperty is shadowed\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          to[key] = source[key];\n        }\n      }\n    }\n  }\n  return to;\n};\n\n},{}],21:[function(require,module,exports){\nmodule.exports = function() {};\n\n},{}],22:[function(require,module,exports){\nmodule.exports = function(uri, key, value) {\n  var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n  var separator = uri.indexOf(\"?\") !== -1 ? \"&\" : \"?\";\n  if (uri.match(re)) {\n    return uri.replace(re, \"$1\" + key + \"=\" + value + \"$2\");\n  } else {\n    return uri + separator + key + \"=\" + value;\n  }\n};\n\n},{}]},{},[1])(1)\n});\n","site":{"data":{}},"length":8164,"excerpt":"","more":"(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Pjax = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n// var executeScripts = require(\"./lib/execute-scripts\");  // unused-var\nvar forEachEls = require(\"./lib/foreach-els\");\nvar parseOptions = require(\"./lib/parse-options\");\nvar switches = require(\"./lib/switches\");\nvar newUid = require(\"./lib/uniqueid\");\n\nvar on = require(\"./lib/events/on\");\nvar trigger = require(\"./lib/events/trigger\");\n\nvar clone = require(\"./lib/util/clone\");\nvar contains = require(\"./lib/util/contains\");\nvar extend = require(\"./lib/util/extend\");\nvar noop = require(\"./lib/util/noop\");\n\nvar Pjax = function(options) {\n  this.state = {\n    numPendingSwitches: 0,\n    href: null,\n    options: null\n  };\n\n  this.options = parseOptions(options);\n  this.log(\"Pjax options\", this.options);\n\n  if (this.options.scrollRestoration && \"scrollRestoration\" in history) {\n    history.scrollRestoration = \"manual\";\n  }\n\n  this.maxUid = this.lastUid = newUid();\n\n  this.parseDOM(document);\n\n  on(\n    window,\n    \"popstate\",\n    function(st) {\n      if (st.state) {\n        var opt = clone(this.options);\n        opt.url = st.state.url;\n        opt.title = st.state.title;\n        // Since state already exists, prevent it from being pushed again\n        opt.history = false;\n        opt.scrollPos = st.state.scrollPos;\n        if (st.state.uid < this.lastUid) {\n          opt.backward = true;\n        } else {\n          opt.forward = true;\n        }\n        this.lastUid = st.state.uid;\n\n        // @todo implement history cache here, based on uid\n        this.loadUrl(st.state.url, opt);\n      }\n    }.bind(this)\n  );\n};\n\nPjax.switches = switches;\n\nPjax.prototype = {\n  log: require(\"./lib/proto/log\"),\n\n  getElements: function(el) {\n    return el.querySelectorAll(this.options.elements);\n  },\n\n  parseDOM: function(el) {\n    var parseElement = require(\"./lib/proto/parse-element\");\n    forEachEls(this.getElements(el), parseElement, this);\n  },\n\n  refresh: function(el) {\n    this.parseDOM(el || document);\n  },\n\n  reload: function() {\n    window.location.reload();\n  },\n\n  attachLink: require(\"./lib/proto/attach-link\"),\n\n  attachForm: require(\"./lib/proto/attach-form\"),\n\n  forEachSelectors: function(cb, context, DOMcontext) {\n    return require(\"./lib/foreach-selectors\").bind(this)(\n      this.options.selectors,\n      cb,\n      context,\n      DOMcontext\n    );\n  },\n\n  switchSelectors: function(selectors, fromEl, toEl, options) {\n    return require(\"./lib/switches-selectors\").bind(this)(\n      this.options.switches,\n      this.options.switchesOptions,\n      selectors,\n      fromEl,\n      toEl,\n      options\n    );\n  },\n\n  latestChance: function(href) {\n    window.location = href;\n  },\n\n  onSwitch: function() {\n    trigger(window, \"resize scroll\");\n\n    this.state.numPendingSwitches--;\n\n    // debounce calls, so we only run this once after all switches are finished.\n    if (this.state.numPendingSwitches === 0) {\n      this.afterAllSwitches();\n    }\n  },\n\n  loadContent: function(html, options) {\n    if (typeof html !== \"string\") {\n      trigger(document, \"pjax:complete pjax:error\", options);\n\n      return;\n    }\n\n    var tmpEl = document.implementation.createHTMLDocument(\"pjax\");\n\n    // parse HTML attributes to copy them\n    // since we are forced to use documentElement.innerHTML (outerHTML can't be used for <html>)\n    var htmlRegex = /<html[^>]+>/gi;\n    var htmlAttribsRegex = /\\s?[a-z:]+(?:=['\"][^'\">]+['\"])*/gi;\n    var matches = html.match(htmlRegex);\n    if (matches && matches.length) {\n      matches = matches[0].match(htmlAttribsRegex);\n      if (matches.length) {\n        matches.shift();\n        matches.forEach(function(htmlAttrib) {\n          var attr = htmlAttrib.trim().split(\"=\");\n          if (attr.length === 1) {\n            tmpEl.documentElement.setAttribute(attr[0], true);\n          } else {\n            tmpEl.documentElement.setAttribute(attr[0], attr[1].slice(1, -1));\n          }\n        });\n      }\n    }\n\n    tmpEl.documentElement.innerHTML = html;\n    this.log(\n      \"load content\",\n      tmpEl.documentElement.attributes,\n      tmpEl.documentElement.innerHTML.length\n    );\n\n    // Clear out any focused controls before inserting new page contents.\n    if (\n      document.activeElement &&\n      contains(document, this.options.selectors, document.activeElement)\n    ) {\n      try {\n        document.activeElement.blur();\n      } catch (e) {} // eslint-disable-line no-empty\n    }\n\n    this.switchSelectors(this.options.selectors, tmpEl, document, options);\n  },\n\n  abortRequest: require(\"./lib/abort-request\"),\n\n  doRequest: require(\"./lib/send-request\"),\n\n  handleResponse: require(\"./lib/proto/handle-response\"),\n\n  loadUrl: function(href, options) {\n    options =\n      typeof options === \"object\"\n        ? extend({}, this.options, options)\n        : clone(this.options);\n\n    this.log(\"load href\", href, options);\n\n    // Abort any previous request\n    this.abortRequest(this.request);\n\n    trigger(document, \"pjax:send\", options);\n\n    // Do the request\n    this.request = this.doRequest(\n      href,\n      options,\n      this.handleResponse.bind(this)\n    );\n  },\n\n  afterAllSwitches: function() {\n    // FF bug: Won’t autofocus fields that are inserted via JS.\n    // This behavior is incorrect. So if theres no current focus, autofocus\n    // the last field.\n    //\n    // http://www.w3.org/html/wg/drafts/html/master/forms.html\n    var autofocusEl = Array.prototype.slice\n      .call(document.querySelectorAll(\"[autofocus]\"))\n      .pop();\n    if (autofocusEl && document.activeElement !== autofocusEl) {\n      autofocusEl.focus();\n    }\n\n    // execute scripts when DOM have been completely updated\n    this.options.selectors.forEach(function(selector) {\n      forEachEls(document.querySelectorAll(selector), function(el) {\n        // executeScripts(el);\n        if (el === 0) ;  // intentially left blank!\n      });\n    });\n\n    var state = this.state;\n\n    if (state.options.history) {\n      if (!window.history.state) {\n        this.lastUid = this.maxUid = newUid();\n        window.history.replaceState(\n          {\n            url: window.location.href,\n            title: document.title,\n            uid: this.maxUid,\n            scrollPos: [0, 0]\n          },\n          document.title\n        );\n      }\n\n      // Update browser history\n      this.lastUid = this.maxUid = newUid();\n\n      window.history.pushState(\n        {\n          url: state.href,\n          title: state.options.title,\n          uid: this.maxUid,\n          scrollPos: [0, 0]\n        },\n        state.options.title,\n        state.href\n      );\n    }\n\n    this.forEachSelectors(function(el) {\n      this.parseDOM(el);\n    }, this);\n\n    // Fire Events\n    trigger(document, \"pjax:complete pjax:success\", state.options);\n\n    if (typeof state.options.analytics === \"function\") {\n      state.options.analytics();\n    }\n\n    if (state.options.history) {\n      // First parse url and check for hash to override scroll\n      var a = document.createElement(\"a\");\n      a.href = this.state.href;\n      if (a.hash) {\n        var name = a.hash.slice(1);\n        name = decodeURIComponent(name);\n\n        var curtop = 0;\n        var target =\n          document.getElementById(name) || document.getElementsByName(name)[0];\n        if (target) {\n          // http://stackoverflow.com/questions/8111094/cross-browser-javascript-function-to-find-actual-position-of-an-element-in-page\n          if (target.offsetParent) {\n            do {\n              curtop += target.offsetTop;\n\n              target = target.offsetParent;\n            } while (target);\n          }\n        }\n        window.scrollTo(0, curtop);\n      } else if (state.options.scrollTo !== false) {\n        // Scroll page to top on new page load\n        if (state.options.scrollTo.length > 1) {\n          window.scrollTo(state.options.scrollTo[0], state.options.scrollTo[1]);\n        } else {\n          window.scrollTo(0, state.options.scrollTo);\n        }\n      }\n    } else if (state.options.scrollRestoration && state.options.scrollPos) {\n      window.scrollTo(state.options.scrollPos[0], state.options.scrollPos[1]);\n    }\n\n    this.state = {\n      numPendingSwitches: 0,\n      href: null,\n      options: null\n    };\n  }\n};\n\nPjax.isSupported = require(\"./lib/is-supported\");\n\n// arguably could do `if( require(\"./lib/is-supported\")()) {` but that might be a little to simple\nif (Pjax.isSupported()) {\n  module.exports = Pjax;\n}\n// if there isn’t required browser functions, returning stupid api\nelse {\n  var stupidPjax = noop;\n  for (var key in Pjax.prototype) {\n    if (\n      Pjax.prototype.hasOwnProperty(key) &&\n      typeof Pjax.prototype[key] === \"function\"\n    ) {\n      stupidPjax[key] = noop;\n    }\n  }\n\n  module.exports = stupidPjax;\n}\n\n},{\"./lib/abort-request\":2,\"./lib/events/on\":3,\"./lib/events/trigger\":4,\"./lib/foreach-els\":5,\"./lib/foreach-selectors\":6,\"./lib/is-supported\":7,\"./lib/parse-options\":8,\"./lib/proto/attach-form\":9,\"./lib/proto/attach-link\":10,\"./lib/proto/handle-response\":11,\"./lib/proto/log\":12,\"./lib/proto/parse-element\":13,\"./lib/send-request\":14,\"./lib/switches\":16,\"./lib/switches-selectors\":15,\"./lib/uniqueid\":17,\"./lib/util/clone\":18,\"./lib/util/contains\":19,\"./lib/util/extend\":20,\"./lib/util/noop\":21}],2:[function(require,module,exports){\nvar noop = require(\"./util/noop\");\n\nmodule.exports = function(request) {\n  if (request && request.readyState < 4) {\n    request.onreadystatechange = noop;\n    request.abort();\n  }\n};\n\n},{\"./util/noop\":21}],3:[function(require,module,exports){\nvar forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, listener, useCapture) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    forEachEls(els, function(el) {\n      el.addEventListener(e, listener, useCapture);\n    });\n  });\n};\n\n},{\"../foreach-els\":5}],4:[function(require,module,exports){\nvar forEachEls = require(\"../foreach-els\");\n\nmodule.exports = function(els, events, opts) {\n  events = typeof events === \"string\" ? events.split(\" \") : events;\n\n  events.forEach(function(e) {\n    var event;\n    event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(e, true, true);\n    event.eventName = e;\n    if (opts) {\n      Object.keys(opts).forEach(function(key) {\n        event[key] = opts[key];\n      });\n    }\n\n    forEachEls(els, function(el) {\n      var domFix = false;\n      if (!el.parentNode && el !== document && el !== window) {\n        // THANK YOU IE (9/10/11)\n        // dispatchEvent doesn't work if the element is not in the DOM\n        domFix = true;\n        document.body.appendChild(el);\n      }\n      el.dispatchEvent(event);\n      if (domFix) {\n        el.parentNode.removeChild(el);\n      }\n    });\n  });\n};\n\n},{\"../foreach-els\":5}],5:[function(require,module,exports){\n/* global HTMLCollection: true */\n\nmodule.exports = function(els, fn, context) {\n  if (\n    els instanceof HTMLCollection ||\n    els instanceof NodeList ||\n    els instanceof Array\n  ) {\n    return Array.prototype.forEach.call(els, fn, context);\n  }\n  // assume simple DOM element\n  return fn.call(context, els);\n};\n\n},{}],6:[function(require,module,exports){\nvar forEachEls = require(\"./foreach-els\");\n\nmodule.exports = function(selectors, cb, context, DOMcontext) {\n  DOMcontext = DOMcontext || document;\n  selectors.forEach(function(selector) {\n    forEachEls(DOMcontext.querySelectorAll(selector), cb, context);\n  });\n};\n\n},{\"./foreach-els\":5}],7:[function(require,module,exports){\nmodule.exports = function() {\n  // Borrowed wholesale from https://github.com/defunkt/jquery-pjax\n  return (\n    window.history &&\n    window.history.pushState &&\n    window.history.replaceState &&\n    // pushState isn’t reliable on iOS until 5.\n    !navigator.userAgent.match(\n      /((iPod|iPhone|iPad).+\\bOS\\s+[1-4]\\D|WebApps\\/.+CFNetwork)/\n    )\n  );\n};\n\n},{}],8:[function(require,module,exports){\n/* global _gaq: true, ga: true */\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(options) {\n  options = options || {};\n  options.elements = options.elements || \"a[href], form[action]\";\n  options.selectors = options.selectors || [\"title\", \".js-Pjax\"];\n  options.switches = options.switches || {};\n  options.switchesOptions = options.switchesOptions || {};\n  options.history =\n    typeof options.history === \"undefined\" ? true : options.history;\n  options.analytics =\n    typeof options.analytics === \"function\" || options.analytics === false\n      ? options.analytics\n      : defaultAnalytics;\n  options.scrollTo =\n    typeof options.scrollTo === \"undefined\" ? 0 : options.scrollTo;\n  options.scrollRestoration =\n    typeof options.scrollRestoration !== \"undefined\"\n      ? options.scrollRestoration\n      : true;\n  options.cacheBust =\n    typeof options.cacheBust === \"undefined\" ? true : options.cacheBust;\n  options.debug = options.debug || false;\n  options.timeout = options.timeout || 0;\n  options.currentUrlFullReload =\n    typeof options.currentUrlFullReload === \"undefined\"\n      ? false\n      : options.currentUrlFullReload;\n\n  // We can’t replace body.outerHTML or head.outerHTML.\n  // It creates a bug where a new body or head are created in the DOM.\n  // If you set head.outerHTML, a new body tag is appended, so the DOM has 2 body nodes, and vice versa\n  if (!options.switches.head) {\n    options.switches.head = defaultSwitches.switchElementsAlt;\n  }\n  if (!options.switches.body) {\n    options.switches.body = defaultSwitches.switchElementsAlt;\n  }\n\n  return options;\n};\n\n/* istanbul ignore next */\nfunction defaultAnalytics() {\n  if (window._gaq) {\n    _gaq.push([\"_trackPageview\"]);\n  }\n  if (window.ga) {\n    ga(\"send\", \"pageview\", { page: location.pathname, title: document.title });\n  }\n}\n\n},{\"./switches\":16}],9:[function(require,module,exports){\nvar on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar formAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  // Initialize requestOptions\n  options.requestOptions = {\n    requestUrl: el.getAttribute(\"action\") || window.location.href,\n    requestMethod: el.getAttribute(\"method\") || \"GET\"\n  };\n\n  // create a testable virtual link of the form action\n  var virtLinkElement = document.createElement(\"a\");\n  virtLinkElement.setAttribute(\"href\", options.requestOptions.requestUrl);\n\n  var attrValue = checkIfShouldAbort(virtLinkElement, options);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  if (el.enctype === \"multipart/form-data\") {\n    options.requestOptions.formData = new FormData(el);\n  } else {\n    options.requestOptions.requestParams = parseFormElements(el);\n  }\n\n  el.setAttribute(attrState, \"submit\");\n\n  options.triggerElement = el;\n  this.loadUrl(virtLinkElement.href, options);\n};\n\nfunction parseFormElements(el) {\n  var requestParams = [];\n  var formElements = el.elements;\n\n  for (var i = 0; i < formElements.length; i++) {\n    var element = formElements[i];\n    var tagName = element.tagName.toLowerCase();\n    // jscs:disable disallowImplicitTypeConversion\n    if (\n      !!element.name &&\n      element.attributes !== undefined &&\n      tagName !== \"button\"\n    ) {\n      // jscs:enable disallowImplicitTypeConversion\n      var type = element.attributes.type;\n\n      if (\n        !type ||\n        (type.value !== \"checkbox\" && type.value !== \"radio\") ||\n        element.checked\n      ) {\n        // Build array of values to submit\n        var values = [];\n\n        if (tagName === \"select\") {\n          var opt;\n\n          for (var j = 0; j < element.options.length; j++) {\n            opt = element.options[j];\n            if (opt.selected && !opt.disabled) {\n              values.push(opt.hasAttribute(\"value\") ? opt.value : opt.text);\n            }\n          }\n        } else {\n          values.push(element.value);\n        }\n\n        for (var k = 0; k < values.length; k++) {\n          requestParams.push({\n            name: encodeURIComponent(element.name),\n            value: encodeURIComponent(values[k])\n          });\n        }\n      }\n    }\n  }\n\n  return requestParams;\n}\n\nfunction checkIfShouldAbort(virtLinkElement, options) {\n  // Ignore external links.\n  if (\n    virtLinkElement.protocol !== window.location.protocol ||\n    virtLinkElement.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore click if we are on an anchor on the same page\n  if (\n    virtLinkElement.hash &&\n    virtLinkElement.href.replace(virtLinkElement.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (virtLinkElement.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n\n  // if declared as a full reload, just normally submit the form\n  if (\n    options.currentUrlFullReload &&\n    virtLinkElement.href === window.location.href.split(\"#\")[0]\n  ) {\n    return \"reload\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"submit\", function(event) {\n    formAction.call(that, el, event);\n  });\n};\n\n},{\"../events/on\":3,\"../util/clone\":18}],10:[function(require,module,exports){\nvar on = require(\"../events/on\");\nvar clone = require(\"../util/clone\");\n\nvar attrState = \"data-pjax-state\";\n\nvar linkAction = function(el, event) {\n  if (isDefaultPrevented(event)) {\n    return;\n  }\n\n  // Since loadUrl modifies options and we may add our own modifications below,\n  // clone it so the changes don't persist\n  var options = clone(this.options);\n\n  var attrValue = checkIfShouldAbort(el, event);\n  if (attrValue) {\n    el.setAttribute(attrState, attrValue);\n    return;\n  }\n\n  event.preventDefault();\n\n  // don’t do \"nothing\" if user try to reload the page by clicking the same link twice\n  if (\n    this.options.currentUrlFullReload &&\n    el.href === window.location.href.split(\"#\")[0]\n  ) {\n    el.setAttribute(attrState, \"reload\");\n    this.reload();\n    return;\n  }\n\n  el.setAttribute(attrState, \"load\");\n\n  options.triggerElement = el;\n  this.loadUrl(el.href, options);\n};\n\nfunction checkIfShouldAbort(el, event) {\n  // Don’t break browser special behavior on links (like page in new window)\n  if (\n    event.which > 1 ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey\n  ) {\n    return \"modifier\";\n  }\n\n  // we do test on href now to prevent unexpected behavior if for some reason\n  // user have href that can be dynamically updated\n\n  // Ignore external links.\n  if (\n    el.protocol !== window.location.protocol ||\n    el.host !== window.location.host\n  ) {\n    return \"external\";\n  }\n\n  // Ignore anchors on the same page (keep native behavior)\n  if (\n    el.hash &&\n    el.href.replace(el.hash, \"\") ===\n      window.location.href.replace(location.hash, \"\")\n  ) {\n    return \"anchor\";\n  }\n\n  // Ignore empty anchor \"foo.html#\"\n  if (el.href === window.location.href.split(\"#\")[0] + \"#\") {\n    return \"anchor-empty\";\n  }\n}\n\nvar isDefaultPrevented = function(event) {\n  return event.defaultPrevented || event.returnValue === false;\n};\n\nmodule.exports = function(el) {\n  var that = this;\n\n  el.setAttribute(attrState, \"\");\n\n  on(el, \"click\", function(event) {\n    linkAction.call(that, el, event);\n  });\n\n  on(\n    el,\n    \"keyup\",\n    function(event) {\n      if (event.keyCode === 13) {\n        linkAction.call(that, el, event);\n      }\n    }.bind(this)\n  );\n};\n\n},{\"../events/on\":3,\"../util/clone\":18}],11:[function(require,module,exports){\nvar clone = require(\"../util/clone\");\nvar newUid = require(\"../uniqueid\");\nvar trigger = require(\"../events/trigger\");\n\nmodule.exports = function(responseText, request, href, options) {\n  options = clone(options || this.options);\n  options.request = request;\n\n  // Fail if unable to load HTML via AJAX\n  if (responseText === false) {\n    trigger(document, \"pjax:complete pjax:error\", options);\n\n    return;\n  }\n\n  // push scroll position to history\n  var currentState = window.history.state || {};\n  window.history.replaceState(\n    {\n      url: currentState.url || window.location.href,\n      title: currentState.title || document.title,\n      uid: currentState.uid || newUid(),\n      scrollPos: [\n        document.documentElement.scrollLeft || document.body.scrollLeft,\n        document.documentElement.scrollTop || document.body.scrollTop\n      ]\n    },\n    document.title,\n    window.location.href\n  );\n\n  // Check for redirects\n  var oldHref = href;\n  if (request.responseURL) {\n    if (href !== request.responseURL) {\n      href = request.responseURL;\n    }\n  } else if (request.getResponseHeader(\"X-PJAX-URL\")) {\n    href = request.getResponseHeader(\"X-PJAX-URL\");\n  } else if (request.getResponseHeader(\"X-XHR-Redirected-To\")) {\n    href = request.getResponseHeader(\"X-XHR-Redirected-To\");\n  }\n\n  // Add back the hash if it was removed\n  var a = document.createElement(\"a\");\n  a.href = oldHref;\n  var oldHash = a.hash;\n  a.href = href;\n  if (oldHash && !a.hash) {\n    a.hash = oldHash;\n    href = a.href;\n  }\n\n  this.state.href = href;\n  this.state.options = options;\n\n  try {\n    this.loadContent(responseText, options);\n  } catch (e) {\n    trigger(document, \"pjax:error\", options);\n\n    if (!this.options.debug) {\n      if (console && console.error) {\n        console.error(\"Pjax switch fail: \", e);\n      }\n      return this.latestChance(href);\n    } else {\n      throw e;\n    }\n  }\n};\n\n},{\"../events/trigger\":4,\"../uniqueid\":17,\"../util/clone\":18}],12:[function(require,module,exports){\nmodule.exports = function() {\n  if (this.options.debug && console) {\n    if (typeof console.log === \"function\") {\n      console.log.apply(console, arguments);\n    }\n    // IE is weird\n    else if (console.log) {\n      console.log(arguments);\n    }\n  }\n};\n\n},{}],13:[function(require,module,exports){\nvar attrState = \"data-pjax-state\";\n\nmodule.exports = function(el) {\n  switch (el.tagName.toLowerCase()) {\n    case \"a\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachLink(el);\n      }\n      break;\n\n    case \"form\":\n      // only attach link if el does not already have link attached\n      if (!el.hasAttribute(attrState)) {\n        this.attachForm(el);\n      }\n      break;\n\n    default:\n      throw \"Pjax can only be applied on <a> or <form> submit\";\n  }\n};\n\n},{}],14:[function(require,module,exports){\nvar updateQueryString = require(\"./util/update-query-string\");\n\nmodule.exports = function(location, options, callback) {\n  options = options || {};\n  var queryString;\n  var requestOptions = options.requestOptions || {};\n  var requestMethod = (requestOptions.requestMethod || \"GET\").toUpperCase();\n  var requestParams = requestOptions.requestParams || null;\n  var formData = requestOptions.formData || null;\n  var requestPayload = null;\n  var request = new XMLHttpRequest();\n  var timeout = options.timeout || 0;\n\n  request.onreadystatechange = function() {\n    if (request.readyState === 4) {\n      if (request.status === 200) {\n        callback(request.responseText, request, location, options);\n      } else if (request.status !== 0) {\n        callback(null, request, location, options);\n      }\n    }\n  };\n\n  request.onerror = function(e) {\n    console.log(e);\n    callback(null, request, location, options);\n  };\n\n  request.ontimeout = function() {\n    callback(null, request, location, options);\n  };\n\n  // Prepare the request payload for forms, if available\n  if (requestParams && requestParams.length) {\n    // Build query string\n    queryString = requestParams\n      .map(function(param) {\n        return param.name + \"=\" + param.value;\n      })\n      .join(\"&\");\n\n    switch (requestMethod) {\n      case \"GET\":\n        // Reset query string to avoid an issue with repeat submissions where checkboxes that were\n        // previously checked are incorrectly preserved\n        location = location.split(\"?\")[0];\n\n        // Append new query string\n        location += \"?\" + queryString;\n        break;\n\n      case \"POST\":\n        // Send query string as request payload\n        requestPayload = queryString;\n        break;\n    }\n  } else if (formData) {\n    requestPayload = formData;\n  }\n\n  // Add a timestamp as part of the query string if cache busting is enabled\n  if (options.cacheBust) {\n    location = updateQueryString(location, \"t\", Date.now());\n  }\n\n  request.open(requestMethod, location, true);\n  request.timeout = timeout;\n  request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n  request.setRequestHeader(\"X-PJAX\", \"true\");\n  request.setRequestHeader(\n    \"X-PJAX-Selectors\",\n    JSON.stringify(options.selectors)\n  );\n\n  // Send the proper header information for POST forms\n  if (requestPayload && requestMethod === \"POST\" && !formData) {\n    request.setRequestHeader(\n      \"Content-Type\",\n      \"application/x-www-form-urlencoded\"\n    );\n  }\n\n  request.send(requestPayload);\n\n  return request;\n};\n\n},{\"./util/update-query-string\":22}],15:[function(require,module,exports){\nvar forEachEls = require(\"./foreach-els\");\n\nvar defaultSwitches = require(\"./switches\");\n\nmodule.exports = function(\n  switches,\n  switchesOptions,\n  selectors,\n  fromEl,\n  toEl,\n  options\n) {\n  var switchesQueue = [];\n\n  selectors.forEach(function(selector) {\n    var newEls = fromEl.querySelectorAll(selector);\n    var oldEls = toEl.querySelectorAll(selector);\n    if (this.log) {\n      this.log(\"Pjax switch\", selector, newEls, oldEls);\n    }\n    if (newEls.length !== oldEls.length) {\n      throw \"DOM doesn’t look the same on new loaded page: ’\" +\n        selector +\n        \"’ - new \" +\n        newEls.length +\n        \", old \" +\n        oldEls.length;\n    }\n\n    forEachEls(\n      newEls,\n      function(newEl, i) {\n        var oldEl = oldEls[i];\n        if (this.log) {\n          this.log(\"newEl\", newEl, \"oldEl\", oldEl);\n        }\n\n        var callback = switches[selector]\n          ? switches[selector].bind(\n              this,\n              oldEl,\n              newEl,\n              options,\n              switchesOptions[selector]\n            )\n          : defaultSwitches.outerHTML.bind(this, oldEl, newEl, options);\n\n        switchesQueue.push(callback);\n      },\n      this\n    );\n  }, this);\n\n  this.state.numPendingSwitches = switchesQueue.length;\n\n  switchesQueue.forEach(function(queuedSwitch) {\n    queuedSwitch();\n  });\n};\n\n},{\"./foreach-els\":5,\"./switches\":16}],16:[function(require,module,exports){\nvar on = require(\"./events/on\");\n\nmodule.exports = {\n  outerHTML: function(oldEl, newEl) {\n    oldEl.outerHTML = newEl.outerHTML;\n    this.onSwitch();\n  },\n\n  innerHTML: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    if (newEl.className === \"\") {\n      oldEl.removeAttribute(\"class\");\n    } else {\n      //oldEl.className = newEl.className;\n    }\n\n    this.onSwitch();\n  },\n\n  switchElementsAlt: function(oldEl, newEl) {\n    oldEl.innerHTML = newEl.innerHTML;\n\n    // Copy attributes from the new element to the old one\n    if (newEl.hasAttributes()) {\n      var attrs = newEl.attributes;\n      for (var i = 0; i < attrs.length; i++) {\n        oldEl.attributes.setNamedItem(attrs[i].cloneNode());\n      }\n    }\n\n    this.onSwitch();\n  },\n\n  // Equivalent to outerHTML(), but doesn't require switchElementsAlt() for <head> and <body>\n  replaceNode: function(oldEl, newEl) {\n    oldEl.parentNode.replaceChild(newEl, oldEl);\n    this.onSwitch();\n  },\n\n  sideBySide: function(oldEl, newEl, options, switchOptions) {\n    var forEach = Array.prototype.forEach;\n    var elsToRemove = [];\n    var elsToAdd = [];\n    var fragToAppend = document.createDocumentFragment();\n    var animationEventNames =\n      \"animationend webkitAnimationEnd MSAnimationEnd oanimationend\";\n    var animatedElsNumber = 0;\n    var sexyAnimationEnd = function(e) {\n      if (e.target !== e.currentTarget) {\n        // end triggered by an animation on a child\n        return;\n      }\n\n      animatedElsNumber--;\n      if (animatedElsNumber <= 0 && elsToRemove) {\n        elsToRemove.forEach(function(el) {\n          // browsing quickly can make the el\n          // already removed by last page update ?\n          if (el.parentNode) {\n            el.parentNode.removeChild(el);\n          }\n        });\n\n        elsToAdd.forEach(function(el) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        });\n\n        elsToAdd = null; // free memory\n        elsToRemove = null; // free memory\n\n        // this is to trigger some repaint (example: picturefill)\n        this.onSwitch();\n      }\n    }.bind(this);\n\n    switchOptions = switchOptions || {};\n\n    forEach.call(oldEl.childNodes, function(el) {\n      elsToRemove.push(el);\n      if (el.classList && !el.classList.contains(\"js-Pjax-remove\")) {\n        // for fast switch, clean element that just have been added, & not cleaned yet.\n        if (el.hasAttribute(\"data-pjax-classes\")) {\n          el.className = el.className.replace(\n            el.getAttribute(\"data-pjax-classes\"),\n            \"\"\n          );\n          el.removeAttribute(\"data-pjax-classes\");\n        }\n        el.classList.add(\"js-Pjax-remove\");\n        if (switchOptions.callbacks && switchOptions.callbacks.removeElement) {\n          switchOptions.callbacks.removeElement(el);\n        }\n        if (switchOptions.classNames) {\n          el.className +=\n            \" \" +\n            switchOptions.classNames.remove +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.backward\n              : switchOptions.classNames.forward);\n        }\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    forEach.call(newEl.childNodes, function(el) {\n      if (el.classList) {\n        var addClasses = \"\";\n        if (switchOptions.classNames) {\n          addClasses =\n            \" js-Pjax-add \" +\n            switchOptions.classNames.add +\n            \" \" +\n            (options.backward\n              ? switchOptions.classNames.forward\n              : switchOptions.classNames.backward);\n        }\n        if (switchOptions.callbacks && switchOptions.callbacks.addElement) {\n          switchOptions.callbacks.addElement(el);\n        }\n        el.className += addClasses;\n        el.setAttribute(\"data-pjax-classes\", addClasses);\n        elsToAdd.push(el);\n        fragToAppend.appendChild(el);\n        animatedElsNumber++;\n        on(el, animationEventNames, sexyAnimationEnd, true);\n      }\n    });\n\n    // pass all className of the parent\n    oldEl.className = newEl.className;\n    oldEl.appendChild(fragToAppend);\n  }\n};\n\n},{\"./events/on\":3}],17:[function(require,module,exports){\nmodule.exports = (function() {\n  var counter = 0;\n  return function() {\n    var id = \"pjax\" + new Date().getTime() + \"_\" + counter;\n    counter++;\n    return id;\n  };\n})();\n\n},{}],18:[function(require,module,exports){\nmodule.exports = function(obj) {\n  /* istanbul ignore if */\n  if (null === obj || \"object\" !== typeof obj) {\n    return obj;\n  }\n  var copy = obj.constructor();\n  for (var attr in obj) {\n    if (obj.hasOwnProperty(attr)) {\n      copy[attr] = obj[attr];\n    }\n  }\n  return copy;\n};\n\n},{}],19:[function(require,module,exports){\nmodule.exports = function contains(doc, selectors, el) {\n  for (var i = 0; i < selectors.length; i++) {\n    var selectedEls = doc.querySelectorAll(selectors[i]);\n    for (var j = 0; j < selectedEls.length; j++) {\n      if (selectedEls[j].contains(el)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n},{}],20:[function(require,module,exports){\nmodule.exports = function(target) {\n  if (target == null) {\n    return null;\n  }\n\n  var to = Object(target);\n\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    if (source != null) {\n      for (var key in source) {\n        // Avoid bugs when hasOwnProperty is shadowed\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          to[key] = source[key];\n        }\n      }\n    }\n  }\n  return to;\n};\n\n},{}],21:[function(require,module,exports){\nmodule.exports = function() {};\n\n},{}],22:[function(require,module,exports){\nmodule.exports = function(uri, key, value) {\n  var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n  var separator = uri.indexOf(\"?\") !== -1 ? \"&\" : \"?\";\n  if (uri.match(re)) {\n    return uri.replace(re, \"$1\" + key + \"=\" + value + \"$2\");\n  } else {\n    return uri + separator + key + \"=\" + value;\n  }\n};\n\n},{}]},{},[1])(1)\n});\n"}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-06-15T17:34:19.775Z","updated":"2023-06-15T17:34:19.775Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clixi467d001l37jxea6bg6vu","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"length":367,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}