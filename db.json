{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/addtoany.js","path":"js/third-party/addtoany.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/wavedrom.js","path":"js/third-party/tags/wavedrom.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/404/index.md","hash":"7d88cea71d5ceb3b0f5c86351e7131a6fc28a1d7","modified":1686905063244},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1686905063244},{"_id":"source/_posts/vscode-luogu.md","hash":"880dae4daa06ee4e05f30981c4ccbe000f663a25","modified":1686908728103},{"_id":"source/_posts/随机图片API，但是-chatGPT-写的.md","hash":"0d799b9c7d4ce228af3cfcdf6a6e641c3617efa3","modified":1687029400066},{"_id":"source/about/index.md","hash":"969c451d35b2956da3e83b0180e658a35f7d6bbe","modified":1686907627727},{"_id":"source/categories/index.md","hash":"f2f73f63456b916d03d2378cac5c0d4e367880c3","modified":1686905063244},{"_id":"source/tags/index.md","hash":"4b0d691b3b548fdd400150bd7871cc18af39bcfa","modified":1686905063244},{"_id":"source/CNAME","hash":"0552e286e92bb122385808a07b5b7bb0a02a4625","modified":1686905063244},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"5aa3b0573d47f85b1be7d21ced21c7810b37ecef","modified":1686905181456},{"_id":"node_modules/hexo-theme-next/package.json","hash":"81f58b70b6601e5273c7b21f0751d923c1124180","modified":1686905181332},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1686905181332},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1686905181332},{"_id":"node_modules/hexo-theme-next/README.md","hash":"36c4b25587ca494102323dab5a38de5490451a64","modified":1686905181336},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1686905181336},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"7d0f39e8684284a04bb9808521c87fecda8bd131","modified":1686905181456},{"_id":"node_modules/hexo-theme-next/languages/bn.yml","hash":"9f791494afa263c3e31f14b8a5fa2996dfc834c0","modified":1686905181460},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"79b37df731c29665dee6cd7c90d278e1edfb6e24","modified":1686905181460},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"ba0fd79a2b1d8db01a034180556061745965ff05","modified":1686905181460},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"dffc63ef42e1266b88e0acf08994fd17a9908d53","modified":1686905181460},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"f3ffc444599f4ac92d62e9ed00a1490ebc277d70","modified":1686905181460},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"44cd26479f503751329f6da2ed80cce1bbf18117","modified":1686905181460},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"929df147f4f17d638b07de5fe52ca13e2549ab1c","modified":1686905181460},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"16d716ecfd748def2f6486ef5a82d0ab7ceb4890","modified":1686905181460},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"543222bfc516aab6c33e8534f807972ecb8943a9","modified":1686905181460},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"3cb3687696635ec71b4ca40c5fc43b56acc8843e","modified":1686905181464},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"d345a303310c8a5f4836c3683f3580f861ebd1b4","modified":1686905181464},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"76b8576ce228d540a16b1f0af5af2cce20923194","modified":1686905181464},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"70de366e10ea584ba039d40d6b35ac97f93454ad","modified":1686905181464},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"c6d8de0ff7d8148d09993257cfd3b7aca755696c","modified":1686905181464},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"2d712eedf3f60d04d36c3108cf5a12e2a52e875c","modified":1686905181464},{"_id":"node_modules/hexo-theme-next/languages/th.yml","hash":"6829e998b39f8f143e20b276bb1f62d95a29de58","modified":1686905181464},{"_id":"node_modules/hexo-theme-next/languages/tk.yml","hash":"511726054873f6f8d7ce0d2e803f6731de0ddbe7","modified":1686905181464},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"3ae18cb9c867f5675603e4e6defe0e3708537612","modified":1686905181456},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"a57e4ed089b893a95f5e1ecff17ce625165f4d46","modified":1686905181464},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"ff537047b4b4c3ca9a7b64fa7f428a9942751eeb","modified":1686905181464},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"7ebcba5e1128784195e4681dffc9d34c4e873fec","modified":1686905181464},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"741d7efe0262c9cdc2c648014b55599665d90f6b","modified":1686905181468},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"88ea50eeb9097ab4a87a44981a102d8594feb064","modified":1686905181468},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"4695c87d6b81b3a23d16ad6513d9eaa925f8d8ad","modified":1686905181468},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1686905181336},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"fc0a45112f2dcfc2642404e8934ea32a793c3bd7","modified":1686905181336},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"c68b7343d0f8145010f93351908cc36ef6212ec1","modified":1686905181340},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"dd63e488ae8cc144335a5958acedf6a16edd7a92","modified":1686905181356},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"0bfce9f133f501a9a4837257e3b862b3bbca15be","modified":1686905181376},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"b0660b2af0ac7d3fda14ca4d9f2c9e79ef06c6f9","modified":1686905181368},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"9e16ba20c28a7f2c6bc75aa427f48122301a30aa","modified":1686905181376},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1686905181456},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1686905181332},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":1686905181332},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":1686905181368},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"95822069cce2c4702e035c770b3089bc12a3404c","modified":1686905181372},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"547c62ab14d9e05d2d9116db9048a677fbe1fb6d","modified":1686905181376},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"d0c470b0f6690aa217e9ada848c5e2e73fb27c6f","modified":1686905181344},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"c40760b559c516677c8b11a00ba50c011f2079fd","modified":1686905181348},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1686905181356},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"bc719473ed5948ab6859449d60b8d36cfc1542b4","modified":1686905181368},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"e7f988ecddb2159313699a00827a45eca5622bd4","modified":1686905181380},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":1686905181352},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1686905181380},{"_id":"node_modules/hexo-theme-next/layout/_third-party/addtoany.njk","hash":"ef64c6bfb8540cd874701236b9be47db2496e98e","modified":1686905181336},{"_id":"node_modules/hexo-theme-next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1686905181344},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"bda05391c72f7a25731e762077636c4a97fc4910","modified":1686905181352},{"_id":"node_modules/hexo-theme-next/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1686905181364},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1686905181376},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"bd9ea82376cd87df611ea3ae077875c7c595a3df","modified":1686905181312},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1686905181304},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"9eb5310664759931287dd28ea39165dfb67f12ed","modified":1686905181316},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"964a01bec35a95da974882295cababcb93219b40","modified":1686905181320},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"fdc8a0af90035e89c3fcb754a0eb189b8951a2bc","modified":1686905181324},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"d292b78485e8e8055712b0ed6de7cf559c5fbdcd","modified":1686905181308},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1686905181308},{"_id":"node_modules/hexo-theme-next/scripts/helpers/navigation.js","hash":"78107021101553c3d23e89290f7530b60cf4aa86","modified":1686905181320},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"226fccbe9c93265e65a300e3cb4bf6f9065cfdd7","modified":1686905181320},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-paginator.js","hash":"e86c764b546e4fbb87970cabc4135a56f9ef9fe1","modified":1686905181320},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"fd24abfaba4d91923ddb6aecf0268b216678c8bd","modified":1686905181324},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":1686905181324},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1686905181296},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1686905181300},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1686905181300},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"9ed799c329abf830f623689d7e136991256a24ca","modified":1686905181312},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"1f6aba7820f1fb58b61969485148db21846e1aa9","modified":1686905181312},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1686905181316},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1686905181316},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1686905181316},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1686905181324},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1686905181324},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1686905181328},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1686905181328},{"_id":"node_modules/hexo-theme-next/scripts/tags/wavedrom.js","hash":"b44dfeeb58b41945d469141787f3dbce4b117d08","modified":1686905181332},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":1686905181380},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"83647a6207333b9609ba90b0946b3fa9548e6381","modified":1686905181388},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"921a58577f411cf4eb5cfd66db0a241f8f88578c","modified":1686905181432},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1686905181332},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"9bbdbb0656505acceef9b9895a576164175fe888","modified":1686905181336},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"dadc81256afb127b77eac6763d5ee0ec9c77f0a3","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1686905181380},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1686905181380},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1686905181292},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"ac3c4a7616ea80f0d32d68d6e53233952ba756dc","modified":1686905181332},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1686905181296},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1686905181456},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1686905181304},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1686905181304},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"770d63c26f22705311028a36b52e999cc8a2da82","modified":1686905181320},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"da0f07f9eaaa83de70128b0feaea3fdadb90457a","modified":1686905181320},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1686905181380},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1686905181304},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1686905181456},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"8da52a144060db1a0a088ccb2e6cc8376d1fce70","modified":1686905181348},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"5388b157bba4a40b9312f4a45c6678974ccf0837","modified":1686905181348},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"dd9c4c03e99dfde0dfb8edefcb2c933f2f560efc","modified":1686905181340},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"650de421a8ce4cf685428ffbe0087ff84cbd1356","modified":1686905181348},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"41a8b0cc16f60fa085cb719d07216d86b6bc4bf8","modified":1686905181360},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"ee6fc2f111572d3eeab0a2fecbb2d6b3e37ab26b","modified":1686905181360},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"06480d8ec5f0b87eafd47f082f07968d7282dd5c","modified":1686905181376},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"89825e75cc45e9709fa6ba89883669eedaff6f46","modified":1686905181340},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1686905181340},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1686905181364},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"0f4bc8e257da60f77c0c1738607b2bde55810684","modified":1686905181376},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1686905181376},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"79667fd0be85ee0e0c69e542e4f870b114c96c33","modified":1686905181368},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"c1e33b4889f75acc490af3c8bde0ec56c518ff41","modified":1686905181368},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"9fa47e4fb342811da590ee4adc91cf81118c0a39","modified":1686905181372},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"e0986db00a0201dd3c60570f964829c84ba5bc68","modified":1686905181372},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"e8b8a7c41e9ec612d0c0c73419529d55d1c16256","modified":1686905181372},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-share.njk","hash":"ce90c97f222d9c751a08392e9b14d2bdf0f3df1a","modified":1686905181372},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1686905181336},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1686905181348},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1686905181360},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"70342218473a6e6aa9148de06bfffe121afb8548","modified":1686905181376},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1686905181336},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"a5b8297c2c383124dd6a56e256ecc0c0dcf489be","modified":1686905181344},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1686905181348},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1686905181348},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"f900306497b133e8b098bd9f4b96b93d1d96c185","modified":1686905181352},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/matomo.njk","hash":"4e89648a8ec8194c5823064cbca39c938a799006","modified":1686905181360},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"9dc00fcb0a05899f048eace9f9160b78956655d5","modified":1686905181364},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/plausible.njk","hash":"ef9f2bb7110507f1c4336800af9157d5fa9765bd","modified":1686905181368},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/umami.njk","hash":"3343750682fbd8535e50f8129be3003ad26015b4","modified":1686905181380},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1686905181340},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/gitter.njk","hash":"f8cc14b7aa949999a1faaeb7855e2f20b59a386d","modified":1686905181348},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1686905181380},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1686905181340},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1686905181344},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1686905181344},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1686905181348},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1686905181356},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1686905181360},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1686905181380},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1686905181356},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"1ebf658690468ea197bdd0416eb7cfa4bd0b083a","modified":1686905181356},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1686905181360},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1686905181336},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1686905181360},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1686905181340},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1686905181344},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1686905181356},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1686905181356},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1686905181364},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1686905181368},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/wavedrom.njk","hash":"02202bf563fb5eedde2ccad4d6c5b9109d30a703","modified":1686905181380},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"9ec51eb61f7fee612ffc5252f489003a0fa301fc","modified":1686905181304},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":1686905181312},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1686905181312},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/navigation.js","hash":"dd3562686d95a50375e6fd32e717ccb0d99c1e3d","modified":1686905181320},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"6853e5433e3eaa19ea43fa20b08d956ba4cec4ac","modified":1686905181328},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"64e4024376b51fe81be7ad80235abdf0a83853bd","modified":1686905181328},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"5798cfc8f63665031dd3e01debed051628cec319","modified":1686905181300},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"19a402a225c31edffc50f202a14e0d582d3db23e","modified":1686905181304},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1686905181304},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1686905181308},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"a600a98e7436edeb31e291abca359885567df3c9","modified":1686905181308},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1686905181308},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1686905181312},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1686905181316},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1686905181328},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1686905181408},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"b03ba78c6916ad2f390d55bc1bc18fafb64b0ebf","modified":1686905181324},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"5e1cf39de050964e97fb3ba0825aeec7f4bc36dd","modified":1686905181328},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1686905181328},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"48f4f277946a168d0db1ea02804e85c22ca2c7db","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"c4fc4e862d09221265ab1466085f057be2ad2e4d","modified":1686905181400},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"a1418c9dc8c0f1a0ad4ded0f4627c45bf0db1a10","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1686905181308},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","hash":"ba7ba2c129d1f240c6a22cec3e53f3f22af64b6b","modified":1686905181320},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"7664491542046df9a3887cf40a06e00c0b4086a9","modified":1686905181396},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"2298e521253b3bf376a2412271bc2a7d305051f3","modified":1686905181412},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1686905181440},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1686905181420},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"580aa86ed2ec05a7382338a6eea02e9c740b02a5","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"d0a7c99095f490b0d2ed6b1be43d435960798cec","modified":1686905181400},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1686905181400},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1686905181324},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1686905181428},{"_id":"node_modules/hexo-theme-next/source/js/third-party/addtoany.js","hash":"5276c8f78ee562a8965216dc67d762e59cb4a9f2","modified":1686905181292},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"f4228c759db4a650c8d38745c2edd1dc83c45687","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1686905181448},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"782ee1fc5e669d3ddbfeb82b73ad7fe561f1a4fb","modified":1686905181452},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"9dfe853c901bdc52fc950bacdf15484dbb9bf140","modified":1686905181432},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1686905181404},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1686905181324},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"dafc6d23c80d6fe3e55a7711e94210d2479b629a","modified":1686905181384},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"fa4fd8f76464e214fb7318f325b13c2b62f4b478","modified":1686905181384},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"fb550935d374e0bdf1097fce187337dc05cad3e1","modified":1686905181388},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"485d23ccb42c0d0c8ead7ea8930dd3e06d79a285","modified":1686905181388},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"6569a6640f79d247a8235b3914772c0e2f99ead2","modified":1686905181384},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"b7f48be3c43bfa393d62142544a5487a67871713","modified":1686905181388},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1686905181432},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"3fbfab591f280e2e7f3b0265901c93bc4bd137ed","modified":1686905181384},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"ac2dc0ce9c775a83ef7132ae957b54539366ac9c","modified":1686905181384},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"26a0cba1eee5de45a45a5e14e17707f905390512","modified":1686905181384},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":1686905181388},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"91dbf3ca5c3a613d4e30618c120da535bf2d0336","modified":1686905181396},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1686905181396},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"547c0b5cd5e7ea10d21863d13a6b16579a49396c","modified":1686905181388},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1686905181396},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1686905181432},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1686905181432},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1686905181316},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1686905181312},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1686905181296},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1686905181304},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1686905181300},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1686905181312},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1686905181312},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"da361917d65e5dca8362f8cdeb6c8cc0e8316cec","modified":1686905181308},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1686905181328},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1686905181308},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1686905181308},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1686905181312},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1686905181316},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1686905181328},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1686905181316},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1686905181316},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1686905181316},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1686905181296},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"f27d817b0c2138dd3215b1f46af0753f60a008f3","modified":1686905181320},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1686905181316},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1686905181400},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1686905181308},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1686905181444},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1686905181404},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"098d4bd034e986fcf7e443eac4fc2193935461b7","modified":1686905181416},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1686905181412},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"d757768a58743601d0d84158ba955eb15d4c3c01","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1686905181448},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"1ecfd64507954810b07a9d21fb5305b5378feda0","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"11497388f124bfbb4001495a67d3629a9f618405","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"010c901e4ef49a606f8a350efbf09044e76d2ff3","modified":1686905181440},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1686905181440},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"04cf4a69537fc14d3b8904f965d283356853847f","modified":1686905181440},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"ebfba158a0a4af3d1dabcacbc58986664de52140","modified":1686905181440},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/disqusjs.styl","hash":"877a537d5b95beb048142e4fdee6f17e6ef9c7bb","modified":1686905181404},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"8f094c4ac17e2ab45569b12d157747f9c7333c12","modified":1686905181412},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"77550e0d3e029b7458e35d8c5ae1fbd612c9673b","modified":1686905181416},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1686905181432},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitter.styl","hash":"35104dc6883a61c31e0e368dac8ac2f697be62fe","modified":1686905181412},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"e72799ce3f9b79753e365b2f8c8ef6c310668d4a","modified":1686905181444},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1686905181452},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1686905181400},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1686905181412},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"4e967702cf4c637132346bc74ec8854426f1a68c","modified":1686905181416},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"6e0d0796ef7fbbb62ffdfb448753a850de82c74f","modified":1686905181416},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"b750af2fb833c10c4313b5a4258237161a7833d7","modified":1686905181432},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"a851e9d5aefcd027c95eeb323860b6da70f202d1","modified":1686905181448},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1686905181448},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"da5e88f8debd5ac8d7af5c6ba6240df66104955f","modified":1686905181424},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/related-posts.styl","hash":"b05908f04ef95f2d91e6eba89b12411c378d050f","modified":1686905181444},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":1686905181444},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1686905181444},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"c6a27beb3f741211a14576026f3b4cfc44cc6407","modified":1686905181444},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"b926e368f702f8686aaa2eb98d3d2e533418958c","modified":1686905181444},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"24752d145c6fb8f5344dca9c7b9640839c02e009","modified":1686905181444},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"c2e354a565c8c1b32bd0ceacc972b17982758b67","modified":1686905181448},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"9a7c71560fbdc936ad4e736fe15063ea3e8a644b","modified":1686905181448},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1686905181448},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"670fc109b56a010b166b86b616823a1aae97a738","modified":1686905181404},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"9056be572ec1cfa429abb22be4b45a662d5b0fb1","modified":1686905181424},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1686905181400},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1686905181412},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"22cd37bd5df9972d5074710896aba4424ad5161c","modified":1686905181428},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1686905181432},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1686905181432},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1686905181432},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"7a39bcce7274284e87388743db62afc847fe6897","modified":1686905181448},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"98d4c20aff0f0fcfe1824017fb06ab21ef0d218e","modified":1686905181436},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/wavedrom.styl","hash":"af113411ad9cca7674177be36af8dd399680834d","modified":1686905181456},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/wavedrom.js","hash":"40dcd10df6edf124088c329346e0cc0bdac74ef1","modified":1686905181332},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1686905181324}],"Category":[{"name":"个人备忘","_id":"clj0dnoyo0006j9jxh6m60y4o"},{"name":"coding","_id":"clj0dnoyt0009j9jx1ccyai97"}],"Data":[],"Page":[{"title":"404","date":"2023-06-15T18:14:05.000Z","_content":"  <!DOCTYPE html>\n<meta charset=\"utf-8\"/>\n<script src=\"//cdn.dnpw.org/404/v3.min.js\" maincolor=\"#F00\" tips=\"\" error=\"\" jumptime=\"20\" jumptarget=\"/\" charset=\"utf-8\"></script>\n<script>\nfunction diy(){\n// your js code here\n}\n</script>\n<!--\n欢迎加入404公益，使用说明如下：\nsrc：加载资源域名，递增可能有其他样式；\nmaincolor: 主题色调或高亮色，可配合您站点主色进行配置；\njumptime: 自动跳转时间，单位秒，-1为手动点击跳转；\njumptarget：自动跳转目标网址，默认 / 网站首页；\ntips: 页面短提示，客户端语言为中文默认为“错误提示”，其他为“Oops!”；\nerror：页面长提示，客户端语言为中文默认为“该页面找不到或已被删除”，其他为“The page was not found”；\nfunction diy()}内可以写入自己的javascript代码，用于如修改页面元素等，会在页面加载完成后立即执行；\n你还可以新增CSS代码并利用!important特性，覆盖页面样式；\n项目主页:\nhttps://www.dnpw.org/404\n-->\n","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2023-06-15 18:14:05\n---\n  <!DOCTYPE html>\n<meta charset=\"utf-8\"/>\n<script src=\"//cdn.dnpw.org/404/v3.min.js\" maincolor=\"#F00\" tips=\"\" error=\"\" jumptime=\"20\" jumptarget=\"/\" charset=\"utf-8\"></script>\n<script>\nfunction diy(){\n// your js code here\n}\n</script>\n<!--\n欢迎加入404公益，使用说明如下：\nsrc：加载资源域名，递增可能有其他样式；\nmaincolor: 主题色调或高亮色，可配合您站点主色进行配置；\njumptime: 自动跳转时间，单位秒，-1为手动点击跳转；\njumptarget：自动跳转目标网址，默认 / 网站首页；\ntips: 页面短提示，客户端语言为中文默认为“错误提示”，其他为“Oops!”；\nerror：页面长提示，客户端语言为中文默认为“该页面找不到或已被删除”，其他为“The page was not found”；\nfunction diy()}内可以写入自己的javascript代码，用于如修改页面元素等，会在页面加载完成后立即执行；\n你还可以新增CSS代码并利用!important特性，覆盖页面样式；\n项目主页:\nhttps://www.dnpw.org/404\n-->\n","updated":"2023-06-16T08:44:23.244Z","path":"404/index.html","comments":1,"layout":"page","_id":"clj0dnoyc0000j9jxbzgi3ffg","content":"  <!DOCTYPE html>\n<meta charset=\"utf-8\"/>\n<script src=\"//cdn.dnpw.org/404/v3.min.js\" maincolor=\"#F00\" tips=\"\" error=\"\" jumptime=\"20\" jumptarget=\"/\" charset=\"utf-8\"></script>\n<script>\nfunction diy(){\n// your js code here\n}\n</script>\n<!--\n欢迎加入404公益，使用说明如下：\nsrc：加载资源域名，递增可能有其他样式；\nmaincolor: 主题色调或高亮色，可配合您站点主色进行配置；\njumptime: 自动跳转时间，单位秒，-1为手动点击跳转；\njumptarget：自动跳转目标网址，默认 / 网站首页；\ntips: 页面短提示，客户端语言为中文默认为“错误提示”，其他为“Oops!”；\nerror：页面长提示，客户端语言为中文默认为“该页面找不到或已被删除”，其他为“The page was not found”；\nfunction diy()}内可以写入自己的javascript代码，用于如修改页面元素等，会在页面加载完成后立即执行；\n你还可以新增CSS代码并利用!important特性，覆盖页面样式；\n项目主页:\nhttps://www.dnpw.org/404\n-->\n","site":{"data":{}},"length":31,"excerpt":"","more":"  <!DOCTYPE html>\n<meta charset=\"utf-8\"/>\n<script src=\"//cdn.dnpw.org/404/v3.min.js\" maincolor=\"#F00\" tips=\"\" error=\"\" jumptime=\"20\" jumptarget=\"/\" charset=\"utf-8\"></script>\n<script>\nfunction diy(){\n// your js code here\n}\n</script>\n<!--\n欢迎加入404公益，使用说明如下：\nsrc：加载资源域名，递增可能有其他样式；\nmaincolor: 主题色调或高亮色，可配合您站点主色进行配置；\njumptime: 自动跳转时间，单位秒，-1为手动点击跳转；\njumptarget：自动跳转目标网址，默认 / 网站首页；\ntips: 页面短提示，客户端语言为中文默认为“错误提示”，其他为“Oops!”；\nerror：页面长提示，客户端语言为中文默认为“该页面找不到或已被删除”，其他为“The page was not found”；\nfunction diy()}内可以写入自己的javascript代码，用于如修改页面元素等，会在页面加载完成后立即执行；\n你还可以新增CSS代码并利用!important特性，覆盖页面样式；\n项目主页:\nhttps://www.dnpw.org/404\n-->\n"},{"title":"关于我","date":"2023-06-15T18:16:57.000Z","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2023-06-15 18:16:57\ntype: \"about\"\n---\n","updated":"2023-06-16T09:27:07.727Z","path":"about/index.html","comments":1,"layout":"page","_id":"clj0dnoyj0002j9jx22ebbpxb","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"categories","date":"2023-06-15T18:16:50.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2023-06-15 18:16:50\ntype: \"categories\"\n---\n","updated":"2023-06-16T08:44:23.244Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clj0dnoym0004j9jxh64zccct","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"tags","date":"2023-06-15T18:16:42.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-06-15 18:16:42\ntype: \"tags\"\n---\n","updated":"2023-06-16T08:44:23.244Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clj0dnoyq0007j9jxgsy53fpj","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-06-16T08:44:23.244Z","updated":"2023-06-16T08:44:23.244Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clj0dnoyg0001j9jx0pjfhg59","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"length":367,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"vscode-luogu插件开发个人备忘","date":"2023-06-16T09:43:36.000Z","_content":"先删除 `node_modules` 再执行 `npm install`\n\n发布前需要更新以下这些文件中的版本和CHANGELOG信息：\n* extension.js\n* package.json\n* CHANGELOG.md\n并将代码从dev仓库上传至stable仓库\n\n未完待续\n","source":"_posts/vscode-luogu.md","raw":"---\ntitle: vscode-luogu插件开发个人备忘\ndate: 2023-06-16 09:43:36\ntags:\ncategories: 个人备忘\n---\n先删除 `node_modules` 再执行 `npm install`\n\n发布前需要更新以下这些文件中的版本和CHANGELOG信息：\n* extension.js\n* package.json\n* CHANGELOG.md\n并将代码从dev仓库上传至stable仓库\n\n未完待续\n","slug":"vscode-luogu","published":1,"updated":"2023-06-16T09:45:28.103Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clj0dnoyk0003j9jxfjno4wyw","content":"<p>先删除 <code>node_modules</code> 再执行 <code>npm install</code></p>\n<p>发布前需要更新以下这些文件中的版本和CHANGELOG信息：</p>\n<ul>\n<li>extension.js</li>\n<li>package.json</li>\n<li>CHANGELOG.md<br>并将代码从dev仓库上传至stable仓库</li>\n</ul>\n<p>未完待续</p>\n","site":{"data":{}},"length":119,"excerpt":"","more":"<p>先删除 <code>node_modules</code> 再执行 <code>npm install</code></p>\n<p>发布前需要更新以下这些文件中的版本和CHANGELOG信息：</p>\n<ul>\n<li>extension.js</li>\n<li>package.json</li>\n<li>CHANGELOG.md<br>并将代码从dev仓库上传至stable仓库</li>\n</ul>\n<p>未完待续</p>\n"},{"title":"随机图片API，但是chatGPT写的","date":"2023-06-18T03:12:48.000Z","_content":"\n## 前言\n\n@yltx 这一阵在升级他的博客，需要实现一个从 GitHub 仓库中返回随机图片的 API ，从而实现博客背景的随机更换。在拿着 GitHub 官方的 `octokit` 手撸了一会 cloudflare worker 之后，我懒癌发作，于是开始尝试让 chatGPT 帮我完成这个简单的API。\n\n*篇幅所限，省略了一部分不重要的过程。*\n\n## 编写\n\n第一次用chatGPT写程序，为了逐步引导它，我是这么开头的：\n\n> 编写一个 cloudflare worker 脚本，让我可以获取 GitHub指定 repo 下的目录结构\n\nchatGPT 是这么回答我的：\n\n> 当然！下面是一个示例的 Cloudflare Worker 脚本，可以用于获取 GitHub 指定仓库的目录结构：\n> \n> ```javascript\n> addEventListener('fetch', event => {\n>   event.respondWith(handleRequest(event.request))\n> })\n> \n> async function handleRequest(request) {\n>   const repoOwner = 'OWNER'; // 替换为你的仓库所有者\n>   const repoName = 'REPO'; // 替换为你的仓库名称\n> \n>   // 发起 API 请求获取仓库内容\n>   const response = await fetch(`https://api.github.com/repos/${repoOwner}/${repoName}/contents`);\n> \n>   // 检查响应是否成功\n>   if (!response.ok) {\n>     return new Response(`Failed to fetch repository contents. Status: ${response.status}`, { status: response.status });\n>   }\n> \n>   // 解析 API 响应的 JSON 数据\n>   const data = await response.json();\n> \n>   // 提取目录结构信息\n>   const directories = data.filter(item => item.type === 'file').map(item => item.path);\n> \n>   // 返回目录结构\n>   return new Response(JSON.stringify(directories, null, 2), {\n>     headers: {\n>       'Content-Type': 'application/json',\n>     },\n>   });\n> }\n> ```\n> \n> 请将其中的 `OWNER` 替换为 GitHub 仓库的所有者，`REPO` 替换为仓库名称。完成后，将此脚本部署为 Cloudflare Worker，并将请求指向部署的 Worker 地址，即可获取指定仓库的目录结构。\n> \n> 请注意，这段脚本使用 GitHub 的 REST API v3 进行请求，因此需要考虑 API 请求频率限制和身份验证等问题。如果需要更复杂的功能，例如递归获取所有子目录和文件，可能需要根据实际需求进行进一步开发。\n\n问题出现了，@yltx 的博客部署在 GitHub 的私有 repo 中，这样直接调用 API 显然是没有权限的，于是我提示它：\n\n> API 始终返回403\n\n结果 chatGPT 以为我的 IP 被 block 了，开始教我如何使用代理服务（\n\n这显然不是问题的关键，于是我又提示：\n\n> 不是代理的问题，是不是我没有提供我的 personal token？\n\n这次chatGPT理解了，在代码中加入了如下内容：\n\n```javascript\nconst personalToken = 'PERSONAL_TOKEN'; // 替换为你的个人访问令牌\n\n  // 构建请求的头部\n  const headers = {\n    'Authorization': `Bearer ${personalToken}`,\n    'User-Agent': 'Cloudflare Worker',\n  };\n```\n\n很好！满分！~~甚至 `User-Agent` 都是对的~~\n\n现在，把 chatGPT 编写的 javascript 脚本用 `wrangler` 运行测试一下，效果是这样的：\n\n![](https://blog.wpcwzy.top/uploads/20230618022642.png)\n\n返回的 json 比较复杂，实际只需要随机一个图片并返回 url 就行了。\n\n继续引导它：\n\n> 好的，现在我需要你随机返回其中的一个 url 即可，注意，需要返回 raw.githubusercontent.com 域名的，以便我直接将其设置为图片的 src 属性\n\n于是乎，代码被 chatGPT 改成了这个样子：\n\n```javascript\n  // 提取文件列表信息的直接下载链接\n  const downloadLinks = data.filter(item => item.type === 'file').map(item => item.download_url);\n\n  // 随机选择一个下载链接\n  const randomDownloadLink = downloadLinks[Math.floor(Math.random() * downloadLinks.length)];\n\n  // 返回随机选择的下载链接\n  return new Response(randomDownloadLink, {\n    headers: {\n      'Content-Type': 'text/plain',\n    },\n  });\n```\n\n妙哉！很好用！\n\n但这里又出现了一个小插曲：\n\n@yltx 是通过 CSS 设置背景图的，而 CSS 不能实现先调用 API 再操作 DOM 的功能，所以这个 API 的需求又从返回 url 变成了直接返回图片。\n\n小case！直接把新的需求甩给 chatGPT，一次就输出了正确的代码。\n\n## 最终效果\n\n代码完全体如下：\n\n```javascript\nvar worker_default = {\n  async fetch(request, env, ctx) {\n    const repoOwner = \"wpcwzy\";\n    const repoName = \"***\";\n    const path = \"resources/img\";\n    const personalToken = \"***\";\n    const headers = {\n      \"Authorization\": `Bearer ${personalToken}`,\n      \"User-Agent\": \"Cloudflare Worker\"\n    };\n    const response = await fetch(`https://api.github.com/repos/${repoOwner}/${repoName}/contents/${path}`, { headers });\n    if (!response.ok) {\n      return new Response(`Failed to fetch repository contents. Status: ${response.status}`, { status: response.status });\n    }\n    const data = await response.json();\n    const rawFileLinks = data.filter((item) => item.type === \"file\").map((item) => item.download_url.replace(\"https://github.com\", \"https://raw.githubusercontent.com\"));\n    const randomRawFileLink = rawFileLinks[Math.floor(Math.random() * rawFileLinks.length)];\n    const imageResponse = await fetch(randomRawFileLink);\n    if (!imageResponse.ok) {\n      return new Response(`Failed to fetch image. Status: ${imageResponse.status}`, { status: imageResponse.status });\n    }\n    const imageContent = await imageResponse.arrayBuffer();\n    return new Response(imageContent, {\n      headers: {\n        \"Content-Type\": \"image/png\"\n      }\n    });\n  }\n};\nexport {\n  worker_default as default\n};\n```\n\n浏览器直接打开的效果：\n\n![](https://blog.wpcwzy.top/uploads/20230618023543.png)\n\n博客中的效果大家可以直接点进 [yltx的博客](https://yltx.cf) 瞅一瞅\n\n## 感想总结\n\n1. chatGPT 的确拥有一定的编程能力，能起到不小的辅助作用。我平常较少使用 javascript 语言，但在 chatGPT 的帮助下，可以快速实现一些简单的功能。从速度上来说，简单的 API 让 chatGPT 直接实现也要比人类查阅文档、查阅样例代码再自己编写要快很多。\n\n2. chatGPT 对功能的实现方式很有意思，我在自己编写时，使用了 GitHub 的 `octokit` 库，但是在云函数中使用 npm 库明显是要经过一定配置的，在运维方面稍稍麻烦一些。chatGPT 直接通过 `fetch` GitHub 的 API 来实现，较好配置，而且代码整体都实现的非常优雅，注释也很全面。\n\n3. 这次编写随机图片 API ，没有直接给 chatGPT 说明需求而是有意引导了一下，上来没有让他直接输出图片而是先获取repo文件目录。从整个编写的体验来看，chatGPT 或许拥有不用人工引导，输入简单需求就可直接输出代码的能力，下次可以尝试一下。\n\n最后，感谢 [pengzhile/pandora (github.com)](https://github.com/pengzhile/pandora) 实现的 chatGPT 反代，要不咱会被 openai 的网站整崩溃的（\n","source":"_posts/随机图片API，但是-chatGPT-写的.md","raw":"---\ntitle: 随机图片API，但是chatGPT写的\ndate: 2023-06-18 03:12:48\ntags: [chatGPT,API,随机图片]\ncategories: coding\n---\n\n## 前言\n\n@yltx 这一阵在升级他的博客，需要实现一个从 GitHub 仓库中返回随机图片的 API ，从而实现博客背景的随机更换。在拿着 GitHub 官方的 `octokit` 手撸了一会 cloudflare worker 之后，我懒癌发作，于是开始尝试让 chatGPT 帮我完成这个简单的API。\n\n*篇幅所限，省略了一部分不重要的过程。*\n\n## 编写\n\n第一次用chatGPT写程序，为了逐步引导它，我是这么开头的：\n\n> 编写一个 cloudflare worker 脚本，让我可以获取 GitHub指定 repo 下的目录结构\n\nchatGPT 是这么回答我的：\n\n> 当然！下面是一个示例的 Cloudflare Worker 脚本，可以用于获取 GitHub 指定仓库的目录结构：\n> \n> ```javascript\n> addEventListener('fetch', event => {\n>   event.respondWith(handleRequest(event.request))\n> })\n> \n> async function handleRequest(request) {\n>   const repoOwner = 'OWNER'; // 替换为你的仓库所有者\n>   const repoName = 'REPO'; // 替换为你的仓库名称\n> \n>   // 发起 API 请求获取仓库内容\n>   const response = await fetch(`https://api.github.com/repos/${repoOwner}/${repoName}/contents`);\n> \n>   // 检查响应是否成功\n>   if (!response.ok) {\n>     return new Response(`Failed to fetch repository contents. Status: ${response.status}`, { status: response.status });\n>   }\n> \n>   // 解析 API 响应的 JSON 数据\n>   const data = await response.json();\n> \n>   // 提取目录结构信息\n>   const directories = data.filter(item => item.type === 'file').map(item => item.path);\n> \n>   // 返回目录结构\n>   return new Response(JSON.stringify(directories, null, 2), {\n>     headers: {\n>       'Content-Type': 'application/json',\n>     },\n>   });\n> }\n> ```\n> \n> 请将其中的 `OWNER` 替换为 GitHub 仓库的所有者，`REPO` 替换为仓库名称。完成后，将此脚本部署为 Cloudflare Worker，并将请求指向部署的 Worker 地址，即可获取指定仓库的目录结构。\n> \n> 请注意，这段脚本使用 GitHub 的 REST API v3 进行请求，因此需要考虑 API 请求频率限制和身份验证等问题。如果需要更复杂的功能，例如递归获取所有子目录和文件，可能需要根据实际需求进行进一步开发。\n\n问题出现了，@yltx 的博客部署在 GitHub 的私有 repo 中，这样直接调用 API 显然是没有权限的，于是我提示它：\n\n> API 始终返回403\n\n结果 chatGPT 以为我的 IP 被 block 了，开始教我如何使用代理服务（\n\n这显然不是问题的关键，于是我又提示：\n\n> 不是代理的问题，是不是我没有提供我的 personal token？\n\n这次chatGPT理解了，在代码中加入了如下内容：\n\n```javascript\nconst personalToken = 'PERSONAL_TOKEN'; // 替换为你的个人访问令牌\n\n  // 构建请求的头部\n  const headers = {\n    'Authorization': `Bearer ${personalToken}`,\n    'User-Agent': 'Cloudflare Worker',\n  };\n```\n\n很好！满分！~~甚至 `User-Agent` 都是对的~~\n\n现在，把 chatGPT 编写的 javascript 脚本用 `wrangler` 运行测试一下，效果是这样的：\n\n![](https://blog.wpcwzy.top/uploads/20230618022642.png)\n\n返回的 json 比较复杂，实际只需要随机一个图片并返回 url 就行了。\n\n继续引导它：\n\n> 好的，现在我需要你随机返回其中的一个 url 即可，注意，需要返回 raw.githubusercontent.com 域名的，以便我直接将其设置为图片的 src 属性\n\n于是乎，代码被 chatGPT 改成了这个样子：\n\n```javascript\n  // 提取文件列表信息的直接下载链接\n  const downloadLinks = data.filter(item => item.type === 'file').map(item => item.download_url);\n\n  // 随机选择一个下载链接\n  const randomDownloadLink = downloadLinks[Math.floor(Math.random() * downloadLinks.length)];\n\n  // 返回随机选择的下载链接\n  return new Response(randomDownloadLink, {\n    headers: {\n      'Content-Type': 'text/plain',\n    },\n  });\n```\n\n妙哉！很好用！\n\n但这里又出现了一个小插曲：\n\n@yltx 是通过 CSS 设置背景图的，而 CSS 不能实现先调用 API 再操作 DOM 的功能，所以这个 API 的需求又从返回 url 变成了直接返回图片。\n\n小case！直接把新的需求甩给 chatGPT，一次就输出了正确的代码。\n\n## 最终效果\n\n代码完全体如下：\n\n```javascript\nvar worker_default = {\n  async fetch(request, env, ctx) {\n    const repoOwner = \"wpcwzy\";\n    const repoName = \"***\";\n    const path = \"resources/img\";\n    const personalToken = \"***\";\n    const headers = {\n      \"Authorization\": `Bearer ${personalToken}`,\n      \"User-Agent\": \"Cloudflare Worker\"\n    };\n    const response = await fetch(`https://api.github.com/repos/${repoOwner}/${repoName}/contents/${path}`, { headers });\n    if (!response.ok) {\n      return new Response(`Failed to fetch repository contents. Status: ${response.status}`, { status: response.status });\n    }\n    const data = await response.json();\n    const rawFileLinks = data.filter((item) => item.type === \"file\").map((item) => item.download_url.replace(\"https://github.com\", \"https://raw.githubusercontent.com\"));\n    const randomRawFileLink = rawFileLinks[Math.floor(Math.random() * rawFileLinks.length)];\n    const imageResponse = await fetch(randomRawFileLink);\n    if (!imageResponse.ok) {\n      return new Response(`Failed to fetch image. Status: ${imageResponse.status}`, { status: imageResponse.status });\n    }\n    const imageContent = await imageResponse.arrayBuffer();\n    return new Response(imageContent, {\n      headers: {\n        \"Content-Type\": \"image/png\"\n      }\n    });\n  }\n};\nexport {\n  worker_default as default\n};\n```\n\n浏览器直接打开的效果：\n\n![](https://blog.wpcwzy.top/uploads/20230618023543.png)\n\n博客中的效果大家可以直接点进 [yltx的博客](https://yltx.cf) 瞅一瞅\n\n## 感想总结\n\n1. chatGPT 的确拥有一定的编程能力，能起到不小的辅助作用。我平常较少使用 javascript 语言，但在 chatGPT 的帮助下，可以快速实现一些简单的功能。从速度上来说，简单的 API 让 chatGPT 直接实现也要比人类查阅文档、查阅样例代码再自己编写要快很多。\n\n2. chatGPT 对功能的实现方式很有意思，我在自己编写时，使用了 GitHub 的 `octokit` 库，但是在云函数中使用 npm 库明显是要经过一定配置的，在运维方面稍稍麻烦一些。chatGPT 直接通过 `fetch` GitHub 的 API 来实现，较好配置，而且代码整体都实现的非常优雅，注释也很全面。\n\n3. 这次编写随机图片 API ，没有直接给 chatGPT 说明需求而是有意引导了一下，上来没有让他直接输出图片而是先获取repo文件目录。从整个编写的体验来看，chatGPT 或许拥有不用人工引导，输入简单需求就可直接输出代码的能力，下次可以尝试一下。\n\n最后，感谢 [pengzhile/pandora (github.com)](https://github.com/pengzhile/pandora) 实现的 chatGPT 反代，要不咱会被 openai 的网站整崩溃的（\n","slug":"随机图片API，但是-chatGPT-写的","published":1,"updated":"2023-06-17T19:16:40.066Z","_id":"clj0dnoyn0005j9jxalp063vx","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>@yltx 这一阵在升级他的博客，需要实现一个从 GitHub 仓库中返回随机图片的 API ，从而实现博客背景的随机更换。在拿着 GitHub 官方的 <code>octokit</code> 手撸了一会 cloudflare worker 之后，我懒癌发作，于是开始尝试让 chatGPT 帮我完成这个简单的API。</p>\n<p><em>篇幅所限，省略了一部分不重要的过程。</em></p>\n<h2 id=\"编写\"><a href=\"#编写\" class=\"headerlink\" title=\"编写\"></a>编写</h2><p>第一次用chatGPT写程序，为了逐步引导它，我是这么开头的：</p>\n<blockquote>\n<p>编写一个 cloudflare worker 脚本，让我可以获取 GitHub指定 repo 下的目录结构</p>\n</blockquote>\n<p>chatGPT 是这么回答我的：</p>\n<blockquote>\n<p>当然！下面是一个示例的 Cloudflare Worker 脚本，可以用于获取 GitHub 指定仓库的目录结构：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;fetch&#x27;</span>, <span class=\"function\"><span class=\"params\">event</span> =&gt;</span> &#123;</span><br><span class=\"line\">  event.<span class=\"title function_\">respondWith</span>(<span class=\"title function_\">handleRequest</span>(event.<span class=\"property\">request</span>))</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">handleRequest</span>(<span class=\"params\">request</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> repoOwner = <span class=\"string\">&#x27;OWNER&#x27;</span>; <span class=\"comment\">// 替换为你的仓库所有者</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> repoName = <span class=\"string\">&#x27;REPO&#x27;</span>; <span class=\"comment\">// 替换为你的仓库名称</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 发起 API 请求获取仓库内容</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(<span class=\"string\">`https://api.github.com/repos/<span class=\"subst\">$&#123;repoOwner&#125;</span>/<span class=\"subst\">$&#123;repoName&#125;</span>/contents`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 检查响应是否成功</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!response.<span class=\"property\">ok</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Response</span>(<span class=\"string\">`Failed to fetch repository contents. Status: <span class=\"subst\">$&#123;response.status&#125;</span>`</span>, &#123; <span class=\"attr\">status</span>: response.<span class=\"property\">status</span> &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 解析 API 响应的 JSON 数据</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> response.<span class=\"title function_\">json</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 提取目录结构信息</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> directories = data.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">type</span> === <span class=\"string\">&#x27;file&#x27;</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">path</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 返回目录结构</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Response</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(directories, <span class=\"literal\">null</span>, <span class=\"number\">2</span>), &#123;</span><br><span class=\"line\">    <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>请将其中的 <code>OWNER</code> 替换为 GitHub 仓库的所有者，<code>REPO</code> 替换为仓库名称。完成后，将此脚本部署为 Cloudflare Worker，并将请求指向部署的 Worker 地址，即可获取指定仓库的目录结构。</p>\n<p>请注意，这段脚本使用 GitHub 的 REST API v3 进行请求，因此需要考虑 API 请求频率限制和身份验证等问题。如果需要更复杂的功能，例如递归获取所有子目录和文件，可能需要根据实际需求进行进一步开发。</p>\n</blockquote>\n<p>问题出现了，@yltx 的博客部署在 GitHub 的私有 repo 中，这样直接调用 API 显然是没有权限的，于是我提示它：</p>\n<blockquote>\n<p>API 始终返回403</p>\n</blockquote>\n<p>结果 chatGPT 以为我的 IP 被 block 了，开始教我如何使用代理服务（</p>\n<p>这显然不是问题的关键，于是我又提示：</p>\n<blockquote>\n<p>不是代理的问题，是不是我没有提供我的 personal token？</p>\n</blockquote>\n<p>这次chatGPT理解了，在代码中加入了如下内容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> personalToken = <span class=\"string\">&#x27;PERSONAL_TOKEN&#x27;</span>; <span class=\"comment\">// 替换为你的个人访问令牌</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 构建请求的头部</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Authorization&#x27;</span>: <span class=\"string\">`Bearer <span class=\"subst\">$&#123;personalToken&#125;</span>`</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Cloudflare Worker&#x27;</span>,</span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>很好！满分！<del>甚至 <code>User-Agent</code> 都是对的</del></p>\n<p>现在，把 chatGPT 编写的 javascript 脚本用 <code>wrangler</code> 运行测试一下，效果是这样的：</p>\n<p><img data-src=\"https://blog.wpcwzy.top/uploads/20230618022642.png\"></p>\n<p>返回的 json 比较复杂，实际只需要随机一个图片并返回 url 就行了。</p>\n<p>继续引导它：</p>\n<blockquote>\n<p>好的，现在我需要你随机返回其中的一个 url 即可，注意，需要返回 raw.githubusercontent.com 域名的，以便我直接将其设置为图片的 src 属性</p>\n</blockquote>\n<p>于是乎，代码被 chatGPT 改成了这个样子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 提取文件列表信息的直接下载链接</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> downloadLinks = data.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">type</span> === <span class=\"string\">&#x27;file&#x27;</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">download_url</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 随机选择一个下载链接</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> randomDownloadLink = downloadLinks[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * downloadLinks.<span class=\"property\">length</span>)];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 返回随机选择的下载链接</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Response</span>(randomDownloadLink, &#123;</span><br><span class=\"line\">  <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;text/plain&#x27;</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>妙哉！很好用！</p>\n<p>但这里又出现了一个小插曲：</p>\n<p>@yltx 是通过 CSS 设置背景图的，而 CSS 不能实现先调用 API 再操作 DOM 的功能，所以这个 API 的需求又从返回 url 变成了直接返回图片。</p>\n<p>小case！直接把新的需求甩给 chatGPT，一次就输出了正确的代码。</p>\n<h2 id=\"最终效果\"><a href=\"#最终效果\" class=\"headerlink\" title=\"最终效果\"></a>最终效果</h2><p>代码完全体如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> worker_default = &#123;</span><br><span class=\"line\">  <span class=\"keyword\">async</span> <span class=\"title function_\">fetch</span>(<span class=\"params\">request, env, ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> repoOwner = <span class=\"string\">&quot;wpcwzy&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> repoName = <span class=\"string\">&quot;***&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> path = <span class=\"string\">&quot;resources/img&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> personalToken = <span class=\"string\">&quot;***&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> headers = &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;Authorization&quot;</span>: <span class=\"string\">`Bearer <span class=\"subst\">$&#123;personalToken&#125;</span>`</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Cloudflare Worker&quot;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(<span class=\"string\">`https://api.github.com/repos/<span class=\"subst\">$&#123;repoOwner&#125;</span>/<span class=\"subst\">$&#123;repoName&#125;</span>/contents/<span class=\"subst\">$&#123;path&#125;</span>`</span>, &#123; headers &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!response.<span class=\"property\">ok</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Response</span>(<span class=\"string\">`Failed to fetch repository contents. Status: <span class=\"subst\">$&#123;response.status&#125;</span>`</span>, &#123; <span class=\"attr\">status</span>: response.<span class=\"property\">status</span> &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> response.<span class=\"title function_\">json</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rawFileLinks = data.<span class=\"title function_\">filter</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> item.<span class=\"property\">type</span> === <span class=\"string\">&quot;file&quot;</span>).<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> item.<span class=\"property\">download_url</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;https://github.com&quot;</span>, <span class=\"string\">&quot;https://raw.githubusercontent.com&quot;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">const</span> randomRawFileLink = rawFileLinks[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * rawFileLinks.<span class=\"property\">length</span>)];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> imageResponse = <span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(randomRawFileLink);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!imageResponse.<span class=\"property\">ok</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Response</span>(<span class=\"string\">`Failed to fetch image. Status: <span class=\"subst\">$&#123;imageResponse.status&#125;</span>`</span>, &#123; <span class=\"attr\">status</span>: imageResponse.<span class=\"property\">status</span> &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> imageContent = <span class=\"keyword\">await</span> imageResponse.<span class=\"title function_\">arrayBuffer</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Response</span>(imageContent, &#123;</span><br><span class=\"line\">      <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;Content-Type&quot;</span>: <span class=\"string\">&quot;image/png&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;</span><br><span class=\"line\">  worker_default <span class=\"keyword\">as</span> <span class=\"keyword\">default</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>浏览器直接打开的效果：</p>\n<p><img data-src=\"https://blog.wpcwzy.top/uploads/20230618023543.png\"></p>\n<p>博客中的效果大家可以直接点进 <a href=\"https://yltx.cf/\">yltx的博客</a> 瞅一瞅</p>\n<h2 id=\"感想总结\"><a href=\"#感想总结\" class=\"headerlink\" title=\"感想总结\"></a>感想总结</h2><ol>\n<li><p>chatGPT 的确拥有一定的编程能力，能起到不小的辅助作用。我平常较少使用 javascript 语言，但在 chatGPT 的帮助下，可以快速实现一些简单的功能。从速度上来说，简单的 API 让 chatGPT 直接实现也要比人类查阅文档、查阅样例代码再自己编写要快很多。</p>\n</li>\n<li><p>chatGPT 对功能的实现方式很有意思，我在自己编写时，使用了 GitHub 的 <code>octokit</code> 库，但是在云函数中使用 npm 库明显是要经过一定配置的，在运维方面稍稍麻烦一些。chatGPT 直接通过 <code>fetch</code> GitHub 的 API 来实现，较好配置，而且代码整体都实现的非常优雅，注释也很全面。</p>\n</li>\n<li><p>这次编写随机图片 API ，没有直接给 chatGPT 说明需求而是有意引导了一下，上来没有让他直接输出图片而是先获取repo文件目录。从整个编写的体验来看，chatGPT 或许拥有不用人工引导，输入简单需求就可直接输出代码的能力，下次可以尝试一下。</p>\n</li>\n</ol>\n<p>最后，感谢 <a href=\"https://github.com/pengzhile/pandora\">pengzhile&#x2F;pandora (github.com)</a> 实现的 chatGPT 反代，要不咱会被 openai 的网站整崩溃的（</p>\n","site":{"data":{}},"length":4386,"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>@yltx 这一阵在升级他的博客，需要实现一个从 GitHub 仓库中返回随机图片的 API ，从而实现博客背景的随机更换。在拿着 GitHub 官方的 <code>octokit</code> 手撸了一会 cloudflare worker 之后，我懒癌发作，于是开始尝试让 chatGPT 帮我完成这个简单的API。</p>\n<p><em>篇幅所限，省略了一部分不重要的过程。</em></p>\n<h2 id=\"编写\"><a href=\"#编写\" class=\"headerlink\" title=\"编写\"></a>编写</h2><p>第一次用chatGPT写程序，为了逐步引导它，我是这么开头的：</p>\n<blockquote>\n<p>编写一个 cloudflare worker 脚本，让我可以获取 GitHub指定 repo 下的目录结构</p>\n</blockquote>\n<p>chatGPT 是这么回答我的：</p>\n<blockquote>\n<p>当然！下面是一个示例的 Cloudflare Worker 脚本，可以用于获取 GitHub 指定仓库的目录结构：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;fetch&#x27;</span>, <span class=\"function\"><span class=\"params\">event</span> =&gt;</span> &#123;</span><br><span class=\"line\">  event.<span class=\"title function_\">respondWith</span>(<span class=\"title function_\">handleRequest</span>(event.<span class=\"property\">request</span>))</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">handleRequest</span>(<span class=\"params\">request</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> repoOwner = <span class=\"string\">&#x27;OWNER&#x27;</span>; <span class=\"comment\">// 替换为你的仓库所有者</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> repoName = <span class=\"string\">&#x27;REPO&#x27;</span>; <span class=\"comment\">// 替换为你的仓库名称</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 发起 API 请求获取仓库内容</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(<span class=\"string\">`https://api.github.com/repos/<span class=\"subst\">$&#123;repoOwner&#125;</span>/<span class=\"subst\">$&#123;repoName&#125;</span>/contents`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 检查响应是否成功</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!response.<span class=\"property\">ok</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Response</span>(<span class=\"string\">`Failed to fetch repository contents. Status: <span class=\"subst\">$&#123;response.status&#125;</span>`</span>, &#123; <span class=\"attr\">status</span>: response.<span class=\"property\">status</span> &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 解析 API 响应的 JSON 数据</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> response.<span class=\"title function_\">json</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 提取目录结构信息</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> directories = data.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">type</span> === <span class=\"string\">&#x27;file&#x27;</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">path</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 返回目录结构</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Response</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(directories, <span class=\"literal\">null</span>, <span class=\"number\">2</span>), &#123;</span><br><span class=\"line\">    <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>请将其中的 <code>OWNER</code> 替换为 GitHub 仓库的所有者，<code>REPO</code> 替换为仓库名称。完成后，将此脚本部署为 Cloudflare Worker，并将请求指向部署的 Worker 地址，即可获取指定仓库的目录结构。</p>\n<p>请注意，这段脚本使用 GitHub 的 REST API v3 进行请求，因此需要考虑 API 请求频率限制和身份验证等问题。如果需要更复杂的功能，例如递归获取所有子目录和文件，可能需要根据实际需求进行进一步开发。</p>\n</blockquote>\n<p>问题出现了，@yltx 的博客部署在 GitHub 的私有 repo 中，这样直接调用 API 显然是没有权限的，于是我提示它：</p>\n<blockquote>\n<p>API 始终返回403</p>\n</blockquote>\n<p>结果 chatGPT 以为我的 IP 被 block 了，开始教我如何使用代理服务（</p>\n<p>这显然不是问题的关键，于是我又提示：</p>\n<blockquote>\n<p>不是代理的问题，是不是我没有提供我的 personal token？</p>\n</blockquote>\n<p>这次chatGPT理解了，在代码中加入了如下内容：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> personalToken = <span class=\"string\">&#x27;PERSONAL_TOKEN&#x27;</span>; <span class=\"comment\">// 替换为你的个人访问令牌</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 构建请求的头部</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Authorization&#x27;</span>: <span class=\"string\">`Bearer <span class=\"subst\">$&#123;personalToken&#125;</span>`</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Cloudflare Worker&#x27;</span>,</span><br><span class=\"line\">  &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>很好！满分！<del>甚至 <code>User-Agent</code> 都是对的</del></p>\n<p>现在，把 chatGPT 编写的 javascript 脚本用 <code>wrangler</code> 运行测试一下，效果是这样的：</p>\n<p><img data-src=\"https://blog.wpcwzy.top/uploads/20230618022642.png\"></p>\n<p>返回的 json 比较复杂，实际只需要随机一个图片并返回 url 就行了。</p>\n<p>继续引导它：</p>\n<blockquote>\n<p>好的，现在我需要你随机返回其中的一个 url 即可，注意，需要返回 raw.githubusercontent.com 域名的，以便我直接将其设置为图片的 src 属性</p>\n</blockquote>\n<p>于是乎，代码被 chatGPT 改成了这个样子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 提取文件列表信息的直接下载链接</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> downloadLinks = data.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">type</span> === <span class=\"string\">&#x27;file&#x27;</span>).<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">download_url</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 随机选择一个下载链接</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> randomDownloadLink = downloadLinks[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * downloadLinks.<span class=\"property\">length</span>)];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 返回随机选择的下载链接</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Response</span>(randomDownloadLink, &#123;</span><br><span class=\"line\">  <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;text/plain&#x27;</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>妙哉！很好用！</p>\n<p>但这里又出现了一个小插曲：</p>\n<p>@yltx 是通过 CSS 设置背景图的，而 CSS 不能实现先调用 API 再操作 DOM 的功能，所以这个 API 的需求又从返回 url 变成了直接返回图片。</p>\n<p>小case！直接把新的需求甩给 chatGPT，一次就输出了正确的代码。</p>\n<h2 id=\"最终效果\"><a href=\"#最终效果\" class=\"headerlink\" title=\"最终效果\"></a>最终效果</h2><p>代码完全体如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> worker_default = &#123;</span><br><span class=\"line\">  <span class=\"keyword\">async</span> <span class=\"title function_\">fetch</span>(<span class=\"params\">request, env, ctx</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> repoOwner = <span class=\"string\">&quot;wpcwzy&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> repoName = <span class=\"string\">&quot;***&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> path = <span class=\"string\">&quot;resources/img&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> personalToken = <span class=\"string\">&quot;***&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> headers = &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;Authorization&quot;</span>: <span class=\"string\">`Bearer <span class=\"subst\">$&#123;personalToken&#125;</span>`</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;User-Agent&quot;</span>: <span class=\"string\">&quot;Cloudflare Worker&quot;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(<span class=\"string\">`https://api.github.com/repos/<span class=\"subst\">$&#123;repoOwner&#125;</span>/<span class=\"subst\">$&#123;repoName&#125;</span>/contents/<span class=\"subst\">$&#123;path&#125;</span>`</span>, &#123; headers &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!response.<span class=\"property\">ok</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Response</span>(<span class=\"string\">`Failed to fetch repository contents. Status: <span class=\"subst\">$&#123;response.status&#125;</span>`</span>, &#123; <span class=\"attr\">status</span>: response.<span class=\"property\">status</span> &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> response.<span class=\"title function_\">json</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> rawFileLinks = data.<span class=\"title function_\">filter</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> item.<span class=\"property\">type</span> === <span class=\"string\">&quot;file&quot;</span>).<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> item.<span class=\"property\">download_url</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;https://github.com&quot;</span>, <span class=\"string\">&quot;https://raw.githubusercontent.com&quot;</span>));</span><br><span class=\"line\">    <span class=\"keyword\">const</span> randomRawFileLink = rawFileLinks[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * rawFileLinks.<span class=\"property\">length</span>)];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> imageResponse = <span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(randomRawFileLink);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!imageResponse.<span class=\"property\">ok</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Response</span>(<span class=\"string\">`Failed to fetch image. Status: <span class=\"subst\">$&#123;imageResponse.status&#125;</span>`</span>, &#123; <span class=\"attr\">status</span>: imageResponse.<span class=\"property\">status</span> &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> imageContent = <span class=\"keyword\">await</span> imageResponse.<span class=\"title function_\">arrayBuffer</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Response</span>(imageContent, &#123;</span><br><span class=\"line\">      <span class=\"attr\">headers</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;Content-Type&quot;</span>: <span class=\"string\">&quot;image/png&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123;</span><br><span class=\"line\">  worker_default <span class=\"keyword\">as</span> <span class=\"keyword\">default</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>浏览器直接打开的效果：</p>\n<p><img data-src=\"https://blog.wpcwzy.top/uploads/20230618023543.png\"></p>\n<p>博客中的效果大家可以直接点进 <a href=\"https://yltx.cf/\">yltx的博客</a> 瞅一瞅</p>\n<h2 id=\"感想总结\"><a href=\"#感想总结\" class=\"headerlink\" title=\"感想总结\"></a>感想总结</h2><ol>\n<li><p>chatGPT 的确拥有一定的编程能力，能起到不小的辅助作用。我平常较少使用 javascript 语言，但在 chatGPT 的帮助下，可以快速实现一些简单的功能。从速度上来说，简单的 API 让 chatGPT 直接实现也要比人类查阅文档、查阅样例代码再自己编写要快很多。</p>\n</li>\n<li><p>chatGPT 对功能的实现方式很有意思，我在自己编写时，使用了 GitHub 的 <code>octokit</code> 库，但是在云函数中使用 npm 库明显是要经过一定配置的，在运维方面稍稍麻烦一些。chatGPT 直接通过 <code>fetch</code> GitHub 的 API 来实现，较好配置，而且代码整体都实现的非常优雅，注释也很全面。</p>\n</li>\n<li><p>这次编写随机图片 API ，没有直接给 chatGPT 说明需求而是有意引导了一下，上来没有让他直接输出图片而是先获取repo文件目录。从整个编写的体验来看，chatGPT 或许拥有不用人工引导，输入简单需求就可直接输出代码的能力，下次可以尝试一下。</p>\n</li>\n</ol>\n<p>最后，感谢 <a href=\"https://github.com/pengzhile/pandora\">pengzhile&#x2F;pandora (github.com)</a> 实现的 chatGPT 反代，要不咱会被 openai 的网站整崩溃的（</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clj0dnoyk0003j9jxfjno4wyw","category_id":"clj0dnoyo0006j9jxh6m60y4o","_id":"clj0dnoyt000bj9jxbk14dt54"},{"post_id":"clj0dnoyn0005j9jxalp063vx","category_id":"clj0dnoyt0009j9jx1ccyai97","_id":"clj0dnoyu000cj9jx87612mzj"}],"PostTag":[{"post_id":"clj0dnoyn0005j9jxalp063vx","tag_id":"clj0dqxxx0000kbjxfpnuc5ll","_id":"clj0dqxy10003kbjx67p78mnc"},{"post_id":"clj0dnoyn0005j9jxalp063vx","tag_id":"clj0dqxxz0001kbjx2p874ct7","_id":"clj0dqxy10004kbjx6tu4haft"},{"post_id":"clj0dnoyn0005j9jxalp063vx","tag_id":"clj0dqxy00002kbjxbtnychng","_id":"clj0dqxy10005kbjxcvzffrz6"}],"Tag":[{"name":"chatGPT,API,随机图片","_id":"clj0dnoys0008j9jx4xpi01t3"},{"name":"chatGPT, API, 随机图片","_id":"clj0dp41d0000jljx9u0jh7zx"},{"name":"chatGPT","_id":"clj0dqxxx0000kbjxfpnuc5ll"},{"name":"API","_id":"clj0dqxxz0001kbjx2p874ct7"},{"name":"随机图片","_id":"clj0dqxy00002kbjxbtnychng"}]}}